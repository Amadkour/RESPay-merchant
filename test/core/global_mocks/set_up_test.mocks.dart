// Mocks generated by Mockito 5.3.2 from annotations
// in res_pay/test/core/global_mocks/set_up_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i60;
import 'dart:io' as _i98;
import 'dart:ui' as _i90;

import 'package:dartz/dartz.dart' as _i11;
import 'package:flutter/cupertino.dart' as _i4;
import 'package:flutter_bloc/flutter_bloc.dart' as _i61;
import 'package:flutter_secure_storage/flutter_secure_storage.dart' as _i58;
import 'package:just_audio/just_audio.dart' as _i104;
import 'package:local_auth/local_auth.dart' as _i62;
import 'package:mockito/mockito.dart' as _i1;
import 'package:res_pay_merchant/core/errors/failures.dart' as _i95;
import 'package:res_pay_merchant/core/public_module/cubit/global_cubit.dart' as _i2;
import 'package:res_pay_merchant/core/public_module/provider/model/country.dart' as _i93;
import 'package:res_pay_merchant/core/public_module/provider/model/currency.dart'
    as _i83;
import 'package:res_pay_merchant/core/services/local_storage_service.dart' as _i59;
import 'package:res_pay_merchant/core/services/notification_service.dart' as _i3;
import 'package:res_pay_merchant/features/authentication/modules/login/controller/country_type/country_type_cubit.dart'
    as _i21;
import 'package:res_pay_merchant/features/authentication/modules/login/controller/login_cubit.dart'
    as _i5;
import 'package:res_pay_merchant/features/authentication/modules/login/provider/model/country_type.dart'
    as _i79;
import 'package:res_pay_merchant/features/authentication/modules/login/provider/model/logged_in_user_model.dart'
    as _i121;
import 'package:res_pay_merchant/features/authentication/modules/pin_code/controller/pin_code_cubit.dart'
    as _i6;
import 'package:res_pay_merchant/features/dashboard/modules/home/controller/hom_cubit.dart'
    as _i56;
import 'package:res_pay_merchant/features/dashboard/modules/home/modules/cards/controller/card_limit/card_limit_cubit.dart'
    as _i16;
import 'package:res_pay_merchant/features/dashboard/modules/home/modules/cards/controller/cards_cubit.dart'
    as _i15;
import 'package:res_pay_merchant/features/dashboard/modules/home/modules/cards/provider/model/credit_card_model.dart'
    as _i72;
import 'package:res_pay_merchant/features/dashboard/modules/home/modules/cards/provider/model/transaction_global_model.dart'
    as _i70;
import 'package:res_pay_merchant/features/dashboard/modules/home/modules/notification/controller/notification_cubit.dart'
    as _i13;
import 'package:res_pay_merchant/features/dashboard/modules/home/modules/notification/provider/model/notification_model.dart'
    as _i69;
import 'package:res_pay_merchant/features/dashboard/modules/home/provider/model/limits_model.dart'
    as _i14;
import 'package:res_pay_merchant/features/dashboard/modules/more/controller/more%20cubit/more_cubit.dart'
    as _i87;
import 'package:res_pay_merchant/features/dashboard/modules/more/controller/more%20cubit/more_state.dart'
    as _i27;
import 'package:res_pay_merchant/features/dashboard/modules/more/controller/schedual_cubit/schedual_cubit.dart'
    as _i12;
import 'package:res_pay_merchant/features/dashboard/modules/more/modules/customer_loyality/controller/customer_loyalty_cubit.dart'
    as _i47;
import 'package:res_pay_merchant/features/dashboard/modules/more/modules/customer_loyality/provider/models/customer_loyality_model.dart'
    as _i113;
import 'package:res_pay_merchant/features/dashboard/modules/more/modules/customer_loyality/provider/models/customer_loyalty_list_model.dart'
    as _i112;
import 'package:res_pay_merchant/features/dashboard/modules/more/modules/profile/controller/profile_cubit.dart'
    as _i35;
import 'package:res_pay_merchant/features/dashboard/modules/more/modules/profile/provider/model/profile_model.dart'
    as _i99;
import 'package:res_pay_merchant/features/dashboard/modules/more/modules/profile/provider/repository/profile_repository.dart'
    as _i97;
import 'package:res_pay_merchant/features/dashboard/modules/more/modules/promotions/controller/promotions_cubit.dart'
    as _i20;
import 'package:res_pay_merchant/features/dashboard/modules/more/modules/promotions/provider/repo/promotions_repo.dart'
    as _i77;
import 'package:res_pay_merchant/features/dashboard/modules/more/modules/referral/controller/referral_cubit.dart'
    as _i37;
import 'package:res_pay_merchant/features/dashboard/modules/more/modules/referral/provider/model/referrals.dart'
    as _i100;
import 'package:res_pay_merchant/features/dashboard/modules/more/modules/referral/provider/repo/remote_api_repo.dart'
    as _i36;
import 'package:res_pay_merchant/features/dashboard/modules/more/modules/shipping_location/controller/shipping_location_cubit.dart'
    as _i51;
import 'package:res_pay_merchant/features/dashboard/modules/more/modules/shipping_location/provider/model/address_model.dart'
    as _i117;
import 'package:res_pay_merchant/features/dashboard/modules/more/modules/shipping_location/provider/model/city_model.dart'
    as _i116;
import 'package:res_pay_merchant/features/dashboard/modules/more/modules/support/controller/support_cubit.dart'
    as _i40;
import 'package:res_pay_merchant/features/dashboard/modules/more/modules/support/provider/repo/support_repo.dart'
    as _i107;
import 'package:res_pay_merchant/features/dashboard/modules/more/providers/models/call_days_model.dart'
    as _i67;
import 'package:res_pay_merchant/features/dashboard/modules/more/providers/models/get_time_model.dart'
    as _i68;
import 'package:res_pay_merchant/features/dashboard/modules/more/providers/models/item_model.dart'
    as _i88;
import 'package:res_pay_merchant/features/dashboard/modules/shop/controller/shop_cubit.dart'
    as _i55;
import 'package:res_pay_merchant/features/dashboard/modules/shop/provider/module/shop_model.dart'
    as _i54;
import 'package:res_pay_merchant/features/e_commerce/controller/e_commerce_cubit.dart'
    as _i49;
import 'package:res_pay_merchant/features/e_commerce/modules/cart/controller/cart_cubit.dart'
    as _i52;
import 'package:res_pay_merchant/features/e_commerce/modules/cart/provider/models/cart_model.dart'
    as _i111;
import 'package:res_pay_merchant/features/e_commerce/modules/cart/provider/models/promotions_model.dart'
    as _i78;
import 'package:res_pay_merchant/features/e_commerce/modules/cart/provider/repo/remote_cart_repo.dart'
    as _i118;
import 'package:res_pay_merchant/features/e_commerce/modules/celebrity/controller/celebrity_list_controller/celebrity_cubit_cubit.dart'
    as _i101;
import 'package:res_pay_merchant/features/e_commerce/modules/celebrity/controller/celebrity_list_controller/celebrity_cubit_state.dart'
    as _i39;
import 'package:res_pay_merchant/features/e_commerce/modules/celebrity/provider/enum/gender.dart'
    as _i102;
import 'package:res_pay_merchant/features/e_commerce/modules/celebrity/provider/model/celebrity.dart'
    as _i106;
import 'package:res_pay_merchant/features/e_commerce/modules/celebrity/provider/model/video_shop.dart'
    as _i103;
import 'package:res_pay_merchant/features/e_commerce/modules/checkout/controller/checkout_cubit.dart'
    as _i57;
import 'package:res_pay_merchant/features/e_commerce/modules/favourite/controller/favourite_cubit.dart'
    as _i53;
import 'package:res_pay_merchant/features/e_commerce/modules/favourite/provider/models/favourite_model.dart'
    as _i120;
import 'package:res_pay_merchant/features/e_commerce/modules/favourite/provider/repo/remote_favourite_repo.dart'
    as _i119;
import 'package:res_pay_merchant/features/e_commerce/modules/orders/controller/orders_cubit.dart'
    as _i46;
import 'package:res_pay_merchant/features/e_commerce/modules/orders/provider/model/order_list_model.dart'
    as _i44;
import 'package:res_pay_merchant/features/e_commerce/modules/orders/provider/model/order_model.dart'
    as _i45;
import 'package:res_pay_merchant/features/e_commerce/modules/store_details/controller/store_detail_cubit.dart'
    as _i50;
import 'package:res_pay_merchant/features/e_commerce/modules/store_details/provider/models/shop_product_category_model.dart'
    as _i115;
import 'package:res_pay_merchant/features/e_commerce/modules/store_details/provider/repos/remote_store_detail_repo.dart'
    as _i114;
import 'package:res_pay_merchant/features/e_commerce/provider/models/filter_item.dart'
    as _i48;
import 'package:res_pay_merchant/features/e_commerce/provider/models/product_model.dart'
    as _i105;
import 'package:res_pay_merchant/features/payment/modules/add_card/api/model/payment_method.dart'
    as _i71;
import 'package:res_pay_merchant/features/payment/modules/amount/controller/transaction_amount_cubit.dart'
    as _i23;
import 'package:res_pay_merchant/features/payment/modules/analytics/controller/analytics_cubit.dart'
    as _i28;
import 'package:res_pay_merchant/features/payment/modules/analytics/provider/model/analytics_category.dart'
    as _i91;
import 'package:res_pay_merchant/features/payment/modules/analytics/provider/model/analytics_list_model.dart'
    as _i89;
import 'package:res_pay_merchant/features/payment/modules/bank_name/controller/bank_name_controller/bank_name_cubit.dart'
    as _i22;
import 'package:res_pay_merchant/features/payment/modules/bank_name/provider/model/bank_name.dart'
    as _i81;
import 'package:res_pay_merchant/features/payment/modules/bank_name/provider/repos/bank_name/bank_name_repo.dart'
    as _i80;
import 'package:res_pay_merchant/features/payment/modules/beneficiary/constants.dart'
    as _i94;
import 'package:res_pay_merchant/features/payment/modules/beneficiary/controller/beneficiary_cubit.dart'
    as _i31;
import 'package:res_pay_merchant/features/payment/modules/budget/controller/budget_cubit.dart'
    as _i34;
import 'package:res_pay_merchant/features/payment/modules/budget/provider/model/budget_category_model.dart'
    as _i66;
import 'package:res_pay_merchant/features/payment/modules/budget/provider/model/budget_list_model.dart'
    as _i32;
import 'package:res_pay_merchant/features/payment/modules/budget/provider/model/category_type.dart'
    as _i96;
import 'package:res_pay_merchant/features/payment/modules/budget/provider/model/create_budget_category_input.dart'
    as _i33;
import 'package:res_pay_merchant/features/payment/modules/category/controller/cubit/category_cubit.dart'
    as _i8;
import 'package:res_pay_merchant/features/payment/modules/category/provider/model/category_model.dart'
    as _i82;
import 'package:res_pay_merchant/features/payment/modules/deposit/controller/deposit_cubit.dart'
    as _i19;
import 'package:res_pay_merchant/features/payment/modules/gift/controller/gift_cubit/gift_cubit.dart'
    as _i26;
import 'package:res_pay_merchant/features/payment/modules/gift/provider/model/received_gift_model.dart'
    as _i25;
import 'package:res_pay_merchant/features/payment/modules/gift/provider/repos/gift_repo/gift_repo.dart'
    as _i86;
import 'package:res_pay_merchant/features/payment/modules/history/controller/transaction_history_cubit.dart'
    as _i24;
import 'package:res_pay_merchant/features/payment/modules/history/provider/model/transaction_model.dart'
    as _i84;
import 'package:res_pay_merchant/features/payment/modules/history/provider/model/wallet.dart'
    as _i85;
import 'package:res_pay_merchant/features/payment/modules/pay_bill/controller/bill_cubit.dart'
    as _i30;
import 'package:res_pay_merchant/features/payment/modules/pay_bill/provider/model/bill_summary.dart'
    as _i29;
import 'package:res_pay_merchant/features/payment/modules/pay_bill/provider/repo/bill_repo.dart'
    as _i92;
import 'package:res_pay_merchant/features/payment/modules/request/controller/request_cubit/request_cubit.dart'
    as _i73;
import 'package:res_pay_merchant/features/payment/modules/request/controller/request_cubit/request_state.dart'
    as _i18;
import 'package:res_pay_merchant/features/payment/modules/request/provider/model/money_request_filter_enum.dart'
    as _i75;
import 'package:res_pay_merchant/features/payment/modules/request/provider/model/money_requests_model.dart'
    as _i17;
import 'package:res_pay_merchant/features/payment/modules/request/provider/repos/request_repo.dart'
    as _i74;
import 'package:res_pay_merchant/features/payment/modules/saving/controller/saving_cubit.dart'
    as _i42;
import 'package:res_pay_merchant/features/payment/modules/saving/provider/model/role_model.dart'
    as _i108;
import 'package:res_pay_merchant/features/payment/modules/saving/provider/model/saving_model.dart'
    as _i41;
import 'package:res_pay_merchant/features/payment/modules/saving/provider/model/transaction_model.dart'
    as _i109;
import 'package:res_pay_merchant/features/payment/modules/transfer/busienss/trasnfer_method_types.dart'
    as _i10;
import 'package:res_pay_merchant/features/payment/modules/transfer/controller/transfer_cubit.dart'
    as _i9;
import 'package:res_pay_merchant/features/payment/modules/transfer/controller/transfer_options/transfer_options_cubit.dart'
    as _i7;
import 'package:res_pay_merchant/features/payment/modules/transfer/provider/model/beneficary_model.dart'
    as _i76;
import 'package:res_pay_merchant/features/payment/modules/transfer/provider/model/transfer_category.dart'
    as _i63;
import 'package:res_pay_merchant/features/payment/modules/transfer/provider/model/transfer_options_model.dart'
    as _i65;
import 'package:res_pay_merchant/features/payment/modules/withdraw/controller/withdraw_cubit.dart'
    as _i43;
import 'package:res_pay_merchant/features/payment/modules/withdraw/provider/model/bank_account.dart'
    as _i110;
import 'package:res_pay_merchant/features/payment/view/component/receipt/provider/model/receipt_model.dart'
    as _i64;
import 'package:video_player/video_player.dart' as _i38;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeGlobalState_0 extends _i1.SmartFake implements _i2.GlobalState {
  _FakeGlobalState_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeNotificationService_1 extends _i1.SmartFake
    implements _i3.NotificationService {
  _FakeNotificationService_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeTextEditingController_2 extends _i1.SmartFake
    implements _i4.TextEditingController {
  _FakeTextEditingController_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeFocusNode_3 extends _i1.SmartFake implements _i4.FocusNode {
  _FakeFocusNode_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );

  @override
  String toString({_i4.DiagnosticLevel? minLevel = _i4.DiagnosticLevel.info}) =>
      super.toString();
}

class _FakeGlobalKey_4<T extends _i4.State<_i4.StatefulWidget>>
    extends _i1.SmartFake implements _i4.GlobalKey<T> {
  _FakeGlobalKey_4(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeLoginState_5 extends _i1.SmartFake implements _i5.LoginState {
  _FakeLoginState_5(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakePinCodeState_6 extends _i1.SmartFake implements _i6.PinCodeState {
  _FakePinCodeState_6(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeTransferOptionsCubit_7 extends _i1.SmartFake
    implements _i7.TransferOptionsCubit {
  _FakeTransferOptionsCubit_7(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeCategoryCubit_8 extends _i1.SmartFake implements _i8.CategoryCubit {
  _FakeCategoryCubit_8(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeTransferState_9 extends _i1.SmartFake implements _i9.TransferState {
  _FakeTransferState_9(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeTransferMethodType_10 extends _i1.SmartFake
    implements _i10.TransferMethodType {
  _FakeTransferMethodType_10(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeTransferOptionsState_11 extends _i1.SmartFake
    implements _i7.TransferOptionsState {
  _FakeTransferOptionsState_11(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeOption_12<A> extends _i1.SmartFake implements _i11.Option<A> {
  _FakeOption_12(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeScheduleState_13 extends _i1.SmartFake
    implements _i12.ScheduleState {
  _FakeScheduleState_13(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeNotificationState_14 extends _i1.SmartFake
    implements _i13.NotificationState {
  _FakeNotificationState_14(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakePageController_15 extends _i1.SmartFake
    implements _i4.PageController {
  _FakePageController_15(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeLimitsModel_16 extends _i1.SmartFake implements _i14.LimitsModel {
  _FakeLimitsModel_16(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeCardsState_17 extends _i1.SmartFake implements _i15.CardsState {
  _FakeCardsState_17(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeCardLimitState_18 extends _i1.SmartFake
    implements _i16.CardLimitState {
  _FakeCardLimitState_18(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeMoneyRequestsModel_19 extends _i1.SmartFake
    implements _i17.MoneyRequestsModel {
  _FakeMoneyRequestsModel_19(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeRequestState_20 extends _i1.SmartFake implements _i18.RequestState {
  _FakeRequestState_20(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeDepositState_21 extends _i1.SmartFake implements _i19.DepositState {
  _FakeDepositState_21(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakePromotionsState_22 extends _i1.SmartFake
    implements _i20.PromotionsState {
  _FakePromotionsState_22(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeCountryTypeState_23 extends _i1.SmartFake
    implements _i21.CountryTypeState {
  _FakeCountryTypeState_23(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeBankNameState_24 extends _i1.SmartFake
    implements _i22.BankNameState {
  _FakeBankNameState_24(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeCategoryState_25 extends _i1.SmartFake implements _i8.CategoryState {
  _FakeCategoryState_25(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeTransactionAmountState_26 extends _i1.SmartFake
    implements _i23.TransactionAmountState {
  _FakeTransactionAmountState_26(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeTransactionHistoryState_27 extends _i1.SmartFake
    implements _i24.TransactionHistoryState {
  _FakeTransactionHistoryState_27(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeTodayGifts_28 extends _i1.SmartFake implements _i25.TodayGifts {
  _FakeTodayGifts_28(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGiftState_29 extends _i1.SmartFake implements _i26.GiftState {
  _FakeGiftState_29(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeMoreState_30 extends _i1.SmartFake implements _i27.MoreState {
  _FakeMoreState_30(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeAnalyticsState_31 extends _i1.SmartFake
    implements _i28.AnalyticsState {
  _FakeAnalyticsState_31(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeBillSummaryModel_32 extends _i1.SmartFake
    implements _i29.BillSummaryModel {
  _FakeBillSummaryModel_32(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeBillState_33 extends _i1.SmartFake implements _i30.BillState {
  _FakeBillState_33(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeBeneficiaryState_34 extends _i1.SmartFake
    implements _i31.BeneficiaryState {
  _FakeBeneficiaryState_34(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeBudgetListModel_35 extends _i1.SmartFake
    implements _i32.BudgetListModel {
  _FakeBudgetListModel_35(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeCreateBudgetCategoryInput_36 extends _i1.SmartFake
    implements _i33.CreateBudgetCategoryInput {
  _FakeCreateBudgetCategoryInput_36(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeBudgetState_37 extends _i1.SmartFake implements _i34.BudgetState {
  _FakeBudgetState_37(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeProfileState_38 extends _i1.SmartFake implements _i35.ProfileState {
  _FakeProfileState_38(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeRemoteReferralApiRepo_39 extends _i1.SmartFake
    implements _i36.RemoteReferralApiRepo {
  _FakeRemoteReferralApiRepo_39(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeReferralState_40 extends _i1.SmartFake
    implements _i37.ReferralState {
  _FakeReferralState_40(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeVideoPlayerController_41 extends _i1.SmartFake
    implements _i38.VideoPlayerController {
  _FakeVideoPlayerController_41(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeCelebrityState_42 extends _i1.SmartFake
    implements _i39.CelebrityState {
  _FakeCelebrityState_42(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSupportState_43 extends _i1.SmartFake implements _i40.SupportState {
  _FakeSupportState_43(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSavingModel_44 extends _i1.SmartFake implements _i41.SavingModel {
  _FakeSavingModel_44(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSavingState_45 extends _i1.SmartFake implements _i42.SavingState {
  _FakeSavingState_45(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeWithdrawState_46 extends _i1.SmartFake
    implements _i43.WithdrawState {
  _FakeWithdrawState_46(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeOrderListModel_47 extends _i1.SmartFake
    implements _i44.OrderListModel {
  _FakeOrderListModel_47(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeOrderModel_48 extends _i1.SmartFake implements _i45.OrderModel {
  _FakeOrderModel_48(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeOrdersState_49 extends _i1.SmartFake implements _i46.OrdersState {
  _FakeOrdersState_49(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeCustomerLoyaltyState_50 extends _i1.SmartFake
    implements _i47.CustomerLoyaltyState {
  _FakeCustomerLoyaltyState_50(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeFilterItem_51 extends _i1.SmartFake implements _i48.FilterItem {
  _FakeFilterItem_51(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeECommerceState_52 extends _i1.SmartFake
    implements _i49.ECommerceState {
  _FakeECommerceState_52(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeStoreDetailState_53 extends _i1.SmartFake
    implements _i50.StoreDetailState {
  _FakeStoreDetailState_53(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeShippingLocationState_54 extends _i1.SmartFake
    implements _i51.ShippingLocationState {
  _FakeShippingLocationState_54(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeCartState_55 extends _i1.SmartFake implements _i52.CartState {
  _FakeCartState_55(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeFavoriteState_56 extends _i1.SmartFake
    implements _i53.FavoriteState {
  _FakeFavoriteState_56(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeShopModel_57 extends _i1.SmartFake implements _i54.ShopModel {
  _FakeShopModel_57(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeShopState_58 extends _i1.SmartFake implements _i55.ShopState {
  _FakeShopState_58(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeHomeState_59 extends _i1.SmartFake implements _i56.HomeState {
  _FakeHomeState_59(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeCheckoutState_60 extends _i1.SmartFake
    implements _i57.CheckoutState {
  _FakeCheckoutState_60(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeIOSOptions_61 extends _i1.SmartFake implements _i58.IOSOptions {
  _FakeIOSOptions_61(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeAndroidOptions_62 extends _i1.SmartFake
    implements _i58.AndroidOptions {
  _FakeAndroidOptions_62(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeLinuxOptions_63 extends _i1.SmartFake implements _i58.LinuxOptions {
  _FakeLinuxOptions_63(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeWindowsOptions_64 extends _i1.SmartFake
    implements _i58.WindowsOptions {
  _FakeWindowsOptions_64(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeWebOptions_65 extends _i1.SmartFake implements _i58.WebOptions {
  _FakeWebOptions_65(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeMacOsOptions_66 extends _i1.SmartFake implements _i58.MacOsOptions {
  _FakeMacOsOptions_66(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeLocalStorageService_67 extends _i1.SmartFake
    implements _i59.LocalStorageService {
  _FakeLocalStorageService_67(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [GlobalCubit].
///
/// See the documentation for Mockito's code generation for more information.
class MockGlobalCubit extends _i1.Mock implements _i2.GlobalCubit {
  MockGlobalCubit() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.GlobalState get state => (super.noSuchMethod(
        Invocation.getter(#state),
        returnValue: _FakeGlobalState_0(
          this,
          Invocation.getter(#state),
        ),
      ) as _i2.GlobalState);
  @override
  _i60.Stream<_i2.GlobalState> get stream => (super.noSuchMethod(
        Invocation.getter(#stream),
        returnValue: _i60.Stream<_i2.GlobalState>.empty(),
      ) as _i60.Stream<_i2.GlobalState>);
  @override
  bool get isClosed => (super.noSuchMethod(
        Invocation.getter(#isClosed),
        returnValue: false,
      ) as bool);
  @override
  _i60.Future<void> loadLanguage(String? l) => (super.noSuchMethod(
        Invocation.method(
          #loadLanguage,
          [l],
        ),
        returnValue: _i60.Future<void>.value(),
        returnValueForMissingStub: _i60.Future<void>.value(),
      ) as _i60.Future<void>);
  @override
  _i60.Future<void> changeTextField() => (super.noSuchMethod(
        Invocation.method(
          #changeTextField,
          [],
        ),
        returnValue: _i60.Future<void>.value(),
        returnValueForMissingStub: _i60.Future<void>.value(),
      ) as _i60.Future<void>);
  @override
  void emit(_i2.GlobalState? state) => super.noSuchMethod(
        Invocation.method(
          #emit,
          [state],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void onChange(_i61.Change<_i2.GlobalState>? change) => super.noSuchMethod(
        Invocation.method(
          #onChange,
          [change],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void addError(
    Object? error, [
    StackTrace? stackTrace,
  ]) =>
      super.noSuchMethod(
        Invocation.method(
          #addError,
          [
            error,
            stackTrace,
          ],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void onError(
    Object? error,
    StackTrace? stackTrace,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #onError,
          [
            error,
            stackTrace,
          ],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i60.Future<void> close() => (super.noSuchMethod(
        Invocation.method(
          #close,
          [],
        ),
        returnValue: _i60.Future<void>.value(),
        returnValueForMissingStub: _i60.Future<void>.value(),
      ) as _i60.Future<void>);
}

/// A class which mocks [LoginCubit].
///
/// See the documentation for Mockito's code generation for more information.
class MockLoginCubit extends _i1.Mock implements _i5.LoginCubit {
  MockLoginCubit() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.NotificationService get service => (super.noSuchMethod(
        Invocation.getter(#service),
        returnValue: _FakeNotificationService_1(
          this,
          Invocation.getter(#service),
        ),
      ) as _i3.NotificationService);
  @override
  set service(_i3.NotificationService? _service) => super.noSuchMethod(
        Invocation.setter(
          #service,
          _service,
        ),
        returnValueForMissingStub: null,
      );
  @override
  int get tabIndex => (super.noSuchMethod(
        Invocation.getter(#tabIndex),
        returnValue: 0,
      ) as int);
  @override
  set tabIndex(int? _tabIndex) => super.noSuchMethod(
        Invocation.setter(
          #tabIndex,
          _tabIndex,
        ),
        returnValueForMissingStub: null,
      );
  @override
  String get languageDropDownValue => (super.noSuchMethod(
        Invocation.getter(#languageDropDownValue),
        returnValue: '',
      ) as String);
  @override
  set languageDropDownValue(String? _languageDropDownValue) =>
      super.noSuchMethod(
        Invocation.setter(
          #languageDropDownValue,
          _languageDropDownValue,
        ),
        returnValueForMissingStub: null,
      );
  @override
  bool get isLoginLoading => (super.noSuchMethod(
        Invocation.getter(#isLoginLoading),
        returnValue: false,
      ) as bool);
  @override
  set isLoginLoading(bool? _isLoginLoading) => super.noSuchMethod(
        Invocation.setter(
          #isLoginLoading,
          _isLoginLoading,
        ),
        returnValueForMissingStub: null,
      );
  @override
  bool get securePassword => (super.noSuchMethod(
        Invocation.getter(#securePassword),
        returnValue: false,
      ) as bool);
  @override
  set securePassword(bool? _securePassword) => super.noSuchMethod(
        Invocation.setter(
          #securePassword,
          _securePassword,
        ),
        returnValueForMissingStub: null,
      );
  @override
  String get idError => (super.noSuchMethod(
        Invocation.getter(#idError),
        returnValue: '',
      ) as String);
  @override
  set idError(String? _idError) => super.noSuchMethod(
        Invocation.setter(
          #idError,
          _idError,
        ),
        returnValueForMissingStub: null,
      );
  @override
  String get phoneError => (super.noSuchMethod(
        Invocation.getter(#phoneError),
        returnValue: '',
      ) as String);
  @override
  set phoneError(String? _phoneError) => super.noSuchMethod(
        Invocation.setter(
          #phoneError,
          _phoneError,
        ),
        returnValueForMissingStub: null,
      );
  @override
  String get passwordError => (super.noSuchMethod(
        Invocation.getter(#passwordError),
        returnValue: '',
      ) as String);
  @override
  set passwordError(String? _passwordError) => super.noSuchMethod(
        Invocation.setter(
          #passwordError,
          _passwordError,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i4.TextEditingController get passwordController => (super.noSuchMethod(
        Invocation.getter(#passwordController),
        returnValue: _FakeTextEditingController_2(
          this,
          Invocation.getter(#passwordController),
        ),
      ) as _i4.TextEditingController);
  @override
  _i4.TextEditingController get idController => (super.noSuchMethod(
        Invocation.getter(#idController),
        returnValue: _FakeTextEditingController_2(
          this,
          Invocation.getter(#idController),
        ),
      ) as _i4.TextEditingController);
  @override
  _i4.TextEditingController get phoneNumberController => (super.noSuchMethod(
        Invocation.getter(#phoneNumberController),
        returnValue: _FakeTextEditingController_2(
          this,
          Invocation.getter(#phoneNumberController),
        ),
      ) as _i4.TextEditingController);
  @override
  _i4.TextEditingController get emailController => (super.noSuchMethod(
        Invocation.getter(#emailController),
        returnValue: _FakeTextEditingController_2(
          this,
          Invocation.getter(#emailController),
        ),
      ) as _i4.TextEditingController);
  @override
  _i4.FocusNode get passwordFocusNode => (super.noSuchMethod(
        Invocation.getter(#passwordFocusNode),
        returnValue: _FakeFocusNode_3(
          this,
          Invocation.getter(#passwordFocusNode),
        ),
      ) as _i4.FocusNode);
  @override
  _i4.FocusNode get idFocusNode => (super.noSuchMethod(
        Invocation.getter(#idFocusNode),
        returnValue: _FakeFocusNode_3(
          this,
          Invocation.getter(#idFocusNode),
        ),
      ) as _i4.FocusNode);
  @override
  _i4.FocusNode get emailFocusNode => (super.noSuchMethod(
        Invocation.getter(#emailFocusNode),
        returnValue: _FakeFocusNode_3(
          this,
          Invocation.getter(#emailFocusNode),
        ),
      ) as _i4.FocusNode);
  @override
  _i4.FocusNode get phoneNumberFocusNode => (super.noSuchMethod(
        Invocation.getter(#phoneNumberFocusNode),
        returnValue: _FakeFocusNode_3(
          this,
          Invocation.getter(#phoneNumberFocusNode),
        ),
      ) as _i4.FocusNode);
  @override
  _i4.GlobalKey<_i4.FormState> get formKey => (super.noSuchMethod(
        Invocation.getter(#formKey),
        returnValue: _FakeGlobalKey_4<_i4.FormState>(
          this,
          Invocation.getter(#formKey),
        ),
      ) as _i4.GlobalKey<_i4.FormState>);
  @override
  bool get enableLoginButton => (super.noSuchMethod(
        Invocation.getter(#enableLoginButton),
        returnValue: false,
      ) as bool);
  @override
  _i5.LoginState get state => (super.noSuchMethod(
        Invocation.getter(#state),
        returnValue: _FakeLoginState_5(
          this,
          Invocation.getter(#state),
        ),
      ) as _i5.LoginState);
  @override
  _i60.Stream<_i5.LoginState> get stream => (super.noSuchMethod(
        Invocation.getter(#stream),
        returnValue: _i60.Stream<_i5.LoginState>.empty(),
      ) as _i60.Stream<_i5.LoginState>);
  @override
  bool get isClosed => (super.noSuchMethod(
        Invocation.getter(#isClosed),
        returnValue: false,
      ) as bool);
  @override
  void emitStateToUpdateTextFields() => super.noSuchMethod(
        Invocation.method(
          #emitStateToUpdateTextFields,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void onChangeTabIndex(int? newIndex) => super.noSuchMethod(
        Invocation.method(
          #onChangeTabIndex,
          [newIndex],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i60.Future<void> changeLanguage(String? value) => (super.noSuchMethod(
        Invocation.method(
          #changeLanguage,
          [value],
        ),
        returnValue: _i60.Future<void>.value(),
        returnValueForMissingStub: _i60.Future<void>.value(),
      ) as _i60.Future<void>);
  @override
  void changeSecurePassword() => super.noSuchMethod(
        Invocation.method(
          #changeSecurePassword,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i60.Future<String> onTapButton({required void Function()? onSuccess}) =>
      (super.noSuchMethod(
        Invocation.method(
          #onTapButton,
          [],
          {#onSuccess: onSuccess},
        ),
        returnValue: _i60.Future<String>.value(''),
      ) as _i60.Future<String>);
  @override
  void emit(_i5.LoginState? state) => super.noSuchMethod(
        Invocation.method(
          #emit,
          [state],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void onChange(_i61.Change<_i5.LoginState>? change) => super.noSuchMethod(
        Invocation.method(
          #onChange,
          [change],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void addError(
    Object? error, [
    StackTrace? stackTrace,
  ]) =>
      super.noSuchMethod(
        Invocation.method(
          #addError,
          [
            error,
            stackTrace,
          ],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void onError(
    Object? error,
    StackTrace? stackTrace,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #onError,
          [
            error,
            stackTrace,
          ],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i60.Future<void> close() => (super.noSuchMethod(
        Invocation.method(
          #close,
          [],
        ),
        returnValue: _i60.Future<void>.value(),
        returnValueForMissingStub: _i60.Future<void>.value(),
      ) as _i60.Future<void>);
}

/// A class which mocks [PinCodeCubit].
///
/// See the documentation for Mockito's code generation for more information.
class MockPinCodeCubit extends _i1.Mock implements _i6.PinCodeCubit {
  MockPinCodeCubit() {
    _i1.throwOnMissingStub(this);
  }

  @override
  set setup(bool? _setup) => super.noSuchMethod(
        Invocation.setter(
          #setup,
          _setup,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set onSuccess(_i60.Future<String?> Function()? _onSuccess) =>
      super.noSuchMethod(
        Invocation.setter(
          #onSuccess,
          _onSuccess,
        ),
        returnValueForMissingStub: null,
      );
  @override
  List<_i62.BiometricType> get availableBiometrics => (super.noSuchMethod(
        Invocation.getter(#availableBiometrics),
        returnValue: <_i62.BiometricType>[],
      ) as List<_i62.BiometricType>);
  @override
  set availableBiometrics(List<_i62.BiometricType>? _availableBiometrics) =>
      super.noSuchMethod(
        Invocation.setter(
          #availableBiometrics,
          _availableBiometrics,
        ),
        returnValueForMissingStub: null,
      );
  @override
  bool get canAddNumber => (super.noSuchMethod(
        Invocation.getter(#canAddNumber),
        returnValue: false,
      ) as bool);
  @override
  set canAddNumber(bool? _canAddNumber) => super.noSuchMethod(
        Invocation.setter(
          #canAddNumber,
          _canAddNumber,
        ),
        returnValueForMissingStub: null,
      );
  @override
  String get pinCode => (super.noSuchMethod(
        Invocation.getter(#pinCode),
        returnValue: '',
      ) as String);
  @override
  set pinCode(String? _pinCode) => super.noSuchMethod(
        Invocation.setter(
          #pinCode,
          _pinCode,
        ),
        returnValueForMissingStub: null,
      );
  @override
  String get code => (super.noSuchMethod(
        Invocation.getter(#code),
        returnValue: '',
      ) as String);
  @override
  set code(String? _code) => super.noSuchMethod(
        Invocation.setter(
          #code,
          _code,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i60.Future<void> Function(String) get function => (super.noSuchMethod(
        Invocation.getter(#function),
        returnValue: (String code) => _i60.Future<void>.value(),
      ) as _i60.Future<void> Function(String));
  @override
  set function(_i60.Future<void> Function(String)? _function) =>
      super.noSuchMethod(
        Invocation.setter(
          #function,
          _function,
        ),
        returnValueForMissingStub: null,
      );
  @override
  List<String> get numberList => (super.noSuchMethod(
        Invocation.getter(#numberList),
        returnValue: <String>[],
      ) as List<String>);
  @override
  set numberList(List<String>? _numberList) => super.noSuchMethod(
        Invocation.setter(
          #numberList,
          _numberList,
        ),
        returnValueForMissingStub: null,
      );
  @override
  int get authenticateType => (super.noSuchMethod(
        Invocation.getter(#authenticateType),
        returnValue: 0,
      ) as int);
  @override
  set authenticateType(int? _authenticateType) => super.noSuchMethod(
        Invocation.setter(
          #authenticateType,
          _authenticateType,
        ),
        returnValueForMissingStub: null,
      );
  @override
  bool get hasFaceId => (super.noSuchMethod(
        Invocation.getter(#hasFaceId),
        returnValue: false,
      ) as bool);
  @override
  bool get hasFingerPrintId => (super.noSuchMethod(
        Invocation.getter(#hasFingerPrintId),
        returnValue: false,
      ) as bool);
  @override
  bool get faceIdEnabled => (super.noSuchMethod(
        Invocation.getter(#faceIdEnabled),
        returnValue: false,
      ) as bool);
  @override
  bool get fingerPrintEnabled => (super.noSuchMethod(
        Invocation.getter(#fingerPrintEnabled),
        returnValue: false,
      ) as bool);
  @override
  _i6.PinCodeState get state => (super.noSuchMethod(
        Invocation.getter(#state),
        returnValue: _FakePinCodeState_6(
          this,
          Invocation.getter(#state),
        ),
      ) as _i6.PinCodeState);
  @override
  _i60.Stream<_i6.PinCodeState> get stream => (super.noSuchMethod(
        Invocation.getter(#stream),
        returnValue: _i60.Stream<_i6.PinCodeState>.empty(),
      ) as _i60.Stream<_i6.PinCodeState>);
  @override
  bool get isClosed => (super.noSuchMethod(
        Invocation.getter(#isClosed),
        returnValue: false,
      ) as bool);
  @override
  void deletePinCode() => super.noSuchMethod(
        Invocation.method(
          #deletePinCode,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i60.Future<void> onAddKeyboard(
    _i4.BuildContext? context,
    String? key,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #onAddKeyboard,
          [
            context,
            key,
          ],
        ),
        returnValue: _i60.Future<void>.value(),
        returnValueForMissingStub: _i60.Future<void>.value(),
      ) as _i60.Future<void>);
  @override
  _i60.Future<void> init({
    bool? setup,
    _i60.Future<String?> Function()? onSuccess,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #init,
          [],
          {
            #setup: setup,
            #onSuccess: onSuccess,
          },
        ),
        returnValue: _i60.Future<void>.value(),
        returnValueForMissingStub: _i60.Future<void>.value(),
      ) as _i60.Future<void>);
  @override
  _i60.Future<void> onDoneWithoutBiometric() => (super.noSuchMethod(
        Invocation.method(
          #onDoneWithoutBiometric,
          [],
        ),
        returnValue: _i60.Future<void>.value(),
        returnValueForMissingStub: _i60.Future<void>.value(),
      ) as _i60.Future<void>);
  @override
  _i60.Future<void> onDoneWithBiometric() => (super.noSuchMethod(
        Invocation.method(
          #onDoneWithBiometric,
          [],
        ),
        returnValue: _i60.Future<void>.value(),
        returnValueForMissingStub: _i60.Future<void>.value(),
      ) as _i60.Future<void>);
  @override
  _i60.Future<bool> onOpenSinger() => (super.noSuchMethod(
        Invocation.method(
          #onOpenSinger,
          [],
        ),
        returnValue: _i60.Future<bool>.value(false),
      ) as _i60.Future<bool>);
  @override
  _i60.Future<void> setCurrentFaceId({required bool? state}) =>
      (super.noSuchMethod(
        Invocation.method(
          #setCurrentFaceId,
          [],
          {#state: state},
        ),
        returnValue: _i60.Future<void>.value(),
        returnValueForMissingStub: _i60.Future<void>.value(),
      ) as _i60.Future<void>);
  @override
  _i60.Future<void> setCurrentFingerPrint({required bool? state}) =>
      (super.noSuchMethod(
        Invocation.method(
          #setCurrentFingerPrint,
          [],
          {#state: state},
        ),
        returnValue: _i60.Future<void>.value(),
        returnValueForMissingStub: _i60.Future<void>.value(),
      ) as _i60.Future<void>);
  @override
  _i60.Future<void> onIntBiomatricPage() => (super.noSuchMethod(
        Invocation.method(
          #onIntBiomatricPage,
          [],
        ),
        returnValue: _i60.Future<void>.value(),
        returnValueForMissingStub: _i60.Future<void>.value(),
      ) as _i60.Future<void>);
  @override
  void emit(_i6.PinCodeState? state) => super.noSuchMethod(
        Invocation.method(
          #emit,
          [state],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void onChange(_i61.Change<_i6.PinCodeState>? change) => super.noSuchMethod(
        Invocation.method(
          #onChange,
          [change],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void addError(
    Object? error, [
    StackTrace? stackTrace,
  ]) =>
      super.noSuchMethod(
        Invocation.method(
          #addError,
          [
            error,
            stackTrace,
          ],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void onError(
    Object? error,
    StackTrace? stackTrace,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #onError,
          [
            error,
            stackTrace,
          ],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i60.Future<void> close() => (super.noSuchMethod(
        Invocation.method(
          #close,
          [],
        ),
        returnValue: _i60.Future<void>.value(),
        returnValueForMissingStub: _i60.Future<void>.value(),
      ) as _i60.Future<void>);
}

/// A class which mocks [TransferCubit].
///
/// See the documentation for Mockito's code generation for more information.
class MockTransferCubit extends _i1.Mock implements _i9.TransferCubit {
  MockTransferCubit() {
    _i1.throwOnMissingStub(this);
  }

  @override
  set purpose(String? _purpose) => super.noSuchMethod(
        Invocation.setter(
          #purpose,
          _purpose,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set note(String? _note) => super.noSuchMethod(
        Invocation.setter(
          #note,
          _note,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set category(_i63.TransferCategoryModel? _category) => super.noSuchMethod(
        Invocation.setter(
          #category,
          _category,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i7.TransferOptionsCubit get transferOptions => (super.noSuchMethod(
        Invocation.getter(#transferOptions),
        returnValue: _FakeTransferOptionsCubit_7(
          this,
          Invocation.getter(#transferOptions),
        ),
      ) as _i7.TransferOptionsCubit);
  @override
  _i8.CategoryCubit get categories => (super.noSuchMethod(
        Invocation.getter(#categories),
        returnValue: _FakeCategoryCubit_8(
          this,
          Invocation.getter(#categories),
        ),
      ) as _i8.CategoryCubit);
  @override
  _i4.TextEditingController get amountController => (super.noSuchMethod(
        Invocation.getter(#amountController),
        returnValue: _FakeTextEditingController_2(
          this,
          Invocation.getter(#amountController),
        ),
      ) as _i4.TextEditingController);
  @override
  _i9.TransferState get state => (super.noSuchMethod(
        Invocation.getter(#state),
        returnValue: _FakeTransferState_9(
          this,
          Invocation.getter(#state),
        ),
      ) as _i9.TransferState);
  @override
  _i60.Stream<_i9.TransferState> get stream => (super.noSuchMethod(
        Invocation.getter(#stream),
        returnValue: _i60.Stream<_i9.TransferState>.empty(),
      ) as _i60.Stream<_i9.TransferState>);
  @override
  bool get isClosed => (super.noSuchMethod(
        Invocation.getter(#isClosed),
        returnValue: false,
      ) as bool);
  @override
  bool makeTransferButtonEnable({required bool? isInternal}) =>
      (super.noSuchMethod(
        Invocation.method(
          #makeTransferButtonEnable,
          [],
          {#isInternal: isInternal},
        ),
        returnValue: false,
      ) as bool);
  @override
  void init() => super.noSuchMethod(
        Invocation.method(
          #init,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void changePurpose(String? purpose) => super.noSuchMethod(
        Invocation.method(
          #changePurpose,
          [purpose],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void onNoteChange(String? note) => super.noSuchMethod(
        Invocation.method(
          #onNoteChange,
          [note],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void changeCategory(_i63.TransferCategoryModel? category) =>
      super.noSuchMethod(
        Invocation.method(
          #changeCategory,
          [category],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i60.Future<_i64.ReceiptModel?> createTransfer(String? uuid) =>
      (super.noSuchMethod(
        Invocation.method(
          #createTransfer,
          [uuid],
        ),
        returnValue: _i60.Future<_i64.ReceiptModel?>.value(),
      ) as _i60.Future<_i64.ReceiptModel?>);
  @override
  void reset() => super.noSuchMethod(
        Invocation.method(
          #reset,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i60.Future<void> close() => (super.noSuchMethod(
        Invocation.method(
          #close,
          [],
        ),
        returnValue: _i60.Future<void>.value(),
        returnValueForMissingStub: _i60.Future<void>.value(),
      ) as _i60.Future<void>);
  @override
  void emit(_i9.TransferState? state) => super.noSuchMethod(
        Invocation.method(
          #emit,
          [state],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void onChange(_i61.Change<_i9.TransferState>? change) => super.noSuchMethod(
        Invocation.method(
          #onChange,
          [change],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void addError(
    Object? error, [
    StackTrace? stackTrace,
  ]) =>
      super.noSuchMethod(
        Invocation.method(
          #addError,
          [
            error,
            stackTrace,
          ],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void onError(
    Object? error,
    StackTrace? stackTrace,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #onError,
          [
            error,
            stackTrace,
          ],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [TransferOptionsCubit].
///
/// See the documentation for Mockito's code generation for more information.
class MockTransferOptionsCubit extends _i1.Mock
    implements _i7.TransferOptionsCubit {
  MockTransferOptionsCubit() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i10.TransferMethodType get currentMethodType => (super.noSuchMethod(
        Invocation.getter(#currentMethodType),
        returnValue: _FakeTransferMethodType_10(
          this,
          Invocation.getter(#currentMethodType),
        ),
      ) as _i10.TransferMethodType);
  @override
  set currentMethodType(_i10.TransferMethodType? _currentMethodType) =>
      super.noSuchMethod(
        Invocation.setter(
          #currentMethodType,
          _currentMethodType,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set transferOptions(_i65.TransferOptionsModel? _transferOptions) =>
      super.noSuchMethod(
        Invocation.setter(
          #transferOptions,
          _transferOptions,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set internationalTransferTypes(List<String>? _internationalTransferTypes) =>
      super.noSuchMethod(
        Invocation.setter(
          #internationalTransferTypes,
          _internationalTransferTypes,
        ),
        returnValueForMissingStub: null,
      );
  @override
  List<_i66.BudgetCategoryModel> get categoriesModel => (super.noSuchMethod(
        Invocation.getter(#categoriesModel),
        returnValue: <_i66.BudgetCategoryModel>[],
      ) as List<_i66.BudgetCategoryModel>);
  @override
  set categoriesModel(List<_i66.BudgetCategoryModel>? _categoriesModel) =>
      super.noSuchMethod(
        Invocation.setter(
          #categoriesModel,
          _categoriesModel,
        ),
        returnValueForMissingStub: null,
      );
  @override
  List<_i63.TransferCategoryModel> get categories => (super.noSuchMethod(
        Invocation.getter(#categories),
        returnValue: <_i63.TransferCategoryModel>[],
      ) as List<_i63.TransferCategoryModel>);
  @override
  set categories(List<_i63.TransferCategoryModel>? _categories) =>
      super.noSuchMethod(
        Invocation.setter(
          #categories,
          _categories,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set localTransferTypes(List<String>? _localTransferTypes) =>
      super.noSuchMethod(
        Invocation.setter(
          #localTransferTypes,
          _localTransferTypes,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set currentPurpose(String? _currentPurpose) => super.noSuchMethod(
        Invocation.setter(
          #currentPurpose,
          _currentPurpose,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set currentCategory(String? _currentCategory) => super.noSuchMethod(
        Invocation.setter(
          #currentCategory,
          _currentCategory,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set walletNames(List<String>? _walletNames) => super.noSuchMethod(
        Invocation.setter(
          #walletNames,
          _walletNames,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set categoriesList(List<String>? _categoriesList) => super.noSuchMethod(
        Invocation.setter(
          #categoriesList,
          _categoriesList,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i7.TransferOptionsState get state => (super.noSuchMethod(
        Invocation.getter(#state),
        returnValue: _FakeTransferOptionsState_11(
          this,
          Invocation.getter(#state),
        ),
      ) as _i7.TransferOptionsState);
  @override
  _i60.Stream<_i7.TransferOptionsState> get stream => (super.noSuchMethod(
        Invocation.getter(#stream),
        returnValue: _i60.Stream<_i7.TransferOptionsState>.empty(),
      ) as _i60.Stream<_i7.TransferOptionsState>);
  @override
  bool get isClosed => (super.noSuchMethod(
        Invocation.getter(#isClosed),
        returnValue: false,
      ) as bool);
  @override
  _i60.Future<void> init() => (super.noSuchMethod(
        Invocation.method(
          #init,
          [],
        ),
        returnValue: _i60.Future<void>.value(),
        returnValueForMissingStub: _i60.Future<void>.value(),
      ) as _i60.Future<void>);
  @override
  List<String> categoriesTypes() => (super.noSuchMethod(
        Invocation.method(
          #categoriesTypes,
          [],
        ),
        returnValue: <String>[],
      ) as List<String>);
  @override
  void setCurrentPurpose(String? value) => super.noSuchMethod(
        Invocation.method(
          #setCurrentPurpose,
          [value],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void reset() => super.noSuchMethod(
        Invocation.method(
          #reset,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void setCurrentCategory(String? value) => super.noSuchMethod(
        Invocation.method(
          #setCurrentCategory,
          [value],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void setCurrentMethodType(String? value) => super.noSuchMethod(
        Invocation.method(
          #setCurrentMethodType,
          [value],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i60.Future<_i11.Option<_i65.TransferOptionsModel>> get() =>
      (super.noSuchMethod(
        Invocation.method(
          #get,
          [],
        ),
        returnValue: _i60.Future<_i11.Option<_i65.TransferOptionsModel>>.value(
            _FakeOption_12<_i65.TransferOptionsModel>(
          this,
          Invocation.method(
            #get,
            [],
          ),
        )),
      ) as _i60.Future<_i11.Option<_i65.TransferOptionsModel>>);
  @override
  void emit(_i7.TransferOptionsState? state) => super.noSuchMethod(
        Invocation.method(
          #emit,
          [state],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void onChange(_i61.Change<_i7.TransferOptionsState>? change) =>
      super.noSuchMethod(
        Invocation.method(
          #onChange,
          [change],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void addError(
    Object? error, [
    StackTrace? stackTrace,
  ]) =>
      super.noSuchMethod(
        Invocation.method(
          #addError,
          [
            error,
            stackTrace,
          ],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void onError(
    Object? error,
    StackTrace? stackTrace,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #onError,
          [
            error,
            stackTrace,
          ],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i60.Future<void> close() => (super.noSuchMethod(
        Invocation.method(
          #close,
          [],
        ),
        returnValue: _i60.Future<void>.value(),
        returnValueForMissingStub: _i60.Future<void>.value(),
      ) as _i60.Future<void>);
}

/// A class which mocks [ScheduleCubit].
///
/// See the documentation for Mockito's code generation for more information.
class MockScheduleCubit extends _i1.Mock implements _i12.ScheduleCubit {
  MockScheduleCubit() {
    _i1.throwOnMissingStub(this);
  }

  @override
  set daysModel(_i67.CallDaysModel? _daysModel) => super.noSuchMethod(
        Invocation.setter(
          #daysModel,
          _daysModel,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set timesModel(_i68.GetTimeModel? _timesModel) => super.noSuchMethod(
        Invocation.setter(
          #timesModel,
          _timesModel,
        ),
        returnValueForMissingStub: null,
      );
  @override
  String get selectedDay => (super.noSuchMethod(
        Invocation.getter(#selectedDay),
        returnValue: '',
      ) as String);
  @override
  set selectedDay(String? _selectedDay) => super.noSuchMethod(
        Invocation.setter(
          #selectedDay,
          _selectedDay,
        ),
        returnValueForMissingStub: null,
      );
  @override
  int get selectedTimeIndex => (super.noSuchMethod(
        Invocation.getter(#selectedTimeIndex),
        returnValue: 0,
      ) as int);
  @override
  set selectedTimeIndex(int? _selectedTimeIndex) => super.noSuchMethod(
        Invocation.setter(
          #selectedTimeIndex,
          _selectedTimeIndex,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set isSelect(bool? _isSelect) => super.noSuchMethod(
        Invocation.setter(
          #isSelect,
          _isSelect,
        ),
        returnValueForMissingStub: null,
      );
  @override
  bool get enableButton => (super.noSuchMethod(
        Invocation.getter(#enableButton),
        returnValue: false,
      ) as bool);
  @override
  _i12.ScheduleState get state => (super.noSuchMethod(
        Invocation.getter(#state),
        returnValue: _FakeScheduleState_13(
          this,
          Invocation.getter(#state),
        ),
      ) as _i12.ScheduleState);
  @override
  _i60.Stream<_i12.ScheduleState> get stream => (super.noSuchMethod(
        Invocation.getter(#stream),
        returnValue: _i60.Stream<_i12.ScheduleState>.empty(),
      ) as _i60.Stream<_i12.ScheduleState>);
  @override
  bool get isClosed => (super.noSuchMethod(
        Invocation.getter(#isClosed),
        returnValue: false,
      ) as bool);
  @override
  _i60.Future<void> init() => (super.noSuchMethod(
        Invocation.method(
          #init,
          [],
        ),
        returnValue: _i60.Future<void>.value(),
        returnValueForMissingStub: _i60.Future<void>.value(),
      ) as _i60.Future<void>);
  @override
  _i60.Future<void> getTimes(String? day) => (super.noSuchMethod(
        Invocation.method(
          #getTimes,
          [day],
        ),
        returnValue: _i60.Future<void>.value(),
        returnValueForMissingStub: _i60.Future<void>.value(),
      ) as _i60.Future<void>);
  @override
  _i60.Future<void> selectDay(String? day) => (super.noSuchMethod(
        Invocation.method(
          #selectDay,
          [day],
        ),
        returnValue: _i60.Future<void>.value(),
        returnValueForMissingStub: _i60.Future<void>.value(),
      ) as _i60.Future<void>);
  @override
  _i60.Future<void> selectTime(int? index) => (super.noSuchMethod(
        Invocation.method(
          #selectTime,
          [index],
        ),
        returnValue: _i60.Future<void>.value(),
        returnValueForMissingStub: _i60.Future<void>.value(),
      ) as _i60.Future<void>);
  @override
  _i60.Future<void> setCall(_i4.BuildContext? context) => (super.noSuchMethod(
        Invocation.method(
          #setCall,
          [context],
        ),
        returnValue: _i60.Future<void>.value(),
        returnValueForMissingStub: _i60.Future<void>.value(),
      ) as _i60.Future<void>);
  @override
  void clear() => super.noSuchMethod(
        Invocation.method(
          #clear,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void emit(_i12.ScheduleState? state) => super.noSuchMethod(
        Invocation.method(
          #emit,
          [state],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void onChange(_i61.Change<_i12.ScheduleState>? change) => super.noSuchMethod(
        Invocation.method(
          #onChange,
          [change],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void addError(
    Object? error, [
    StackTrace? stackTrace,
  ]) =>
      super.noSuchMethod(
        Invocation.method(
          #addError,
          [
            error,
            stackTrace,
          ],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void onError(
    Object? error,
    StackTrace? stackTrace,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #onError,
          [
            error,
            stackTrace,
          ],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i60.Future<void> close() => (super.noSuchMethod(
        Invocation.method(
          #close,
          [],
        ),
        returnValue: _i60.Future<void>.value(),
        returnValueForMissingStub: _i60.Future<void>.value(),
      ) as _i60.Future<void>);
}

/// A class which mocks [NotificationCubit].
///
/// See the documentation for Mockito's code generation for more information.
class MockNotificationCubit extends _i1.Mock implements _i13.NotificationCubit {
  MockNotificationCubit() {
    _i1.throwOnMissingStub(this);
  }

  @override
  List<_i69.NotificationModel> get notificationModels => (super.noSuchMethod(
        Invocation.getter(#notificationModels),
        returnValue: <_i69.NotificationModel>[],
      ) as List<_i69.NotificationModel>);
  @override
  set notificationModels(List<_i69.NotificationModel>? _notificationModels) =>
      super.noSuchMethod(
        Invocation.setter(
          #notificationModels,
          _notificationModels,
        ),
        returnValueForMissingStub: null,
      );
  @override
  List<_i69.NotificationModel> get readNotificationList => (super.noSuchMethod(
        Invocation.getter(#readNotificationList),
        returnValue: <_i69.NotificationModel>[],
      ) as List<_i69.NotificationModel>);
  @override
  set readNotificationList(
          List<_i69.NotificationModel>? _readNotificationList) =>
      super.noSuchMethod(
        Invocation.setter(
          #readNotificationList,
          _readNotificationList,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i13.NotificationState get state => (super.noSuchMethod(
        Invocation.getter(#state),
        returnValue: _FakeNotificationState_14(
          this,
          Invocation.getter(#state),
        ),
      ) as _i13.NotificationState);
  @override
  _i60.Stream<_i13.NotificationState> get stream => (super.noSuchMethod(
        Invocation.getter(#stream),
        returnValue: _i60.Stream<_i13.NotificationState>.empty(),
      ) as _i60.Stream<_i13.NotificationState>);
  @override
  bool get isClosed => (super.noSuchMethod(
        Invocation.getter(#isClosed),
        returnValue: false,
      ) as bool);
  @override
  _i60.Future<void> init() => (super.noSuchMethod(
        Invocation.method(
          #init,
          [],
        ),
        returnValue: _i60.Future<void>.value(),
        returnValueForMissingStub: _i60.Future<void>.value(),
      ) as _i60.Future<void>);
  @override
  _i60.Future<void> readNotification({required int? index}) =>
      (super.noSuchMethod(
        Invocation.method(
          #readNotification,
          [],
          {#index: index},
        ),
        returnValue: _i60.Future<void>.value(),
        returnValueForMissingStub: _i60.Future<void>.value(),
      ) as _i60.Future<void>);
  @override
  _i60.Future<void> deleteNotification({required int? index}) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteNotification,
          [],
          {#index: index},
        ),
        returnValue: _i60.Future<void>.value(),
        returnValueForMissingStub: _i60.Future<void>.value(),
      ) as _i60.Future<void>);
  @override
  void emit(_i13.NotificationState? state) => super.noSuchMethod(
        Invocation.method(
          #emit,
          [state],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void onChange(_i61.Change<_i13.NotificationState>? change) =>
      super.noSuchMethod(
        Invocation.method(
          #onChange,
          [change],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void addError(
    Object? error, [
    StackTrace? stackTrace,
  ]) =>
      super.noSuchMethod(
        Invocation.method(
          #addError,
          [
            error,
            stackTrace,
          ],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void onError(
    Object? error,
    StackTrace? stackTrace,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #onError,
          [
            error,
            stackTrace,
          ],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i60.Future<void> close() => (super.noSuchMethod(
        Invocation.method(
          #close,
          [],
        ),
        returnValue: _i60.Future<void>.value(),
        returnValueForMissingStub: _i60.Future<void>.value(),
      ) as _i60.Future<void>);
}

/// A class which mocks [CardsCubit].
///
/// See the documentation for Mockito's code generation for more information.
class MockCardsCubit extends _i1.Mock implements _i15.CardsCubit {
  MockCardsCubit() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get cvv => (super.noSuchMethod(
        Invocation.getter(#cvv),
        returnValue: '',
      ) as String);
  @override
  set cvv(String? _cvv) => super.noSuchMethod(
        Invocation.setter(
          #cvv,
          _cvv,
        ),
        returnValueForMissingStub: null,
      );
  @override
  String get holderName => (super.noSuchMethod(
        Invocation.getter(#holderName),
        returnValue: '',
      ) as String);
  @override
  set holderName(String? _holderName) => super.noSuchMethod(
        Invocation.setter(
          #holderName,
          _holderName,
        ),
        returnValueForMissingStub: null,
      );
  @override
  String get date => (super.noSuchMethod(
        Invocation.getter(#date),
        returnValue: '',
      ) as String);
  @override
  set date(String? _date) => super.noSuchMethod(
        Invocation.setter(
          #date,
          _date,
        ),
        returnValueForMissingStub: null,
      );
  @override
  String get number => (super.noSuchMethod(
        Invocation.getter(#number),
        returnValue: '',
      ) as String);
  @override
  set number(String? _number) => super.noSuchMethod(
        Invocation.setter(
          #number,
          _number,
        ),
        returnValueForMissingStub: null,
      );
  @override
  String get methodUuid => (super.noSuchMethod(
        Invocation.getter(#methodUuid),
        returnValue: '',
      ) as String);
  @override
  set methodUuid(String? _methodUuid) => super.noSuchMethod(
        Invocation.setter(
          #methodUuid,
          _methodUuid,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i4.GlobalKey<_i4.FormState> get cardKey => (super.noSuchMethod(
        Invocation.getter(#cardKey),
        returnValue: _FakeGlobalKey_4<_i4.FormState>(
          this,
          Invocation.getter(#cardKey),
        ),
      ) as _i4.GlobalKey<_i4.FormState>);
  @override
  int get index => (super.noSuchMethod(
        Invocation.getter(#index),
        returnValue: 0,
      ) as int);
  @override
  set index(int? _index) => super.noSuchMethod(
        Invocation.setter(
          #index,
          _index,
        ),
        returnValueForMissingStub: null,
      );
  @override
  int get tapBarIndex => (super.noSuchMethod(
        Invocation.getter(#tapBarIndex),
        returnValue: 0,
      ) as int);
  @override
  set tapBarIndex(int? _tapBarIndex) => super.noSuchMethod(
        Invocation.setter(
          #tapBarIndex,
          _tapBarIndex,
        ),
        returnValueForMissingStub: null,
      );
  @override
  bool get lockCard => (super.noSuchMethod(
        Invocation.getter(#lockCard),
        returnValue: false,
      ) as bool);
  @override
  set lockCard(bool? _lockCard) => super.noSuchMethod(
        Invocation.setter(
          #lockCard,
          _lockCard,
        ),
        returnValueForMissingStub: null,
      );
  @override
  bool get enableNFC => (super.noSuchMethod(
        Invocation.getter(#enableNFC),
        returnValue: false,
      ) as bool);
  @override
  set enableNFC(bool? _enableNFC) => super.noSuchMethod(
        Invocation.setter(
          #enableNFC,
          _enableNFC,
        ),
        returnValueForMissingStub: null,
      );
  @override
  bool get enableOnlinePayments => (super.noSuchMethod(
        Invocation.getter(#enableOnlinePayments),
        returnValue: false,
      ) as bool);
  @override
  set enableOnlinePayments(bool? _enableOnlinePayments) => super.noSuchMethod(
        Invocation.setter(
          #enableOnlinePayments,
          _enableOnlinePayments,
        ),
        returnValueForMissingStub: null,
      );
  @override
  bool get enableCardPin => (super.noSuchMethod(
        Invocation.getter(#enableCardPin),
        returnValue: false,
      ) as bool);
  @override
  set enableCardPin(bool? _enableCardPin) => super.noSuchMethod(
        Invocation.setter(
          #enableCardPin,
          _enableCardPin,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i4.PageController get pageViewController => (super.noSuchMethod(
        Invocation.getter(#pageViewController),
        returnValue: _FakePageController_15(
          this,
          Invocation.getter(#pageViewController),
        ),
      ) as _i4.PageController);
  @override
  set pageViewController(_i4.PageController? _pageViewController) =>
      super.noSuchMethod(
        Invocation.setter(
          #pageViewController,
          _pageViewController,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i4.FocusNode get cardNumberFocusNode => (super.noSuchMethod(
        Invocation.getter(#cardNumberFocusNode),
        returnValue: _FakeFocusNode_3(
          this,
          Invocation.getter(#cardNumberFocusNode),
        ),
      ) as _i4.FocusNode);
  @override
  _i4.FocusNode get cvvFocusNode => (super.noSuchMethod(
        Invocation.getter(#cvvFocusNode),
        returnValue: _FakeFocusNode_3(
          this,
          Invocation.getter(#cvvFocusNode),
        ),
      ) as _i4.FocusNode);
  @override
  _i4.FocusNode get validUntilFocusNode => (super.noSuchMethod(
        Invocation.getter(#validUntilFocusNode),
        returnValue: _FakeFocusNode_3(
          this,
          Invocation.getter(#validUntilFocusNode),
        ),
      ) as _i4.FocusNode);
  @override
  _i4.FocusNode get nameFocusNode => (super.noSuchMethod(
        Invocation.getter(#nameFocusNode),
        returnValue: _FakeFocusNode_3(
          this,
          Invocation.getter(#nameFocusNode),
        ),
      ) as _i4.FocusNode);
  @override
  _i14.LimitsModel get limitsModel => (super.noSuchMethod(
        Invocation.getter(#limitsModel),
        returnValue: _FakeLimitsModel_16(
          this,
          Invocation.getter(#limitsModel),
        ),
      ) as _i14.LimitsModel);
  @override
  set limitsModel(_i14.LimitsModel? _limitsModel) => super.noSuchMethod(
        Invocation.setter(
          #limitsModel,
          _limitsModel,
        ),
        returnValueForMissingStub: null,
      );
  @override
  List<_i70.TransactionGlobalModel> get transactionModels =>
      (super.noSuchMethod(
        Invocation.getter(#transactionModels),
        returnValue: <_i70.TransactionGlobalModel>[],
      ) as List<_i70.TransactionGlobalModel>);
  @override
  set transactionModels(
          List<_i70.TransactionGlobalModel>? _transactionModels) =>
      super.noSuchMethod(
        Invocation.setter(
          #transactionModels,
          _transactionModels,
        ),
        returnValueForMissingStub: null,
      );
  @override
  List<_i71.PaymentMethod> get paymentMethods => (super.noSuchMethod(
        Invocation.getter(#paymentMethods),
        returnValue: <_i71.PaymentMethod>[],
      ) as List<_i71.PaymentMethod>);
  @override
  set paymentMethods(List<_i71.PaymentMethod>? _paymentMethods) =>
      super.noSuchMethod(
        Invocation.setter(
          #paymentMethods,
          _paymentMethods,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i4.GlobalKey<_i4.FormState> get createCardKey => (super.noSuchMethod(
        Invocation.getter(#createCardKey),
        returnValue: _FakeGlobalKey_4<_i4.FormState>(
          this,
          Invocation.getter(#createCardKey),
        ),
      ) as _i4.GlobalKey<_i4.FormState>);
  @override
  List<_i72.CreditCardModel> get creditCardModels => (super.noSuchMethod(
        Invocation.getter(#creditCardModels),
        returnValue: <_i72.CreditCardModel>[],
      ) as List<_i72.CreditCardModel>);
  @override
  set creditCardModels(List<_i72.CreditCardModel>? _creditCardModels) =>
      super.noSuchMethod(
        Invocation.setter(
          #creditCardModels,
          _creditCardModels,
        ),
        returnValueForMissingStub: null,
      );
  @override
  List<bool> get creditCardsVisible => (super.noSuchMethod(
        Invocation.getter(#creditCardsVisible),
        returnValue: <bool>[],
      ) as List<bool>);
  @override
  set creditCardsVisible(List<bool>? _creditCardsVisible) => super.noSuchMethod(
        Invocation.setter(
          #creditCardsVisible,
          _creditCardsVisible,
        ),
        returnValueForMissingStub: null,
      );
  @override
  bool get enableCreateCardButton => (super.noSuchMethod(
        Invocation.getter(#enableCreateCardButton),
        returnValue: false,
      ) as bool);
  @override
  List<bool> get cardsVisible => (super.noSuchMethod(
        Invocation.getter(#cardsVisible),
        returnValue: <bool>[],
      ) as List<bool>);
  @override
  _i15.CardsState get state => (super.noSuchMethod(
        Invocation.getter(#state),
        returnValue: _FakeCardsState_17(
          this,
          Invocation.getter(#state),
        ),
      ) as _i15.CardsState);
  @override
  _i60.Stream<_i15.CardsState> get stream => (super.noSuchMethod(
        Invocation.getter(#stream),
        returnValue: _i60.Stream<_i15.CardsState>.empty(),
      ) as _i60.Stream<_i15.CardsState>);
  @override
  bool get isClosed => (super.noSuchMethod(
        Invocation.getter(#isClosed),
        returnValue: false,
      ) as bool);
  @override
  void toggleLockCard() => super.noSuchMethod(
        Invocation.method(
          #toggleLockCard,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void toggleNFC() => super.noSuchMethod(
        Invocation.method(
          #toggleNFC,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void toggleOnlinePayments() => super.noSuchMethod(
        Invocation.method(
          #toggleOnlinePayments,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void toggleCardPin() => super.noSuchMethod(
        Invocation.method(
          #toggleCardPin,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void onChangeTabBarIndex() => super.noSuchMethod(
        Invocation.method(
          #onChangeTabBarIndex,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void onPageChanged(int? newIndex) => super.noSuchMethod(
        Invocation.method(
          #onPageChanged,
          [newIndex],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i60.Future<void> init({int? newIndex}) => (super.noSuchMethod(
        Invocation.method(
          #init,
          [],
          {#newIndex: newIndex},
        ),
        returnValue: _i60.Future<void>.value(),
        returnValueForMissingStub: _i60.Future<void>.value(),
      ) as _i60.Future<void>);
  @override
  void onChangeCardVisibility(int? newIndex) => super.noSuchMethod(
        Invocation.method(
          #onChangeCardVisibility,
          [newIndex],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void setCvv(String? cvv) => super.noSuchMethod(
        Invocation.method(
          #setCvv,
          [cvv],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void setCardNumber(String? number) => super.noSuchMethod(
        Invocation.method(
          #setCardNumber,
          [number],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void setHolderName(String? name) => super.noSuchMethod(
        Invocation.method(
          #setHolderName,
          [name],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void setExpireDate(String? expireDate) => super.noSuchMethod(
        Invocation.method(
          #setExpireDate,
          [expireDate],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i60.Future<void> getCards() => (super.noSuchMethod(
        Invocation.method(
          #getCards,
          [],
        ),
        returnValue: _i60.Future<void>.value(),
        returnValueForMissingStub: _i60.Future<void>.value(),
      ) as _i60.Future<void>);
  @override
  _i60.Future<void> getPaymentMethods() => (super.noSuchMethod(
        Invocation.method(
          #getPaymentMethods,
          [],
        ),
        returnValue: _i60.Future<void>.value(),
        returnValueForMissingStub: _i60.Future<void>.value(),
      ) as _i60.Future<void>);
  @override
  _i60.Future<void> createCard() => (super.noSuchMethod(
        Invocation.method(
          #createCard,
          [],
        ),
        returnValue: _i60.Future<void>.value(),
        returnValueForMissingStub: _i60.Future<void>.value(),
      ) as _i60.Future<void>);
  @override
  _i60.Future<void> deleteCard(int? deletedIndex) => (super.noSuchMethod(
        Invocation.method(
          #deleteCard,
          [deletedIndex],
        ),
        returnValue: _i60.Future<void>.value(),
        returnValueForMissingStub: _i60.Future<void>.value(),
      ) as _i60.Future<void>);
  @override
  void resetCardValues() => super.noSuchMethod(
        Invocation.method(
          #resetCardValues,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void emit(_i15.CardsState? state) => super.noSuchMethod(
        Invocation.method(
          #emit,
          [state],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void onChange(_i61.Change<_i15.CardsState>? change) => super.noSuchMethod(
        Invocation.method(
          #onChange,
          [change],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void addError(
    Object? error, [
    StackTrace? stackTrace,
  ]) =>
      super.noSuchMethod(
        Invocation.method(
          #addError,
          [
            error,
            stackTrace,
          ],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void onError(
    Object? error,
    StackTrace? stackTrace,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #onError,
          [
            error,
            stackTrace,
          ],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i60.Future<void> close() => (super.noSuchMethod(
        Invocation.method(
          #close,
          [],
        ),
        returnValue: _i60.Future<void>.value(),
        returnValueForMissingStub: _i60.Future<void>.value(),
      ) as _i60.Future<void>);
}

/// A class which mocks [CardLimitCubit].
///
/// See the documentation for Mockito's code generation for more information.
class MockCardLimitCubit extends _i1.Mock implements _i16.CardLimitCubit {
  MockCardLimitCubit() {
    _i1.throwOnMissingStub(this);
  }

  @override
  double get transactionSlider => (super.noSuchMethod(
        Invocation.getter(#transactionSlider),
        returnValue: 0.0,
      ) as double);
  @override
  set transactionSlider(double? _transactionSlider) => super.noSuchMethod(
        Invocation.setter(
          #transactionSlider,
          _transactionSlider,
        ),
        returnValueForMissingStub: null,
      );
  @override
  double get withdrawSlider => (super.noSuchMethod(
        Invocation.getter(#withdrawSlider),
        returnValue: 0.0,
      ) as double);
  @override
  set withdrawSlider(double? _withdrawSlider) => super.noSuchMethod(
        Invocation.setter(
          #withdrawSlider,
          _withdrawSlider,
        ),
        returnValueForMissingStub: null,
      );
  @override
  double get transactionLimit => (super.noSuchMethod(
        Invocation.getter(#transactionLimit),
        returnValue: 0.0,
      ) as double);
  @override
  set transactionLimit(double? _transactionLimit) => super.noSuchMethod(
        Invocation.setter(
          #transactionLimit,
          _transactionLimit,
        ),
        returnValueForMissingStub: null,
      );
  @override
  double get withdrawLimit => (super.noSuchMethod(
        Invocation.getter(#withdrawLimit),
        returnValue: 0.0,
      ) as double);
  @override
  set withdrawLimit(double? _withdrawLimit) => super.noSuchMethod(
        Invocation.setter(
          #withdrawLimit,
          _withdrawLimit,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i16.CardLimitState get state => (super.noSuchMethod(
        Invocation.getter(#state),
        returnValue: _FakeCardLimitState_18(
          this,
          Invocation.getter(#state),
        ),
      ) as _i16.CardLimitState);
  @override
  _i60.Stream<_i16.CardLimitState> get stream => (super.noSuchMethod(
        Invocation.getter(#stream),
        returnValue: _i60.Stream<_i16.CardLimitState>.empty(),
      ) as _i60.Stream<_i16.CardLimitState>);
  @override
  bool get isClosed => (super.noSuchMethod(
        Invocation.getter(#isClosed),
        returnValue: false,
      ) as bool);
  @override
  void init() => super.noSuchMethod(
        Invocation.method(
          #init,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void setValues() => super.noSuchMethod(
        Invocation.method(
          #setValues,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void changeTransactionSliderValue(double? value) => super.noSuchMethod(
        Invocation.method(
          #changeTransactionSliderValue,
          [value],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void changeWithdrawSliderValue(double? value) => super.noSuchMethod(
        Invocation.method(
          #changeWithdrawSliderValue,
          [value],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void emit(_i16.CardLimitState? state) => super.noSuchMethod(
        Invocation.method(
          #emit,
          [state],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void onChange(_i61.Change<_i16.CardLimitState>? change) => super.noSuchMethod(
        Invocation.method(
          #onChange,
          [change],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void addError(
    Object? error, [
    StackTrace? stackTrace,
  ]) =>
      super.noSuchMethod(
        Invocation.method(
          #addError,
          [
            error,
            stackTrace,
          ],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void onError(
    Object? error,
    StackTrace? stackTrace,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #onError,
          [
            error,
            stackTrace,
          ],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i60.Future<void> close() => (super.noSuchMethod(
        Invocation.method(
          #close,
          [],
        ),
        returnValue: _i60.Future<void>.value(),
        returnValueForMissingStub: _i60.Future<void>.value(),
      ) as _i60.Future<void>);
}

/// A class which mocks [RequestCubit].
///
/// See the documentation for Mockito's code generation for more information.
class MockRequestCubit extends _i1.Mock implements _i73.RequestCubit {
  MockRequestCubit() {
    _i1.throwOnMissingStub(this);
  }

  @override
  set phoneNumberError(String? _phoneNumberError) => super.noSuchMethod(
        Invocation.setter(
          #phoneNumberError,
          _phoneNumberError,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set requestRemoteRepo(_i74.RequestRemoteRepo? _requestRemoteRepo) =>
      super.noSuchMethod(
        Invocation.setter(
          #requestRemoteRepo,
          _requestRemoteRepo,
        ),
        returnValueForMissingStub: null,
      );
  @override
  String get currentRequest => (super.noSuchMethod(
        Invocation.getter(#currentRequest),
        returnValue: '',
      ) as String);
  @override
  set currentRequest(String? _currentRequest) => super.noSuchMethod(
        Invocation.setter(
          #currentRequest,
          _currentRequest,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i4.TextEditingController get amountController => (super.noSuchMethod(
        Invocation.getter(#amountController),
        returnValue: _FakeTextEditingController_2(
          this,
          Invocation.getter(#amountController),
        ),
      ) as _i4.TextEditingController);
  @override
  set amountController(_i4.TextEditingController? _amountController) =>
      super.noSuchMethod(
        Invocation.setter(
          #amountController,
          _amountController,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i4.TextEditingController get noteController => (super.noSuchMethod(
        Invocation.getter(#noteController),
        returnValue: _FakeTextEditingController_2(
          this,
          Invocation.getter(#noteController),
        ),
      ) as _i4.TextEditingController);
  @override
  set noteController(_i4.TextEditingController? _noteController) =>
      super.noSuchMethod(
        Invocation.setter(
          #noteController,
          _noteController,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i4.TextEditingController get phoneNumberController => (super.noSuchMethod(
        Invocation.getter(#phoneNumberController),
        returnValue: _FakeTextEditingController_2(
          this,
          Invocation.getter(#phoneNumberController),
        ),
      ) as _i4.TextEditingController);
  @override
  set phoneNumberController(
          _i4.TextEditingController? _phoneNumberController) =>
      super.noSuchMethod(
        Invocation.setter(
          #phoneNumberController,
          _phoneNumberController,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i4.TextEditingController get firstNameController => (super.noSuchMethod(
        Invocation.getter(#firstNameController),
        returnValue: _FakeTextEditingController_2(
          this,
          Invocation.getter(#firstNameController),
        ),
      ) as _i4.TextEditingController);
  @override
  set firstNameController(_i4.TextEditingController? _firstNameController) =>
      super.noSuchMethod(
        Invocation.setter(
          #firstNameController,
          _firstNameController,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i4.TextEditingController get lastNameController => (super.noSuchMethod(
        Invocation.getter(#lastNameController),
        returnValue: _FakeTextEditingController_2(
          this,
          Invocation.getter(#lastNameController),
        ),
      ) as _i4.TextEditingController);
  @override
  set lastNameController(_i4.TextEditingController? _lastNameController) =>
      super.noSuchMethod(
        Invocation.setter(
          #lastNameController,
          _lastNameController,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i4.FocusNode get firstNameFocus => (super.noSuchMethod(
        Invocation.getter(#firstNameFocus),
        returnValue: _FakeFocusNode_3(
          this,
          Invocation.getter(#firstNameFocus),
        ),
      ) as _i4.FocusNode);
  @override
  set firstNameFocus(_i4.FocusNode? _firstNameFocus) => super.noSuchMethod(
        Invocation.setter(
          #firstNameFocus,
          _firstNameFocus,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i4.FocusNode get familyNameFocus => (super.noSuchMethod(
        Invocation.getter(#familyNameFocus),
        returnValue: _FakeFocusNode_3(
          this,
          Invocation.getter(#familyNameFocus),
        ),
      ) as _i4.FocusNode);
  @override
  set familyNameFocus(_i4.FocusNode? _familyNameFocus) => super.noSuchMethod(
        Invocation.setter(
          #familyNameFocus,
          _familyNameFocus,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i4.FocusNode get phoneNumberFocus => (super.noSuchMethod(
        Invocation.getter(#phoneNumberFocus),
        returnValue: _FakeFocusNode_3(
          this,
          Invocation.getter(#phoneNumberFocus),
        ),
      ) as _i4.FocusNode);
  @override
  set phoneNumberFocus(_i4.FocusNode? _phoneNumberFocus) => super.noSuchMethod(
        Invocation.setter(
          #phoneNumberFocus,
          _phoneNumberFocus,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set categoryErrorMessage(String? _categoryErrorMessage) => super.noSuchMethod(
        Invocation.setter(
          #categoryErrorMessage,
          _categoryErrorMessage,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set currentCategory(String? _currentCategory) => super.noSuchMethod(
        Invocation.setter(
          #currentCategory,
          _currentCategory,
        ),
        returnValueForMissingStub: null,
      );
  @override
  int get currentTapIndex => (super.noSuchMethod(
        Invocation.getter(#currentTapIndex),
        returnValue: 0,
      ) as int);
  @override
  set currentTapIndex(int? _currentTapIndex) => super.noSuchMethod(
        Invocation.setter(
          #currentTapIndex,
          _currentTapIndex,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i17.MoneyRequestsModel get moneyRequestsModel => (super.noSuchMethod(
        Invocation.getter(#moneyRequestsModel),
        returnValue: _FakeMoneyRequestsModel_19(
          this,
          Invocation.getter(#moneyRequestsModel),
        ),
      ) as _i17.MoneyRequestsModel);
  @override
  set moneyRequestsModel(_i17.MoneyRequestsModel? _moneyRequestsModel) =>
      super.noSuchMethod(
        Invocation.setter(
          #moneyRequestsModel,
          _moneyRequestsModel,
        ),
        returnValueForMissingStub: null,
      );
  @override
  List<_i17.RequestModel> get requests => (super.noSuchMethod(
        Invocation.getter(#requests),
        returnValue: <_i17.RequestModel>[],
      ) as List<_i17.RequestModel>);
  @override
  _i75.MoneyRequestFilterEnum get filterStatus => (super.noSuchMethod(
        Invocation.getter(#filterStatus),
        returnValue: _i75.MoneyRequestFilterEnum.allRequests,
      ) as _i75.MoneyRequestFilterEnum);
  @override
  set filterStatus(_i75.MoneyRequestFilterEnum? status) => super.noSuchMethod(
        Invocation.setter(
          #filterStatus,
          status,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i18.RequestState get state => (super.noSuchMethod(
        Invocation.getter(#state),
        returnValue: _FakeRequestState_20(
          this,
          Invocation.getter(#state),
        ),
      ) as _i18.RequestState);
  @override
  _i60.Stream<_i18.RequestState> get stream => (super.noSuchMethod(
        Invocation.getter(#stream),
        returnValue: _i60.Stream<_i18.RequestState>.empty(),
      ) as _i60.Stream<_i18.RequestState>);
  @override
  bool get isClosed => (super.noSuchMethod(
        Invocation.getter(#isClosed),
        returnValue: false,
      ) as bool);
  @override
  List<_i17.RequestModel> searchInReceivedRequests(String? value) =>
      (super.noSuchMethod(
        Invocation.method(
          #searchInReceivedRequests,
          [value],
        ),
        returnValue: <_i17.RequestModel>[],
      ) as List<_i17.RequestModel>);
  @override
  void setCurrentTapIndex(int? value) => super.noSuchMethod(
        Invocation.method(
          #setCurrentTapIndex,
          [value],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void setCurrentCategory(String? value) => super.noSuchMethod(
        Invocation.method(
          #setCurrentCategory,
          [value],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void updateState() => super.noSuchMethod(
        Invocation.method(
          #updateState,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  bool requestBeneficiaryDataEnabledButton(
          _i4.GlobalKey<_i4.FormState>? requestBeneficiaryValidationFormKey) =>
      (super.noSuchMethod(
        Invocation.method(
          #requestBeneficiaryDataEnabledButton,
          [requestBeneficiaryValidationFormKey],
        ),
        returnValue: false,
      ) as bool);
  @override
  bool requestAmountButton(
          _i4.GlobalKey<_i4.FormState>? requestMoneyValidationFormKey) =>
      (super.noSuchMethod(
        Invocation.method(
          #requestAmountButton,
          [requestMoneyValidationFormKey],
        ),
        returnValue: false,
      ) as bool);
  @override
  void resetRequestAmount() => super.noSuchMethod(
        Invocation.method(
          #resetRequestAmount,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void reset({String? phoneNumber}) => super.noSuchMethod(
        Invocation.method(
          #reset,
          [],
          {#phoneNumber: phoneNumber},
        ),
        returnValueForMissingStub: null,
      );
  @override
  void setPhoneNumber(String? newPhoneNumber) => super.noSuchMethod(
        Invocation.method(
          #setPhoneNumber,
          [newPhoneNumber],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void resetStateAfterNavigate() => super.noSuchMethod(
        Invocation.method(
          #resetStateAfterNavigate,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i60.Future<void> getMoneyRequests() => (super.noSuchMethod(
        Invocation.method(
          #getMoneyRequests,
          [],
        ),
        returnValue: _i60.Future<void>.value(),
        returnValueForMissingStub: _i60.Future<void>.value(),
      ) as _i60.Future<void>);
  @override
  _i60.Future<_i76.Beneficiary?> addNewRequestBeneficiary() =>
      (super.noSuchMethod(
        Invocation.method(
          #addNewRequestBeneficiary,
          [],
        ),
        returnValue: _i60.Future<_i76.Beneficiary?>.value(),
      ) as _i60.Future<_i76.Beneficiary?>);
  @override
  _i60.Future<void> sendRequestMoney(String? uuid) => (super.noSuchMethod(
        Invocation.method(
          #sendRequestMoney,
          [uuid],
        ),
        returnValue: _i60.Future<void>.value(),
        returnValueForMissingStub: _i60.Future<void>.value(),
      ) as _i60.Future<void>);
  @override
  _i60.Future<void> acceptOrRejectRequest({
    required String? requestUUID,
    required _i75.MoneyRequestFilterEnum? status,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #acceptOrRejectRequest,
          [],
          {
            #requestUUID: requestUUID,
            #status: status,
          },
        ),
        returnValue: _i60.Future<void>.value(),
        returnValueForMissingStub: _i60.Future<void>.value(),
      ) as _i60.Future<void>);
  @override
  void resetCubitStateToInitial() => super.noSuchMethod(
        Invocation.method(
          #resetCubitStateToInitial,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void emit(_i18.RequestState? state) => super.noSuchMethod(
        Invocation.method(
          #emit,
          [state],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void onChange(_i61.Change<_i18.RequestState>? change) => super.noSuchMethod(
        Invocation.method(
          #onChange,
          [change],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void addError(
    Object? error, [
    StackTrace? stackTrace,
  ]) =>
      super.noSuchMethod(
        Invocation.method(
          #addError,
          [
            error,
            stackTrace,
          ],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void onError(
    Object? error,
    StackTrace? stackTrace,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #onError,
          [
            error,
            stackTrace,
          ],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i60.Future<void> close() => (super.noSuchMethod(
        Invocation.method(
          #close,
          [],
        ),
        returnValue: _i60.Future<void>.value(),
        returnValueForMissingStub: _i60.Future<void>.value(),
      ) as _i60.Future<void>);
}

/// A class which mocks [DepositCubit].
///
/// See the documentation for Mockito's code generation for more information.
class MockDepositCubit extends _i1.Mock implements _i19.DepositCubit {
  MockDepositCubit() {
    _i1.throwOnMissingStub(this);
  }

  @override
  set card(_i72.CreditCardModel? _card) => super.noSuchMethod(
        Invocation.setter(
          #card,
          _card,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i4.TextEditingController get amountController => (super.noSuchMethod(
        Invocation.getter(#amountController),
        returnValue: _FakeTextEditingController_2(
          this,
          Invocation.getter(#amountController),
        ),
      ) as _i4.TextEditingController);
  @override
  bool get buttonEnabled => (super.noSuchMethod(
        Invocation.getter(#buttonEnabled),
        returnValue: false,
      ) as bool);
  @override
  _i19.DepositState get state => (super.noSuchMethod(
        Invocation.getter(#state),
        returnValue: _FakeDepositState_21(
          this,
          Invocation.getter(#state),
        ),
      ) as _i19.DepositState);
  @override
  _i60.Stream<_i19.DepositState> get stream => (super.noSuchMethod(
        Invocation.getter(#stream),
        returnValue: _i60.Stream<_i19.DepositState>.empty(),
      ) as _i60.Stream<_i19.DepositState>);
  @override
  bool get isClosed => (super.noSuchMethod(
        Invocation.getter(#isClosed),
        returnValue: false,
      ) as bool);
  @override
  _i60.Future<bool> create() => (super.noSuchMethod(
        Invocation.method(
          #create,
          [],
        ),
        returnValue: _i60.Future<bool>.value(false),
      ) as _i60.Future<bool>);
  @override
  void setCard(_i72.CreditCardModel? card) => super.noSuchMethod(
        Invocation.method(
          #setCard,
          [card],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i60.Future<void> close() => (super.noSuchMethod(
        Invocation.method(
          #close,
          [],
        ),
        returnValue: _i60.Future<void>.value(),
        returnValueForMissingStub: _i60.Future<void>.value(),
      ) as _i60.Future<void>);
  @override
  void emit(_i19.DepositState? state) => super.noSuchMethod(
        Invocation.method(
          #emit,
          [state],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void onChange(_i61.Change<_i19.DepositState>? change) => super.noSuchMethod(
        Invocation.method(
          #onChange,
          [change],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void addError(
    Object? error, [
    StackTrace? stackTrace,
  ]) =>
      super.noSuchMethod(
        Invocation.method(
          #addError,
          [
            error,
            stackTrace,
          ],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void onError(
    Object? error,
    StackTrace? stackTrace,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #onError,
          [
            error,
            stackTrace,
          ],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [PromotionsCubit].
///
/// See the documentation for Mockito's code generation for more information.
class MockPromotionsCubit extends _i1.Mock implements _i20.PromotionsCubit {
  MockPromotionsCubit() {
    _i1.throwOnMissingStub(this);
  }

  @override
  set promotionsRepo(_i77.PromotionsRepo? _promotionsRepo) =>
      super.noSuchMethod(
        Invocation.setter(
          #promotionsRepo,
          _promotionsRepo,
        ),
        returnValueForMissingStub: null,
      );
  @override
  List<_i78.SinglePromotion> get filteredPromotions => (super.noSuchMethod(
        Invocation.getter(#filteredPromotions),
        returnValue: <_i78.SinglePromotion>[],
      ) as List<_i78.SinglePromotion>);
  @override
  set filteredPromotions(List<_i78.SinglePromotion>? _filteredPromotions) =>
      super.noSuchMethod(
        Invocation.setter(
          #filteredPromotions,
          _filteredPromotions,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i4.TextEditingController get searchBarController => (super.noSuchMethod(
        Invocation.getter(#searchBarController),
        returnValue: _FakeTextEditingController_2(
          this,
          Invocation.getter(#searchBarController),
        ),
      ) as _i4.TextEditingController);
  @override
  set searchBarController(_i4.TextEditingController? _searchBarController) =>
      super.noSuchMethod(
        Invocation.setter(
          #searchBarController,
          _searchBarController,
        ),
        returnValueForMissingStub: null,
      );
  @override
  List<_i48.FilterItem> get filters => (super.noSuchMethod(
        Invocation.getter(#filters),
        returnValue: <_i48.FilterItem>[],
      ) as List<_i48.FilterItem>);
  @override
  set filters(List<_i48.FilterItem>? _filters) => super.noSuchMethod(
        Invocation.setter(
          #filters,
          _filters,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set promotionsModel(_i78.PromotionsModel? _promotionsModel) =>
      super.noSuchMethod(
        Invocation.setter(
          #promotionsModel,
          _promotionsModel,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i20.PromotionsState get state => (super.noSuchMethod(
        Invocation.getter(#state),
        returnValue: _FakePromotionsState_22(
          this,
          Invocation.getter(#state),
        ),
      ) as _i20.PromotionsState);
  @override
  _i60.Stream<_i20.PromotionsState> get stream => (super.noSuchMethod(
        Invocation.getter(#stream),
        returnValue: _i60.Stream<_i20.PromotionsState>.empty(),
      ) as _i60.Stream<_i20.PromotionsState>);
  @override
  bool get isClosed => (super.noSuchMethod(
        Invocation.getter(#isClosed),
        returnValue: false,
      ) as bool);
  @override
  void filter(String? value) => super.noSuchMethod(
        Invocation.method(
          #filter,
          [value],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void resetSearchBar() => super.noSuchMethod(
        Invocation.method(
          #resetSearchBar,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i60.Future<void> getPromotions() => (super.noSuchMethod(
        Invocation.method(
          #getPromotions,
          [],
        ),
        returnValue: _i60.Future<void>.value(),
        returnValueForMissingStub: _i60.Future<void>.value(),
      ) as _i60.Future<void>);
  @override
  void resetState() => super.noSuchMethod(
        Invocation.method(
          #resetState,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void emit(_i20.PromotionsState? state) => super.noSuchMethod(
        Invocation.method(
          #emit,
          [state],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void onChange(_i61.Change<_i20.PromotionsState>? change) =>
      super.noSuchMethod(
        Invocation.method(
          #onChange,
          [change],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void addError(
    Object? error, [
    StackTrace? stackTrace,
  ]) =>
      super.noSuchMethod(
        Invocation.method(
          #addError,
          [
            error,
            stackTrace,
          ],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void onError(
    Object? error,
    StackTrace? stackTrace,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #onError,
          [
            error,
            stackTrace,
          ],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i60.Future<void> close() => (super.noSuchMethod(
        Invocation.method(
          #close,
          [],
        ),
        returnValue: _i60.Future<void>.value(),
        returnValueForMissingStub: _i60.Future<void>.value(),
      ) as _i60.Future<void>);
}

/// A class which mocks [CountryTypeCubit].
///
/// See the documentation for Mockito's code generation for more information.
class MockCountryTypeCubit extends _i1.Mock implements _i21.CountryTypeCubit {
  MockCountryTypeCubit() {
    _i1.throwOnMissingStub(this);
  }

  @override
  List<_i79.CountryType> get countryTypes => (super.noSuchMethod(
        Invocation.getter(#countryTypes),
        returnValue: <_i79.CountryType>[],
      ) as List<_i79.CountryType>);
  @override
  set countryTypes(List<_i79.CountryType>? _countryTypes) => super.noSuchMethod(
        Invocation.setter(
          #countryTypes,
          _countryTypes,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set selectedCountry(_i79.CountryType? _selectedCountry) => super.noSuchMethod(
        Invocation.setter(
          #selectedCountry,
          _selectedCountry,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i21.CountryTypeState get state => (super.noSuchMethod(
        Invocation.getter(#state),
        returnValue: _FakeCountryTypeState_23(
          this,
          Invocation.getter(#state),
        ),
      ) as _i21.CountryTypeState);
  @override
  _i60.Stream<_i21.CountryTypeState> get stream => (super.noSuchMethod(
        Invocation.getter(#stream),
        returnValue: _i60.Stream<_i21.CountryTypeState>.empty(),
      ) as _i60.Stream<_i21.CountryTypeState>);
  @override
  bool get isClosed => (super.noSuchMethod(
        Invocation.getter(#isClosed),
        returnValue: false,
      ) as bool);
  @override
  _i60.Future<void> init() => (super.noSuchMethod(
        Invocation.method(
          #init,
          [],
        ),
        returnValue: _i60.Future<void>.value(),
        returnValueForMissingStub: _i60.Future<void>.value(),
      ) as _i60.Future<void>);
  @override
  void changeSelectedCountry(int? index) => super.noSuchMethod(
        Invocation.method(
          #changeSelectedCountry,
          [index],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void emit(_i21.CountryTypeState? state) => super.noSuchMethod(
        Invocation.method(
          #emit,
          [state],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void onChange(_i61.Change<_i21.CountryTypeState>? change) =>
      super.noSuchMethod(
        Invocation.method(
          #onChange,
          [change],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void addError(
    Object? error, [
    StackTrace? stackTrace,
  ]) =>
      super.noSuchMethod(
        Invocation.method(
          #addError,
          [
            error,
            stackTrace,
          ],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void onError(
    Object? error,
    StackTrace? stackTrace,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #onError,
          [
            error,
            stackTrace,
          ],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i60.Future<void> close() => (super.noSuchMethod(
        Invocation.method(
          #close,
          [],
        ),
        returnValue: _i60.Future<void>.value(),
        returnValueForMissingStub: _i60.Future<void>.value(),
      ) as _i60.Future<void>);
}

/// A class which mocks [BankNameCubit].
///
/// See the documentation for Mockito's code generation for more information.
class MockBankNameCubit extends _i1.Mock implements _i22.BankNameCubit {
  MockBankNameCubit() {
    _i1.throwOnMissingStub(this);
  }

  @override
  set bankNameRemoteRepo(_i80.BankNameRemoteRepo? _bankNameRemoteRepo) =>
      super.noSuchMethod(
        Invocation.setter(
          #bankNameRemoteRepo,
          _bankNameRemoteRepo,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set bankNames(List<_i81.BankName>? _bankNames) => super.noSuchMethod(
        Invocation.setter(
          #bankNames,
          _bankNames,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set errorMessage(String? _errorMessage) => super.noSuchMethod(
        Invocation.setter(
          #errorMessage,
          _errorMessage,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set currentBankName(_i81.BankName? _currentBankName) => super.noSuchMethod(
        Invocation.setter(
          #currentBankName,
          _currentBankName,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i22.BankNameState get state => (super.noSuchMethod(
        Invocation.getter(#state),
        returnValue: _FakeBankNameState_24(
          this,
          Invocation.getter(#state),
        ),
      ) as _i22.BankNameState);
  @override
  _i60.Stream<_i22.BankNameState> get stream => (super.noSuchMethod(
        Invocation.getter(#stream),
        returnValue: _i60.Stream<_i22.BankNameState>.empty(),
      ) as _i60.Stream<_i22.BankNameState>);
  @override
  bool get isClosed => (super.noSuchMethod(
        Invocation.getter(#isClosed),
        returnValue: false,
      ) as bool);
  @override
  void setCurrentBankName(_i81.BankName? value) => super.noSuchMethod(
        Invocation.method(
          #setCurrentBankName,
          [value],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i60.Future<void> getBankNames() => (super.noSuchMethod(
        Invocation.method(
          #getBankNames,
          [],
        ),
        returnValue: _i60.Future<void>.value(),
        returnValueForMissingStub: _i60.Future<void>.value(),
      ) as _i60.Future<void>);
  @override
  void reset() => super.noSuchMethod(
        Invocation.method(
          #reset,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void emit(_i22.BankNameState? state) => super.noSuchMethod(
        Invocation.method(
          #emit,
          [state],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void onChange(_i61.Change<_i22.BankNameState>? change) => super.noSuchMethod(
        Invocation.method(
          #onChange,
          [change],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void addError(
    Object? error, [
    StackTrace? stackTrace,
  ]) =>
      super.noSuchMethod(
        Invocation.method(
          #addError,
          [
            error,
            stackTrace,
          ],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void onError(
    Object? error,
    StackTrace? stackTrace,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #onError,
          [
            error,
            stackTrace,
          ],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i60.Future<void> close() => (super.noSuchMethod(
        Invocation.method(
          #close,
          [],
        ),
        returnValue: _i60.Future<void>.value(),
        returnValueForMissingStub: _i60.Future<void>.value(),
      ) as _i60.Future<void>);
}

/// A class which mocks [CategoryCubit].
///
/// See the documentation for Mockito's code generation for more information.
class MockCategoryCubit extends _i1.Mock implements _i8.CategoryCubit {
  MockCategoryCubit() {
    _i1.throwOnMissingStub(this);
  }

  @override
  List<_i82.CategoryModel> get categories => (super.noSuchMethod(
        Invocation.getter(#categories),
        returnValue: <_i82.CategoryModel>[],
      ) as List<_i82.CategoryModel>);
  @override
  set categories(List<_i82.CategoryModel>? _categories) => super.noSuchMethod(
        Invocation.setter(
          #categories,
          _categories,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i8.CategoryState get state => (super.noSuchMethod(
        Invocation.getter(#state),
        returnValue: _FakeCategoryState_25(
          this,
          Invocation.getter(#state),
        ),
      ) as _i8.CategoryState);
  @override
  _i60.Stream<_i8.CategoryState> get stream => (super.noSuchMethod(
        Invocation.getter(#stream),
        returnValue: _i60.Stream<_i8.CategoryState>.empty(),
      ) as _i60.Stream<_i8.CategoryState>);
  @override
  bool get isClosed => (super.noSuchMethod(
        Invocation.getter(#isClosed),
        returnValue: false,
      ) as bool);
  @override
  _i60.Future<List<_i82.CategoryModel>> get() => (super.noSuchMethod(
        Invocation.method(
          #get,
          [],
        ),
        returnValue:
            _i60.Future<List<_i82.CategoryModel>>.value(<_i82.CategoryModel>[]),
      ) as _i60.Future<List<_i82.CategoryModel>>);
  @override
  void emit(_i8.CategoryState? state) => super.noSuchMethod(
        Invocation.method(
          #emit,
          [state],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void onChange(_i61.Change<_i8.CategoryState>? change) => super.noSuchMethod(
        Invocation.method(
          #onChange,
          [change],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void addError(
    Object? error, [
    StackTrace? stackTrace,
  ]) =>
      super.noSuchMethod(
        Invocation.method(
          #addError,
          [
            error,
            stackTrace,
          ],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void onError(
    Object? error,
    StackTrace? stackTrace,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #onError,
          [
            error,
            stackTrace,
          ],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i60.Future<void> close() => (super.noSuchMethod(
        Invocation.method(
          #close,
          [],
        ),
        returnValue: _i60.Future<void>.value(),
        returnValueForMissingStub: _i60.Future<void>.value(),
      ) as _i60.Future<void>);
}

/// A class which mocks [TransactionAmountCubit].
///
/// See the documentation for Mockito's code generation for more information.
class MockTransactionAmountCubit extends _i1.Mock
    implements _i23.TransactionAmountCubit {
  MockTransactionAmountCubit() {
    _i1.throwOnMissingStub(this);
  }

  @override
  List<_i83.Currency> get currencies => (super.noSuchMethod(
        Invocation.getter(#currencies),
        returnValue: <_i83.Currency>[],
      ) as List<_i83.Currency>);
  @override
  set currencies(List<_i83.Currency>? _currencies) => super.noSuchMethod(
        Invocation.setter(
          #currencies,
          _currencies,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set amount(String? _amount) => super.noSuchMethod(
        Invocation.setter(
          #amount,
          _amount,
        ),
        returnValueForMissingStub: null,
      );
  @override
  String get totalWallet => (super.noSuchMethod(
        Invocation.getter(#totalWallet),
        returnValue: '',
      ) as String);
  @override
  set totalWallet(String? _totalWallet) => super.noSuchMethod(
        Invocation.setter(
          #totalWallet,
          _totalWallet,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set currentCurrency(_i83.Currency? _currentCurrency) => super.noSuchMethod(
        Invocation.setter(
          #currentCurrency,
          _currentCurrency,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i23.TransactionAmountState get state => (super.noSuchMethod(
        Invocation.getter(#state),
        returnValue: _FakeTransactionAmountState_26(
          this,
          Invocation.getter(#state),
        ),
      ) as _i23.TransactionAmountState);
  @override
  _i60.Stream<_i23.TransactionAmountState> get stream => (super.noSuchMethod(
        Invocation.getter(#stream),
        returnValue: _i60.Stream<_i23.TransactionAmountState>.empty(),
      ) as _i60.Stream<_i23.TransactionAmountState>);
  @override
  bool get isClosed => (super.noSuchMethod(
        Invocation.getter(#isClosed),
        returnValue: false,
      ) as bool);
  @override
  void reset() => super.noSuchMethod(
        Invocation.method(
          #reset,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i60.Future<void> loadCurrencies() => (super.noSuchMethod(
        Invocation.method(
          #loadCurrencies,
          [],
        ),
        returnValue: _i60.Future<void>.value(),
        returnValueForMissingStub: _i60.Future<void>.value(),
      ) as _i60.Future<void>);
  @override
  void onAmountChange(String? amount) => super.noSuchMethod(
        Invocation.method(
          #onAmountChange,
          [amount],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void changeCurrency(_i83.Currency? currency) => super.noSuchMethod(
        Invocation.method(
          #changeCurrency,
          [currency],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void emit(_i23.TransactionAmountState? state) => super.noSuchMethod(
        Invocation.method(
          #emit,
          [state],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void onChange(_i61.Change<_i23.TransactionAmountState>? change) =>
      super.noSuchMethod(
        Invocation.method(
          #onChange,
          [change],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void addError(
    Object? error, [
    StackTrace? stackTrace,
  ]) =>
      super.noSuchMethod(
        Invocation.method(
          #addError,
          [
            error,
            stackTrace,
          ],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void onError(
    Object? error,
    StackTrace? stackTrace,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #onError,
          [
            error,
            stackTrace,
          ],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i60.Future<void> close() => (super.noSuchMethod(
        Invocation.method(
          #close,
          [],
        ),
        returnValue: _i60.Future<void>.value(),
        returnValueForMissingStub: _i60.Future<void>.value(),
      ) as _i60.Future<void>);
}

/// A class which mocks [TransactionHistoryCubit].
///
/// See the documentation for Mockito's code generation for more information.
class MockTransactionHistoryCubit extends _i1.Mock
    implements _i24.TransactionHistoryCubit {
  MockTransactionHistoryCubit() {
    _i1.throwOnMissingStub(this);
  }

  @override
  List<_i84.TransactionModel> get transactions => (super.noSuchMethod(
        Invocation.getter(#transactions),
        returnValue: <_i84.TransactionModel>[],
      ) as List<_i84.TransactionModel>);
  @override
  set transactions(List<_i84.TransactionModel>? _transactions) =>
      super.noSuchMethod(
        Invocation.setter(
          #transactions,
          _transactions,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set wallet(_i85.Wallet? _wallet) => super.noSuchMethod(
        Invocation.setter(
          #wallet,
          _wallet,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set filterCategory(String? _filterCategory) => super.noSuchMethod(
        Invocation.setter(
          #filterCategory,
          _filterCategory,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set period(String? _period) => super.noSuchMethod(
        Invocation.setter(
          #period,
          _period,
        ),
        returnValueForMissingStub: null,
      );
  @override
  String get query => (super.noSuchMethod(
        Invocation.getter(#query),
        returnValue: '',
      ) as String);
  @override
  set query(String? _query) => super.noSuchMethod(
        Invocation.setter(
          #query,
          _query,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i4.TextEditingController get from => (super.noSuchMethod(
        Invocation.getter(#from),
        returnValue: _FakeTextEditingController_2(
          this,
          Invocation.getter(#from),
        ),
      ) as _i4.TextEditingController);
  @override
  set from(_i4.TextEditingController? _from) => super.noSuchMethod(
        Invocation.setter(
          #from,
          _from,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i4.TextEditingController get to => (super.noSuchMethod(
        Invocation.getter(#to),
        returnValue: _FakeTextEditingController_2(
          this,
          Invocation.getter(#to),
        ),
      ) as _i4.TextEditingController);
  @override
  set to(_i4.TextEditingController? _to) => super.noSuchMethod(
        Invocation.setter(
          #to,
          _to,
        ),
        returnValueForMissingStub: null,
      );
  @override
  Map<String, List<_i84.TransactionModel>> get groupedData =>
      (super.noSuchMethod(
        Invocation.getter(#groupedData),
        returnValue: <String, List<_i84.TransactionModel>>{},
      ) as Map<String, List<_i84.TransactionModel>>);
  @override
  Map<String, String> get periodTypes => (super.noSuchMethod(
        Invocation.getter(#periodTypes),
        returnValue: <String, String>{},
      ) as Map<String, String>);
  @override
  List<String> get transactionTypes => (super.noSuchMethod(
        Invocation.getter(#transactionTypes),
        returnValue: <String>[],
      ) as List<String>);
  @override
  _i24.TransactionHistoryState get state => (super.noSuchMethod(
        Invocation.getter(#state),
        returnValue: _FakeTransactionHistoryState_27(
          this,
          Invocation.getter(#state),
        ),
      ) as _i24.TransactionHistoryState);
  @override
  _i60.Stream<_i24.TransactionHistoryState> get stream => (super.noSuchMethod(
        Invocation.getter(#stream),
        returnValue: _i60.Stream<_i24.TransactionHistoryState>.empty(),
      ) as _i60.Stream<_i24.TransactionHistoryState>);
  @override
  bool get isClosed => (super.noSuchMethod(
        Invocation.getter(#isClosed),
        returnValue: false,
      ) as bool);
  @override
  _i60.Future<void> init() => (super.noSuchMethod(
        Invocation.method(
          #init,
          [],
        ),
        returnValue: _i60.Future<void>.value(),
        returnValueForMissingStub: _i60.Future<void>.value(),
      ) as _i60.Future<void>);
  @override
  _i60.Future<void> getWallet() => (super.noSuchMethod(
        Invocation.method(
          #getWallet,
          [],
        ),
        returnValue: _i60.Future<void>.value(),
        returnValueForMissingStub: _i60.Future<void>.value(),
      ) as _i60.Future<void>);
  @override
  _i60.Future<void> loadTransactions() => (super.noSuchMethod(
        Invocation.method(
          #loadTransactions,
          [],
        ),
        returnValue: _i60.Future<void>.value(),
        returnValueForMissingStub: _i60.Future<void>.value(),
      ) as _i60.Future<void>);
  @override
  _i60.Future<void> getAllTransactions() => (super.noSuchMethod(
        Invocation.method(
          #getAllTransactions,
          [],
        ),
        returnValue: _i60.Future<void>.value(),
        returnValueForMissingStub: _i60.Future<void>.value(),
      ) as _i60.Future<void>);
  @override
  _i60.Future<void> filterByCategory() => (super.noSuchMethod(
        Invocation.method(
          #filterByCategory,
          [],
        ),
        returnValue: _i60.Future<void>.value(),
        returnValueForMissingStub: _i60.Future<void>.value(),
      ) as _i60.Future<void>);
  @override
  _i60.Future<void> filterByPeriod() => (super.noSuchMethod(
        Invocation.method(
          #filterByPeriod,
          [],
        ),
        returnValue: _i60.Future<void>.value(),
        returnValueForMissingStub: _i60.Future<void>.value(),
      ) as _i60.Future<void>);
  @override
  _i60.Future<void> searchInTransactions({required String? query}) =>
      (super.noSuchMethod(
        Invocation.method(
          #searchInTransactions,
          [],
          {#query: query},
        ),
        returnValue: _i60.Future<void>.value(),
        returnValueForMissingStub: _i60.Future<void>.value(),
      ) as _i60.Future<void>);
  @override
  void setPeriod(String? period) => super.noSuchMethod(
        Invocation.method(
          #setPeriod,
          [period],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void setCategory(String? category) => super.noSuchMethod(
        Invocation.method(
          #setCategory,
          [category],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void resetValues() => super.noSuchMethod(
        Invocation.method(
          #resetValues,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i60.Future<void> close() => (super.noSuchMethod(
        Invocation.method(
          #close,
          [],
        ),
        returnValue: _i60.Future<void>.value(),
        returnValueForMissingStub: _i60.Future<void>.value(),
      ) as _i60.Future<void>);
  @override
  void emit(_i24.TransactionHistoryState? state) => super.noSuchMethod(
        Invocation.method(
          #emit,
          [state],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void onChange(_i61.Change<_i24.TransactionHistoryState>? change) =>
      super.noSuchMethod(
        Invocation.method(
          #onChange,
          [change],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void addError(
    Object? error, [
    StackTrace? stackTrace,
  ]) =>
      super.noSuchMethod(
        Invocation.method(
          #addError,
          [
            error,
            stackTrace,
          ],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void onError(
    Object? error,
    StackTrace? stackTrace,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #onError,
          [
            error,
            stackTrace,
          ],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [GiftCubit].
///
/// See the documentation for Mockito's code generation for more information.
class MockGiftCubit extends _i1.Mock implements _i26.GiftCubit {
  MockGiftCubit() {
    _i1.throwOnMissingStub(this);
  }

  @override
  set giftRepository(_i86.GiftRepository? _giftRepository) =>
      super.noSuchMethod(
        Invocation.setter(
          #giftRepository,
          _giftRepository,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i4.TextEditingController get amountController => (super.noSuchMethod(
        Invocation.getter(#amountController),
        returnValue: _FakeTextEditingController_2(
          this,
          Invocation.getter(#amountController),
        ),
      ) as _i4.TextEditingController);
  @override
  set amountController(_i4.TextEditingController? _amountController) =>
      super.noSuchMethod(
        Invocation.setter(
          #amountController,
          _amountController,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i4.TextEditingController get phoneNumberController => (super.noSuchMethod(
        Invocation.getter(#phoneNumberController),
        returnValue: _FakeTextEditingController_2(
          this,
          Invocation.getter(#phoneNumberController),
        ),
      ) as _i4.TextEditingController);
  @override
  set phoneNumberController(
          _i4.TextEditingController? _phoneNumberController) =>
      super.noSuchMethod(
        Invocation.setter(
          #phoneNumberController,
          _phoneNumberController,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i4.FocusNode get phoneNumberFocus => (super.noSuchMethod(
        Invocation.getter(#phoneNumberFocus),
        returnValue: _FakeFocusNode_3(
          this,
          Invocation.getter(#phoneNumberFocus),
        ),
      ) as _i4.FocusNode);
  @override
  set phoneNumberFocus(_i4.FocusNode? _phoneNumberFocus) => super.noSuchMethod(
        Invocation.setter(
          #phoneNumberFocus,
          _phoneNumberFocus,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i4.TextEditingController get firstNameController => (super.noSuchMethod(
        Invocation.getter(#firstNameController),
        returnValue: _FakeTextEditingController_2(
          this,
          Invocation.getter(#firstNameController),
        ),
      ) as _i4.TextEditingController);
  @override
  set firstNameController(_i4.TextEditingController? _firstNameController) =>
      super.noSuchMethod(
        Invocation.setter(
          #firstNameController,
          _firstNameController,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i4.TextEditingController get noteController => (super.noSuchMethod(
        Invocation.getter(#noteController),
        returnValue: _FakeTextEditingController_2(
          this,
          Invocation.getter(#noteController),
        ),
      ) as _i4.TextEditingController);
  @override
  set noteController(_i4.TextEditingController? _noteController) =>
      super.noSuchMethod(
        Invocation.setter(
          #noteController,
          _noteController,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i4.TextEditingController get lastNameController => (super.noSuchMethod(
        Invocation.getter(#lastNameController),
        returnValue: _FakeTextEditingController_2(
          this,
          Invocation.getter(#lastNameController),
        ),
      ) as _i4.TextEditingController);
  @override
  set lastNameController(_i4.TextEditingController? _lastNameController) =>
      super.noSuchMethod(
        Invocation.setter(
          #lastNameController,
          _lastNameController,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i4.TextEditingController get giftTitleController => (super.noSuchMethod(
        Invocation.getter(#giftTitleController),
        returnValue: _FakeTextEditingController_2(
          this,
          Invocation.getter(#giftTitleController),
        ),
      ) as _i4.TextEditingController);
  @override
  set giftTitleController(_i4.TextEditingController? _giftTitleController) =>
      super.noSuchMethod(
        Invocation.setter(
          #giftTitleController,
          _giftTitleController,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i4.FocusNode get giftTitleFocus => (super.noSuchMethod(
        Invocation.getter(#giftTitleFocus),
        returnValue: _FakeFocusNode_3(
          this,
          Invocation.getter(#giftTitleFocus),
        ),
      ) as _i4.FocusNode);
  @override
  set giftTitleFocus(_i4.FocusNode? _giftTitleFocus) => super.noSuchMethod(
        Invocation.setter(
          #giftTitleFocus,
          _giftTitleFocus,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i4.FocusNode get firstNameFocus => (super.noSuchMethod(
        Invocation.getter(#firstNameFocus),
        returnValue: _FakeFocusNode_3(
          this,
          Invocation.getter(#firstNameFocus),
        ),
      ) as _i4.FocusNode);
  @override
  set firstNameFocus(_i4.FocusNode? _firstNameFocus) => super.noSuchMethod(
        Invocation.setter(
          #firstNameFocus,
          _firstNameFocus,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i4.FocusNode get lastNameFocus => (super.noSuchMethod(
        Invocation.getter(#lastNameFocus),
        returnValue: _FakeFocusNode_3(
          this,
          Invocation.getter(#lastNameFocus),
        ),
      ) as _i4.FocusNode);
  @override
  set lastNameFocus(_i4.FocusNode? _lastNameFocus) => super.noSuchMethod(
        Invocation.setter(
          #lastNameFocus,
          _lastNameFocus,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i4.TextEditingController get recipientNameController => (super.noSuchMethod(
        Invocation.getter(#recipientNameController),
        returnValue: _FakeTextEditingController_2(
          this,
          Invocation.getter(#recipientNameController),
        ),
      ) as _i4.TextEditingController);
  @override
  set recipientNameController(
          _i4.TextEditingController? _recipientNameController) =>
      super.noSuchMethod(
        Invocation.setter(
          #recipientNameController,
          _recipientNameController,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i4.FocusNode get recipientNameFocus => (super.noSuchMethod(
        Invocation.getter(#recipientNameFocus),
        returnValue: _FakeFocusNode_3(
          this,
          Invocation.getter(#recipientNameFocus),
        ),
      ) as _i4.FocusNode);
  @override
  set recipientNameFocus(_i4.FocusNode? _recipientNameFocus) =>
      super.noSuchMethod(
        Invocation.setter(
          #recipientNameFocus,
          _recipientNameFocus,
        ),
        returnValueForMissingStub: null,
      );
  @override
  String get phoneNumberError => (super.noSuchMethod(
        Invocation.getter(#phoneNumberError),
        returnValue: '',
      ) as String);
  @override
  set phoneNumberError(String? _phoneNumberError) => super.noSuchMethod(
        Invocation.setter(
          #phoneNumberError,
          _phoneNumberError,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set currentCategory(_i63.TransferCategoryModel? _currentCategory) =>
      super.noSuchMethod(
        Invocation.setter(
          #currentCategory,
          _currentCategory,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i25.TodayGifts get todayGifts => (super.noSuchMethod(
        Invocation.getter(#todayGifts),
        returnValue: _FakeTodayGifts_28(
          this,
          Invocation.getter(#todayGifts),
        ),
      ) as _i25.TodayGifts);
  @override
  set todayGifts(_i25.TodayGifts? _todayGifts) => super.noSuchMethod(
        Invocation.setter(
          #todayGifts,
          _todayGifts,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set currentPurpose(String? _currentPurpose) => super.noSuchMethod(
        Invocation.setter(
          #currentPurpose,
          _currentPurpose,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set errorMessage(String? _errorMessage) => super.noSuchMethod(
        Invocation.setter(
          #errorMessage,
          _errorMessage,
        ),
        returnValueForMissingStub: null,
      );
  @override
  int get currentTapIndex => (super.noSuchMethod(
        Invocation.getter(#currentTapIndex),
        returnValue: 0,
      ) as int);
  @override
  set currentTapIndex(int? _currentTapIndex) => super.noSuchMethod(
        Invocation.setter(
          #currentTapIndex,
          _currentTapIndex,
        ),
        returnValueForMissingStub: null,
      );
  @override
  bool get isEmpty => (super.noSuchMethod(
        Invocation.getter(#isEmpty),
        returnValue: false,
      ) as bool);
  @override
  _i26.GiftState get state => (super.noSuchMethod(
        Invocation.getter(#state),
        returnValue: _FakeGiftState_29(
          this,
          Invocation.getter(#state),
        ),
      ) as _i26.GiftState);
  @override
  _i60.Stream<_i26.GiftState> get stream => (super.noSuchMethod(
        Invocation.getter(#stream),
        returnValue: _i60.Stream<_i26.GiftState>.empty(),
      ) as _i60.Stream<_i26.GiftState>);
  @override
  bool get isClosed => (super.noSuchMethod(
        Invocation.getter(#isClosed),
        returnValue: false,
      ) as bool);
  @override
  void resetSendMoneyData() => super.noSuchMethod(
        Invocation.method(
          #resetSendMoneyData,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void reset() => super.noSuchMethod(
        Invocation.method(
          #reset,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void updateState() => super.noSuchMethod(
        Invocation.method(
          #updateState,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  bool isEnabled(_i4.GlobalKey<_i4.FormState>? beneficiaryValidationFormKey) =>
      (super.noSuchMethod(
        Invocation.method(
          #isEnabled,
          [beneficiaryValidationFormKey],
        ),
        returnValue: false,
      ) as bool);
  @override
  bool giftAmountRequestButton(
          _i4.GlobalKey<_i4.FormState>? sendGiftValidationFormKey) =>
      (super.noSuchMethod(
        Invocation.method(
          #giftAmountRequestButton,
          [sendGiftValidationFormKey],
        ),
        returnValue: false,
      ) as bool);
  @override
  void setCurrentCategory(_i63.TransferCategoryModel? value) =>
      super.noSuchMethod(
        Invocation.method(
          #setCurrentCategory,
          [value],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void setCurrentPurpose(String? value) => super.noSuchMethod(
        Invocation.method(
          #setCurrentPurpose,
          [value],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void setCurrentTapIndex(int? value) => super.noSuchMethod(
        Invocation.method(
          #setCurrentTapIndex,
          [value],
        ),
        returnValueForMissingStub: null,
      );
  @override
  List<_i25.ReceivedGiftModel> searchInReceivedGifts(String? name) =>
      (super.noSuchMethod(
        Invocation.method(
          #searchInReceivedGifts,
          [name],
        ),
        returnValue: <_i25.ReceivedGiftModel>[],
      ) as List<_i25.ReceivedGiftModel>);
  @override
  void resetStateAfterNavigate() => super.noSuchMethod(
        Invocation.method(
          #resetStateAfterNavigate,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i60.Future<_i76.Beneficiary?> addNewGiftBeneficiary() => (super.noSuchMethod(
        Invocation.method(
          #addNewGiftBeneficiary,
          [],
        ),
        returnValue: _i60.Future<_i76.Beneficiary?>.value(),
      ) as _i60.Future<_i76.Beneficiary?>);
  @override
  _i60.Future<_i64.ReceiptModel?> sendGift(String? uuid) => (super.noSuchMethod(
        Invocation.method(
          #sendGift,
          [uuid],
        ),
        returnValue: _i60.Future<_i64.ReceiptModel?>.value(),
      ) as _i60.Future<_i64.ReceiptModel?>);
  @override
  _i60.Future<void> getReceiveGifts() => (super.noSuchMethod(
        Invocation.method(
          #getReceiveGifts,
          [],
        ),
        returnValue: _i60.Future<void>.value(),
        returnValueForMissingStub: _i60.Future<void>.value(),
      ) as _i60.Future<void>);
  @override
  void emit(_i26.GiftState? state) => super.noSuchMethod(
        Invocation.method(
          #emit,
          [state],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void onChange(_i61.Change<_i26.GiftState>? change) => super.noSuchMethod(
        Invocation.method(
          #onChange,
          [change],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void addError(
    Object? error, [
    StackTrace? stackTrace,
  ]) =>
      super.noSuchMethod(
        Invocation.method(
          #addError,
          [
            error,
            stackTrace,
          ],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void onError(
    Object? error,
    StackTrace? stackTrace,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #onError,
          [
            error,
            stackTrace,
          ],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i60.Future<void> close() => (super.noSuchMethod(
        Invocation.method(
          #close,
          [],
        ),
        returnValue: _i60.Future<void>.value(),
        returnValueForMissingStub: _i60.Future<void>.value(),
      ) as _i60.Future<void>);
}

/// A class which mocks [MoreCubit].
///
/// See the documentation for Mockito's code generation for more information.
class MockMoreCubit extends _i1.Mock implements _i87.MoreCubit {
  MockMoreCubit() {
    _i1.throwOnMissingStub(this);
  }

  @override
  set accountItems(List<_i88.ItemModel>? _accountItems) => super.noSuchMethod(
        Invocation.setter(
          #accountItems,
          _accountItems,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set settingsItems(List<_i88.ItemModel>? _settingsItems) => super.noSuchMethod(
        Invocation.setter(
          #settingsItems,
          _settingsItems,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set upperList(List<_i88.ItemModel>? _upperList) => super.noSuchMethod(
        Invocation.setter(
          #upperList,
          _upperList,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set helpItems(List<_i88.ItemModel>? _helpItems) => super.noSuchMethod(
        Invocation.setter(
          #helpItems,
          _helpItems,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i27.MoreState get state => (super.noSuchMethod(
        Invocation.getter(#state),
        returnValue: _FakeMoreState_30(
          this,
          Invocation.getter(#state),
        ),
      ) as _i27.MoreState);
  @override
  _i60.Stream<_i27.MoreState> get stream => (super.noSuchMethod(
        Invocation.getter(#stream),
        returnValue: _i60.Stream<_i27.MoreState>.empty(),
      ) as _i60.Stream<_i27.MoreState>);
  @override
  bool get isClosed => (super.noSuchMethod(
        Invocation.getter(#isClosed),
        returnValue: false,
      ) as bool);
  @override
  void init() => super.noSuchMethod(
        Invocation.method(
          #init,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i60.Future<void> deleteSession() => (super.noSuchMethod(
        Invocation.method(
          #deleteSession,
          [],
        ),
        returnValue: _i60.Future<void>.value(),
        returnValueForMissingStub: _i60.Future<void>.value(),
      ) as _i60.Future<void>);
  @override
  _i60.Future<void> getAllAssets() => (super.noSuchMethod(
        Invocation.method(
          #getAllAssets,
          [],
        ),
        returnValue: _i60.Future<void>.value(),
        returnValueForMissingStub: _i60.Future<void>.value(),
      ) as _i60.Future<void>);
  @override
  _i60.Future<void> getAccountList() => (super.noSuchMethod(
        Invocation.method(
          #getAccountList,
          [],
        ),
        returnValue: _i60.Future<void>.value(),
        returnValueForMissingStub: _i60.Future<void>.value(),
      ) as _i60.Future<void>);
  @override
  _i60.Future<void> getSettingsList() => (super.noSuchMethod(
        Invocation.method(
          #getSettingsList,
          [],
        ),
        returnValue: _i60.Future<void>.value(),
        returnValueForMissingStub: _i60.Future<void>.value(),
      ) as _i60.Future<void>);
  @override
  _i60.Future<void> getUpperListList() => (super.noSuchMethod(
        Invocation.method(
          #getUpperListList,
          [],
        ),
        returnValue: _i60.Future<void>.value(),
        returnValueForMissingStub: _i60.Future<void>.value(),
      ) as _i60.Future<void>);
  @override
  _i60.Future<void> getHelpList() => (super.noSuchMethod(
        Invocation.method(
          #getHelpList,
          [],
        ),
        returnValue: _i60.Future<void>.value(),
        returnValueForMissingStub: _i60.Future<void>.value(),
      ) as _i60.Future<void>);
  @override
  void rebuildScreenToUpdateLanguage() => super.noSuchMethod(
        Invocation.method(
          #rebuildScreenToUpdateLanguage,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void resetStateAfterNavigate() => super.noSuchMethod(
        Invocation.method(
          #resetStateAfterNavigate,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void emit(_i27.MoreState? state) => super.noSuchMethod(
        Invocation.method(
          #emit,
          [state],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void onChange(_i61.Change<_i27.MoreState>? change) => super.noSuchMethod(
        Invocation.method(
          #onChange,
          [change],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void addError(
    Object? error, [
    StackTrace? stackTrace,
  ]) =>
      super.noSuchMethod(
        Invocation.method(
          #addError,
          [
            error,
            stackTrace,
          ],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void onError(
    Object? error,
    StackTrace? stackTrace,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #onError,
          [
            error,
            stackTrace,
          ],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i60.Future<void> close() => (super.noSuchMethod(
        Invocation.method(
          #close,
          [],
        ),
        returnValue: _i60.Future<void>.value(),
        returnValueForMissingStub: _i60.Future<void>.value(),
      ) as _i60.Future<void>);
}

/// A class which mocks [AnalyticsCubit].
///
/// See the documentation for Mockito's code generation for more information.
class MockAnalyticsCubit extends _i1.Mock implements _i28.AnalyticsCubit {
  MockAnalyticsCubit() {
    _i1.throwOnMissingStub(this);
  }

  @override
  List<_i84.TransactionModel> get transactions => (super.noSuchMethod(
        Invocation.getter(#transactions),
        returnValue: <_i84.TransactionModel>[],
      ) as List<_i84.TransactionModel>);
  @override
  set transactions(List<_i84.TransactionModel>? _transactions) =>
      super.noSuchMethod(
        Invocation.setter(
          #transactions,
          _transactions,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set model(_i89.AnalyticsListModel? _model) => super.noSuchMethod(
        Invocation.setter(
          #model,
          _model,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set color(_i90.Color? _color) => super.noSuchMethod(
        Invocation.setter(
          #color,
          _color,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set icon(String? _icon) => super.noSuchMethod(
        Invocation.setter(
          #icon,
          _icon,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set name(String? _name) => super.noSuchMethod(
        Invocation.setter(
          #name,
          _name,
        ),
        returnValueForMissingStub: null,
      );
  @override
  String get duration => (super.noSuchMethod(
        Invocation.getter(#duration),
        returnValue: '',
      ) as String);
  @override
  set duration(String? _duration) => super.noSuchMethod(
        Invocation.setter(
          #duration,
          _duration,
        ),
        returnValueForMissingStub: null,
      );
  @override
  List<_i91.AnalyticsCategory> get categories => (super.noSuchMethod(
        Invocation.getter(#categories),
        returnValue: <_i91.AnalyticsCategory>[],
      ) as List<_i91.AnalyticsCategory>);
  @override
  _i28.AnalyticsState get state => (super.noSuchMethod(
        Invocation.getter(#state),
        returnValue: _FakeAnalyticsState_31(
          this,
          Invocation.getter(#state),
        ),
      ) as _i28.AnalyticsState);
  @override
  _i60.Stream<_i28.AnalyticsState> get stream => (super.noSuchMethod(
        Invocation.getter(#stream),
        returnValue: _i60.Stream<_i28.AnalyticsState>.empty(),
      ) as _i60.Stream<_i28.AnalyticsState>);
  @override
  bool get isClosed => (super.noSuchMethod(
        Invocation.getter(#isClosed),
        returnValue: false,
      ) as bool);
  @override
  void setColor(_i90.Color? color) => super.noSuchMethod(
        Invocation.method(
          #setColor,
          [color],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void setIcon(String? icon) => super.noSuchMethod(
        Invocation.method(
          #setIcon,
          [icon],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void setName(String? name) => super.noSuchMethod(
        Invocation.method(
          #setName,
          [name],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i60.Future<void> load() => (super.noSuchMethod(
        Invocation.method(
          #load,
          [],
        ),
        returnValue: _i60.Future<void>.value(),
        returnValueForMissingStub: _i60.Future<void>.value(),
      ) as _i60.Future<void>);
  @override
  void changeDuration(String? duration) => super.noSuchMethod(
        Invocation.method(
          #changeDuration,
          [duration],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void initCategoryForEdit(int? index) => super.noSuchMethod(
        Invocation.method(
          #initCategoryForEdit,
          [index],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i60.Future<void> addCategory() => (super.noSuchMethod(
        Invocation.method(
          #addCategory,
          [],
        ),
        returnValue: _i60.Future<void>.value(),
        returnValueForMissingStub: _i60.Future<void>.value(),
      ) as _i60.Future<void>);
  @override
  void transactionSearch(String? query) => super.noSuchMethod(
        Invocation.method(
          #transactionSearch,
          [query],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void deleteCategory(int? index) => super.noSuchMethod(
        Invocation.method(
          #deleteCategory,
          [index],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void editCategory(int? index) => super.noSuchMethod(
        Invocation.method(
          #editCategory,
          [index],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void resetData() => super.noSuchMethod(
        Invocation.method(
          #resetData,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void emit(_i28.AnalyticsState? state) => super.noSuchMethod(
        Invocation.method(
          #emit,
          [state],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void onChange(_i61.Change<_i28.AnalyticsState>? change) => super.noSuchMethod(
        Invocation.method(
          #onChange,
          [change],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void addError(
    Object? error, [
    StackTrace? stackTrace,
  ]) =>
      super.noSuchMethod(
        Invocation.method(
          #addError,
          [
            error,
            stackTrace,
          ],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void onError(
    Object? error,
    StackTrace? stackTrace,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #onError,
          [
            error,
            stackTrace,
          ],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i60.Future<void> close() => (super.noSuchMethod(
        Invocation.method(
          #close,
          [],
        ),
        returnValue: _i60.Future<void>.value(),
        returnValueForMissingStub: _i60.Future<void>.value(),
      ) as _i60.Future<void>);
}

/// A class which mocks [BillCubit].
///
/// See the documentation for Mockito's code generation for more information.
class MockBillCubit extends _i1.Mock implements _i30.BillCubit {
  MockBillCubit() {
    _i1.throwOnMissingStub(this);
  }

  @override
  Map<String, dynamic> get billTypes => (super.noSuchMethod(
        Invocation.getter(#billTypes),
        returnValue: <String, dynamic>{},
      ) as Map<String, dynamic>);
  @override
  set billTypes(Map<String, dynamic>? _billTypes) => super.noSuchMethod(
        Invocation.setter(
          #billTypes,
          _billTypes,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set billTypeModel(String? _billTypeModel) => super.noSuchMethod(
        Invocation.setter(
          #billTypeModel,
          _billTypeModel,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i29.BillSummaryModel get billSummary => (super.noSuchMethod(
        Invocation.getter(#billSummary),
        returnValue: _FakeBillSummaryModel_32(
          this,
          Invocation.getter(#billSummary),
        ),
      ) as _i29.BillSummaryModel);
  @override
  set billSummary(_i29.BillSummaryModel? _billSummary) => super.noSuchMethod(
        Invocation.setter(
          #billSummary,
          _billSummary,
        ),
        returnValueForMissingStub: null,
      );
  @override
  String get customerId => (super.noSuchMethod(
        Invocation.getter(#customerId),
        returnValue: '',
      ) as String);
  @override
  set customerId(String? _customerId) => super.noSuchMethod(
        Invocation.setter(
          #customerId,
          _customerId,
        ),
        returnValueForMissingStub: null,
      );
  @override
  bool get buttonEnabled => (super.noSuchMethod(
        Invocation.getter(#buttonEnabled),
        returnValue: false,
      ) as bool);
  @override
  _i30.BillState get state => (super.noSuchMethod(
        Invocation.getter(#state),
        returnValue: _FakeBillState_33(
          this,
          Invocation.getter(#state),
        ),
      ) as _i30.BillState);
  @override
  _i60.Stream<_i30.BillState> get stream => (super.noSuchMethod(
        Invocation.getter(#stream),
        returnValue: _i60.Stream<_i30.BillState>.empty(),
      ) as _i60.Stream<_i30.BillState>);
  @override
  bool get isClosed => (super.noSuchMethod(
        Invocation.getter(#isClosed),
        returnValue: false,
      ) as bool);
  @override
  _i60.Future<void> onInt(_i92.BillRepo? billRepo) => (super.noSuchMethod(
        Invocation.method(
          #onInt,
          [billRepo],
        ),
        returnValue: _i60.Future<void>.value(),
        returnValueForMissingStub: _i60.Future<void>.value(),
      ) as _i60.Future<void>);
  @override
  void changeBank(String? value) => super.noSuchMethod(
        Invocation.method(
          #changeBank,
          [value],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void onCustomerIdChanged(String? id) => super.noSuchMethod(
        Invocation.method(
          #onCustomerIdChanged,
          [id],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i60.Future<bool> getBill() => (super.noSuchMethod(
        Invocation.method(
          #getBill,
          [],
        ),
        returnValue: _i60.Future<bool>.value(false),
      ) as _i60.Future<bool>);
  @override
  _i60.Future<_i64.ReceiptModel?> payBill() => (super.noSuchMethod(
        Invocation.method(
          #payBill,
          [],
        ),
        returnValue: _i60.Future<_i64.ReceiptModel?>.value(),
      ) as _i60.Future<_i64.ReceiptModel?>);
  @override
  void emit(_i30.BillState? state) => super.noSuchMethod(
        Invocation.method(
          #emit,
          [state],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void onChange(_i61.Change<_i30.BillState>? change) => super.noSuchMethod(
        Invocation.method(
          #onChange,
          [change],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void addError(
    Object? error, [
    StackTrace? stackTrace,
  ]) =>
      super.noSuchMethod(
        Invocation.method(
          #addError,
          [
            error,
            stackTrace,
          ],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void onError(
    Object? error,
    StackTrace? stackTrace,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #onError,
          [
            error,
            stackTrace,
          ],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i60.Future<void> close() => (super.noSuchMethod(
        Invocation.method(
          #close,
          [],
        ),
        returnValue: _i60.Future<void>.value(),
        returnValueForMissingStub: _i60.Future<void>.value(),
      ) as _i60.Future<void>);
}

/// A class which mocks [BeneficiaryCubit].
///
/// See the documentation for Mockito's code generation for more information.
class MockBeneficiaryCubit extends _i1.Mock implements _i31.BeneficiaryCubit {
  MockBeneficiaryCubit() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.GlobalKey<_i4.FormState> get currentFormKey => (super.noSuchMethod(
        Invocation.getter(#currentFormKey),
        returnValue: _FakeGlobalKey_4<_i4.FormState>(
          this,
          Invocation.getter(#currentFormKey),
        ),
      ) as _i4.GlobalKey<_i4.FormState>);
  @override
  set currentFormKey(_i4.GlobalKey<_i4.FormState>? _currentFormKey) =>
      super.noSuchMethod(
        Invocation.setter(
          #currentFormKey,
          _currentFormKey,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i4.FocusNode get firstNameFocusNode => (super.noSuchMethod(
        Invocation.getter(#firstNameFocusNode),
        returnValue: _FakeFocusNode_3(
          this,
          Invocation.getter(#firstNameFocusNode),
        ),
      ) as _i4.FocusNode);
  @override
  _i4.FocusNode get lastNameFocusNode => (super.noSuchMethod(
        Invocation.getter(#lastNameFocusNode),
        returnValue: _FakeFocusNode_3(
          this,
          Invocation.getter(#lastNameFocusNode),
        ),
      ) as _i4.FocusNode);
  @override
  _i4.FocusNode get phoneNumberFocusNode => (super.noSuchMethod(
        Invocation.getter(#phoneNumberFocusNode),
        returnValue: _FakeFocusNode_3(
          this,
          Invocation.getter(#phoneNumberFocusNode),
        ),
      ) as _i4.FocusNode);
  @override
  _i4.FocusNode get accountNumberFocusNode => (super.noSuchMethod(
        Invocation.getter(#accountNumberFocusNode),
        returnValue: _FakeFocusNode_3(
          this,
          Invocation.getter(#accountNumberFocusNode),
        ),
      ) as _i4.FocusNode);
  @override
  _i4.FocusNode get ibanNumberFocusNode => (super.noSuchMethod(
        Invocation.getter(#ibanNumberFocusNode),
        returnValue: _FakeFocusNode_3(
          this,
          Invocation.getter(#ibanNumberFocusNode),
        ),
      ) as _i4.FocusNode);
  @override
  _i4.FocusNode get swiftCodeFocusNode => (super.noSuchMethod(
        Invocation.getter(#swiftCodeFocusNode),
        returnValue: _FakeFocusNode_3(
          this,
          Invocation.getter(#swiftCodeFocusNode),
        ),
      ) as _i4.FocusNode);
  @override
  String get currentInFavourite => (super.noSuchMethod(
        Invocation.getter(#currentInFavourite),
        returnValue: '',
      ) as String);
  @override
  set currentInFavourite(String? _currentInFavourite) => super.noSuchMethod(
        Invocation.setter(
          #currentInFavourite,
          _currentInFavourite,
        ),
        returnValueForMissingStub: null,
      );
  @override
  int get currentTransferTypeTapIndex => (super.noSuchMethod(
        Invocation.getter(#currentTransferTypeTapIndex),
        returnValue: 0,
      ) as int);
  @override
  set currentTransferTypeTapIndex(int? _currentTransferTypeTapIndex) =>
      super.noSuchMethod(
        Invocation.setter(
          #currentTransferTypeTapIndex,
          _currentTransferTypeTapIndex,
        ),
        returnValueForMissingStub: null,
      );
  @override
  int get currentTransferCategoryTapIndex => (super.noSuchMethod(
        Invocation.getter(#currentTransferCategoryTapIndex),
        returnValue: 0,
      ) as int);
  @override
  set currentTransferCategoryTapIndex(int? _currentTransferCategoryTapIndex) =>
      super.noSuchMethod(
        Invocation.setter(
          #currentTransferCategoryTapIndex,
          _currentTransferCategoryTapIndex,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i4.TextEditingController get searchBarController => (super.noSuchMethod(
        Invocation.getter(#searchBarController),
        returnValue: _FakeTextEditingController_2(
          this,
          Invocation.getter(#searchBarController),
        ),
      ) as _i4.TextEditingController);
  @override
  set searchBarController(_i4.TextEditingController? _searchBarController) =>
      super.noSuchMethod(
        Invocation.setter(
          #searchBarController,
          _searchBarController,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set iban(String? _iban) => super.noSuchMethod(
        Invocation.setter(
          #iban,
          _iban,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set swiftCode(String? _swiftCode) => super.noSuchMethod(
        Invocation.setter(
          #swiftCode,
          _swiftCode,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set phoneNumber(String? _phoneNumber) => super.noSuchMethod(
        Invocation.setter(
          #phoneNumber,
          _phoneNumber,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set accountNumber(String? _accountNumber) => super.noSuchMethod(
        Invocation.setter(
          #accountNumber,
          _accountNumber,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set firstName(String? _firstName) => super.noSuchMethod(
        Invocation.setter(
          #firstName,
          _firstName,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set lastName(String? _lastName) => super.noSuchMethod(
        Invocation.setter(
          #lastName,
          _lastName,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set currentRelationShip(String? _currentRelationShip) => super.noSuchMethod(
        Invocation.setter(
          #currentRelationShip,
          _currentRelationShip,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set currentWalletName(String? _currentWalletName) => super.noSuchMethod(
        Invocation.setter(
          #currentWalletName,
          _currentWalletName,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set currentCountry(_i93.Country? _currentCountry) => super.noSuchMethod(
        Invocation.setter(
          #currentCountry,
          _currentCountry,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set currentCurrency(_i83.Currency? _currentCurrency) => super.noSuchMethod(
        Invocation.setter(
          #currentCurrency,
          _currentCurrency,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set currentNationality(_i93.Country? _currentNationality) =>
      super.noSuchMethod(
        Invocation.setter(
          #currentNationality,
          _currentNationality,
        ),
        returnValueForMissingStub: null,
      );
  @override
  bool get isApiErrors => (super.noSuchMethod(
        Invocation.getter(#isApiErrors),
        returnValue: false,
      ) as bool);
  @override
  set isApiErrors(bool? _isApiErrors) => super.noSuchMethod(
        Invocation.setter(
          #isApiErrors,
          _isApiErrors,
        ),
        returnValueForMissingStub: null,
      );
  @override
  String get phoneNumberError => (super.noSuchMethod(
        Invocation.getter(#phoneNumberError),
        returnValue: '',
      ) as String);
  @override
  set phoneNumberError(String? _phoneNumberError) => super.noSuchMethod(
        Invocation.setter(
          #phoneNumberError,
          _phoneNumberError,
        ),
        returnValueForMissingStub: null,
      );
  @override
  String get accountNumberError => (super.noSuchMethod(
        Invocation.getter(#accountNumberError),
        returnValue: '',
      ) as String);
  @override
  set accountNumberError(String? _accountNumberError) => super.noSuchMethod(
        Invocation.setter(
          #accountNumberError,
          _accountNumberError,
        ),
        returnValueForMissingStub: null,
      );
  @override
  String get ibanError => (super.noSuchMethod(
        Invocation.getter(#ibanError),
        returnValue: '',
      ) as String);
  @override
  set ibanError(String? _ibanError) => super.noSuchMethod(
        Invocation.setter(
          #ibanError,
          _ibanError,
        ),
        returnValueForMissingStub: null,
      );
  @override
  String get swiftCodeError => (super.noSuchMethod(
        Invocation.getter(#swiftCodeError),
        returnValue: '',
      ) as String);
  @override
  set swiftCodeError(String? _swiftCodeError) => super.noSuchMethod(
        Invocation.setter(
          #swiftCodeError,
          _swiftCodeError,
        ),
        returnValueForMissingStub: null,
      );
  @override
  List<_i76.Beneficiary> get beneficiaries => (super.noSuchMethod(
        Invocation.getter(#beneficiaries),
        returnValue: <_i76.Beneficiary>[],
      ) as List<_i76.Beneficiary>);
  @override
  set beneficiaries(List<_i76.Beneficiary>? _beneficiaries) =>
      super.noSuchMethod(
        Invocation.setter(
          #beneficiaries,
          _beneficiaries,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set countries(List<_i93.Country>? _countries) => super.noSuchMethod(
        Invocation.setter(
          #countries,
          _countries,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set currencies(List<_i83.Currency>? _currencies) => super.noSuchMethod(
        Invocation.setter(
          #currencies,
          _currencies,
        ),
        returnValueForMissingStub: null,
      );
  @override
  List<String> get relationships => (super.noSuchMethod(
        Invocation.getter(#relationships),
        returnValue: <String>[],
      ) as List<String>);
  @override
  set relationships(List<String>? _relationships) => super.noSuchMethod(
        Invocation.setter(
          #relationships,
          _relationships,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i31.BeneficiaryState get state => (super.noSuchMethod(
        Invocation.getter(#state),
        returnValue: _FakeBeneficiaryState_34(
          this,
          Invocation.getter(#state),
        ),
      ) as _i31.BeneficiaryState);
  @override
  _i60.Stream<_i31.BeneficiaryState> get stream => (super.noSuchMethod(
        Invocation.getter(#stream),
        returnValue: _i60.Stream<_i31.BeneficiaryState>.empty(),
      ) as _i60.Stream<_i31.BeneficiaryState>);
  @override
  bool get isClosed => (super.noSuchMethod(
        Invocation.getter(#isClosed),
        returnValue: false,
      ) as bool);
  @override
  void setCurrentFormKey(_i4.GlobalKey<_i4.FormState>? value) =>
      super.noSuchMethod(
        Invocation.method(
          #setCurrentFormKey,
          [value],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void setCurrentInFavourite(String? value) => super.noSuchMethod(
        Invocation.method(
          #setCurrentInFavourite,
          [value],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void setCurrentTransferTapIndex(int? value) => super.noSuchMethod(
        Invocation.method(
          #setCurrentTransferTapIndex,
          [value],
        ),
        returnValueForMissingStub: null,
      );
  @override
  bool isInFav(String? beneficiaryUUID) => (super.noSuchMethod(
        Invocation.method(
          #isInFav,
          [beneficiaryUUID],
        ),
        returnValue: false,
      ) as bool);
  @override
  void updateState() => super.noSuchMethod(
        Invocation.method(
          #updateState,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void phoneNumberState() => super.noSuchMethod(
        Invocation.method(
          #phoneNumberState,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void accountNumberState() => super.noSuchMethod(
        Invocation.method(
          #accountNumberState,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void ibanNumberState() => super.noSuchMethod(
        Invocation.method(
          #ibanNumberState,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i60.Future<void> init() => (super.noSuchMethod(
        Invocation.method(
          #init,
          [],
        ),
        returnValue: _i60.Future<void>.value(),
        returnValueForMissingStub: _i60.Future<void>.value(),
      ) as _i60.Future<void>);
  @override
  void configurationWhenTransferMethodChanged(
    String? value,
    int? index,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #configurationWhenTransferMethodChanged,
          [
            value,
            index,
          ],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void setCurrentCurrency(_i83.Currency? currency) => super.noSuchMethod(
        Invocation.method(
          #setCurrentCurrency,
          [currency],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void setCurrentWalletName(String? value) => super.noSuchMethod(
        Invocation.method(
          #setCurrentWalletName,
          [value],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void setCurrentNationality(_i93.Country? nationality) => super.noSuchMethod(
        Invocation.method(
          #setCurrentNationality,
          [nationality],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void setCurrentCountry(_i93.Country? country) => super.noSuchMethod(
        Invocation.method(
          #setCurrentCountry,
          [country],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void setCurrentRelationShip(String? value) => super.noSuchMethod(
        Invocation.method(
          #setCurrentRelationShip,
          [value],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void reset() => super.noSuchMethod(
        Invocation.method(
          #reset,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void resetApiErrors() => super.noSuchMethod(
        Invocation.method(
          #resetApiErrors,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void resetApiErrorsValue() => super.noSuchMethod(
        Invocation.method(
          #resetApiErrorsValue,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void filterByNameUsingEnteredTextInSearchBar(
    String? name,
    _i94.ServiceType? serviceType,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #filterByNameUsingEnteredTextInSearchBar,
          [
            name,
            serviceType,
          ],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void setCurrentTransferToTapIndex(int? value) => super.noSuchMethod(
        Invocation.method(
          #setCurrentTransferToTapIndex,
          [value],
        ),
        returnValueForMissingStub: null,
      );
  @override
  bool isNameContainsSearchBarText(_i76.Beneficiary? beneficiary) =>
      (super.noSuchMethod(
        Invocation.method(
          #isNameContainsSearchBarText,
          [beneficiary],
        ),
        returnValue: false,
      ) as bool);
  @override
  List<_i76.Beneficiary> filterBeneficiaries(_i94.ServiceType? currentMethod) =>
      (super.noSuchMethod(
        Invocation.method(
          #filterBeneficiaries,
          [currentMethod],
        ),
        returnValue: <_i76.Beneficiary>[],
      ) as List<_i76.Beneficiary>);
  @override
  bool isButtonEnabled() => (super.noSuchMethod(
        Invocation.method(
          #isButtonEnabled,
          [],
        ),
        returnValue: false,
      ) as bool);
  @override
  bool isValidForm(_i4.GlobalKey<_i4.FormState>? currentFormKey) =>
      (super.noSuchMethod(
        Invocation.method(
          #isValidForm,
          [currentFormKey],
        ),
        returnValue: false,
      ) as bool);
  @override
  void resetToInitialState() => super.noSuchMethod(
        Invocation.method(
          #resetToInitialState,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i60.Future<_i76.Beneficiary?> addNewBeneficiary(
          _i10.TransferMethodType? transferMethodType) =>
      (super.noSuchMethod(
        Invocation.method(
          #addNewBeneficiary,
          [transferMethodType],
        ),
        returnValue: _i60.Future<_i76.Beneficiary?>.value(),
      ) as _i60.Future<_i76.Beneficiary?>);
  @override
  void handleAddingNewBeneficiaryFailed(_i95.Failure? apiFailure) =>
      super.noSuchMethod(
        Invocation.method(
          #handleAddingNewBeneficiaryFailed,
          [apiFailure],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void setErrorsWhenErrorsInOneKey(_i95.Failure? apiFailure) =>
      super.noSuchMethod(
        Invocation.method(
          #setErrorsWhenErrorsInOneKey,
          [apiFailure],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i60.Future<void> getCountries() => (super.noSuchMethod(
        Invocation.method(
          #getCountries,
          [],
        ),
        returnValue: _i60.Future<void>.value(),
        returnValueForMissingStub: _i60.Future<void>.value(),
      ) as _i60.Future<void>);
  @override
  _i60.Future<void> getCurrencies() => (super.noSuchMethod(
        Invocation.method(
          #getCurrencies,
          [],
        ),
        returnValue: _i60.Future<void>.value(),
        returnValueForMissingStub: _i60.Future<void>.value(),
      ) as _i60.Future<void>);
  @override
  _i60.Future<void> favouriteToggle({required String? beneficiaryUUID}) =>
      (super.noSuchMethod(
        Invocation.method(
          #favouriteToggle,
          [],
          {#beneficiaryUUID: beneficiaryUUID},
        ),
        returnValue: _i60.Future<void>.value(),
        returnValueForMissingStub: _i60.Future<void>.value(),
      ) as _i60.Future<void>);
  @override
  _i60.Future<void> getBeneficiary({required _i94.ServiceType? serviceType}) =>
      (super.noSuchMethod(
        Invocation.method(
          #getBeneficiary,
          [],
          {#serviceType: serviceType},
        ),
        returnValue: _i60.Future<void>.value(),
        returnValueForMissingStub: _i60.Future<void>.value(),
      ) as _i60.Future<void>);
  @override
  _i60.Future<void> deleteBeneficiary(int? index) => (super.noSuchMethod(
        Invocation.method(
          #deleteBeneficiary,
          [index],
        ),
        returnValue: _i60.Future<void>.value(),
        returnValueForMissingStub: _i60.Future<void>.value(),
      ) as _i60.Future<void>);
  @override
  void resetSearchBar(_i94.ServiceType? serviceType) => super.noSuchMethod(
        Invocation.method(
          #resetSearchBar,
          [serviceType],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void emit(_i31.BeneficiaryState? state) => super.noSuchMethod(
        Invocation.method(
          #emit,
          [state],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void onChange(_i61.Change<_i31.BeneficiaryState>? change) =>
      super.noSuchMethod(
        Invocation.method(
          #onChange,
          [change],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void addError(
    Object? error, [
    StackTrace? stackTrace,
  ]) =>
      super.noSuchMethod(
        Invocation.method(
          #addError,
          [
            error,
            stackTrace,
          ],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void onError(
    Object? error,
    StackTrace? stackTrace,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #onError,
          [
            error,
            stackTrace,
          ],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i60.Future<void> close() => (super.noSuchMethod(
        Invocation.method(
          #close,
          [],
        ),
        returnValue: _i60.Future<void>.value(),
        returnValueForMissingStub: _i60.Future<void>.value(),
      ) as _i60.Future<void>);
}

/// A class which mocks [BudgetCubit].
///
/// See the documentation for Mockito's code generation for more information.
class MockBudgetCubit extends _i1.Mock implements _i34.BudgetCubit {
  MockBudgetCubit() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i32.BudgetListModel get model => (super.noSuchMethod(
        Invocation.getter(#model),
        returnValue: _FakeBudgetListModel_35(
          this,
          Invocation.getter(#model),
        ),
      ) as _i32.BudgetListModel);
  @override
  set model(_i32.BudgetListModel? _model) => super.noSuchMethod(
        Invocation.setter(
          #model,
          _model,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i33.CreateBudgetCategoryInput get input => (super.noSuchMethod(
        Invocation.getter(#input),
        returnValue: _FakeCreateBudgetCategoryInput_36(
          this,
          Invocation.getter(#input),
        ),
      ) as _i33.CreateBudgetCategoryInput);
  @override
  set input(_i33.CreateBudgetCategoryInput? _input) => super.noSuchMethod(
        Invocation.setter(
          #input,
          _input,
        ),
        returnValueForMissingStub: null,
      );
  @override
  String get duration => (super.noSuchMethod(
        Invocation.getter(#duration),
        returnValue: '',
      ) as String);
  @override
  set duration(String? _duration) => super.noSuchMethod(
        Invocation.setter(
          #duration,
          _duration,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set category(_i96.CategoryTypeModel? _category) => super.noSuchMethod(
        Invocation.setter(
          #category,
          _category,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i4.TextEditingController get amountController => (super.noSuchMethod(
        Invocation.getter(#amountController),
        returnValue: _FakeTextEditingController_2(
          this,
          Invocation.getter(#amountController),
        ),
      ) as _i4.TextEditingController);
  @override
  bool get enableButton => (super.noSuchMethod(
        Invocation.getter(#enableButton),
        returnValue: false,
      ) as bool);
  @override
  _i34.BudgetState get state => (super.noSuchMethod(
        Invocation.getter(#state),
        returnValue: _FakeBudgetState_37(
          this,
          Invocation.getter(#state),
        ),
      ) as _i34.BudgetState);
  @override
  _i60.Stream<_i34.BudgetState> get stream => (super.noSuchMethod(
        Invocation.getter(#stream),
        returnValue: _i60.Stream<_i34.BudgetState>.empty(),
      ) as _i60.Stream<_i34.BudgetState>);
  @override
  bool get isClosed => (super.noSuchMethod(
        Invocation.getter(#isClosed),
        returnValue: false,
      ) as bool);
  @override
  _i60.Future<bool> loadBudget() => (super.noSuchMethod(
        Invocation.method(
          #loadBudget,
          [],
        ),
        returnValue: _i60.Future<bool>.value(false),
      ) as _i60.Future<bool>);
  @override
  void changeDuration(String? duration) => super.noSuchMethod(
        Invocation.method(
          #changeDuration,
          [duration],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void changeCategory(_i96.CategoryTypeModel? category) => super.noSuchMethod(
        Invocation.method(
          #changeCategory,
          [category],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i60.Future<bool> addCategory() => (super.noSuchMethod(
        Invocation.method(
          #addCategory,
          [],
        ),
        returnValue: _i60.Future<bool>.value(false),
      ) as _i60.Future<bool>);
  @override
  void initCategoryForEdit(_i66.BudgetCategoryModel? category) =>
      super.noSuchMethod(
        Invocation.method(
          #initCategoryForEdit,
          [category],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i60.Future<bool> updateCategory() => (super.noSuchMethod(
        Invocation.method(
          #updateCategory,
          [],
        ),
        returnValue: _i60.Future<bool>.value(false),
      ) as _i60.Future<bool>);
  @override
  _i60.Future<bool> delete(String? uuid) => (super.noSuchMethod(
        Invocation.method(
          #delete,
          [uuid],
        ),
        returnValue: _i60.Future<bool>.value(false),
      ) as _i60.Future<bool>);
  @override
  void removeCategory(int? index) => super.noSuchMethod(
        Invocation.method(
          #removeCategory,
          [index],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i60.Future<void> toggleCategory(String? uuid) => (super.noSuchMethod(
        Invocation.method(
          #toggleCategory,
          [uuid],
        ),
        returnValue: _i60.Future<void>.value(),
        returnValueForMissingStub: _i60.Future<void>.value(),
      ) as _i60.Future<void>);
  @override
  void resetData() => super.noSuchMethod(
        Invocation.method(
          #resetData,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void emit(_i34.BudgetState? state) => super.noSuchMethod(
        Invocation.method(
          #emit,
          [state],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void onChange(_i61.Change<_i34.BudgetState>? change) => super.noSuchMethod(
        Invocation.method(
          #onChange,
          [change],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void addError(
    Object? error, [
    StackTrace? stackTrace,
  ]) =>
      super.noSuchMethod(
        Invocation.method(
          #addError,
          [
            error,
            stackTrace,
          ],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void onError(
    Object? error,
    StackTrace? stackTrace,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #onError,
          [
            error,
            stackTrace,
          ],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i60.Future<void> close() => (super.noSuchMethod(
        Invocation.method(
          #close,
          [],
        ),
        returnValue: _i60.Future<void>.value(),
        returnValueForMissingStub: _i60.Future<void>.value(),
      ) as _i60.Future<void>);
}

/// A class which mocks [ProfileCubit].
///
/// See the documentation for Mockito's code generation for more information.
class MockProfileCubit extends _i1.Mock implements _i35.ProfileCubit {
  MockProfileCubit() {
    _i1.throwOnMissingStub(this);
  }

  @override
  set profileRepository(_i97.ProfileRepository? _profileRepository) =>
      super.noSuchMethod(
        Invocation.setter(
          #profileRepository,
          _profileRepository,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i4.GlobalKey<_i4.FormState> get profileValidationFormKey =>
      (super.noSuchMethod(
        Invocation.getter(#profileValidationFormKey),
        returnValue: _FakeGlobalKey_4<_i4.FormState>(
          this,
          Invocation.getter(#profileValidationFormKey),
        ),
      ) as _i4.GlobalKey<_i4.FormState>);
  @override
  set image(_i98.File? _image) => super.noSuchMethod(
        Invocation.setter(
          #image,
          _image,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i4.TextEditingController get fullNameController => (super.noSuchMethod(
        Invocation.getter(#fullNameController),
        returnValue: _FakeTextEditingController_2(
          this,
          Invocation.getter(#fullNameController),
        ),
      ) as _i4.TextEditingController);
  @override
  _i4.TextEditingController get idNumberController => (super.noSuchMethod(
        Invocation.getter(#idNumberController),
        returnValue: _FakeTextEditingController_2(
          this,
          Invocation.getter(#idNumberController),
        ),
      ) as _i4.TextEditingController);
  @override
  _i4.TextEditingController get birthDateController => (super.noSuchMethod(
        Invocation.getter(#birthDateController),
        returnValue: _FakeTextEditingController_2(
          this,
          Invocation.getter(#birthDateController),
        ),
      ) as _i4.TextEditingController);
  @override
  _i4.TextEditingController get phoneNumberController => (super.noSuchMethod(
        Invocation.getter(#phoneNumberController),
        returnValue: _FakeTextEditingController_2(
          this,
          Invocation.getter(#phoneNumberController),
        ),
      ) as _i4.TextEditingController);
  @override
  _i4.TextEditingController get emailController => (super.noSuchMethod(
        Invocation.getter(#emailController),
        returnValue: _FakeTextEditingController_2(
          this,
          Invocation.getter(#emailController),
        ),
      ) as _i4.TextEditingController);
  @override
  _i4.FocusNode get fullNameFocusNode => (super.noSuchMethod(
        Invocation.getter(#fullNameFocusNode),
        returnValue: _FakeFocusNode_3(
          this,
          Invocation.getter(#fullNameFocusNode),
        ),
      ) as _i4.FocusNode);
  @override
  set fullNameFocusNode(_i4.FocusNode? _fullNameFocusNode) =>
      super.noSuchMethod(
        Invocation.setter(
          #fullNameFocusNode,
          _fullNameFocusNode,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i4.FocusNode get idFocusNode => (super.noSuchMethod(
        Invocation.getter(#idFocusNode),
        returnValue: _FakeFocusNode_3(
          this,
          Invocation.getter(#idFocusNode),
        ),
      ) as _i4.FocusNode);
  @override
  set idFocusNode(_i4.FocusNode? _idFocusNode) => super.noSuchMethod(
        Invocation.setter(
          #idFocusNode,
          _idFocusNode,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i4.FocusNode get phoneFocusNode => (super.noSuchMethod(
        Invocation.getter(#phoneFocusNode),
        returnValue: _FakeFocusNode_3(
          this,
          Invocation.getter(#phoneFocusNode),
        ),
      ) as _i4.FocusNode);
  @override
  set phoneFocusNode(_i4.FocusNode? _phoneFocusNode) => super.noSuchMethod(
        Invocation.setter(
          #phoneFocusNode,
          _phoneFocusNode,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i4.FocusNode get mailFocusNode => (super.noSuchMethod(
        Invocation.getter(#mailFocusNode),
        returnValue: _FakeFocusNode_3(
          this,
          Invocation.getter(#mailFocusNode),
        ),
      ) as _i4.FocusNode);
  @override
  set mailFocusNode(_i4.FocusNode? _mailFocusNode) => super.noSuchMethod(
        Invocation.setter(
          #mailFocusNode,
          _mailFocusNode,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i4.FocusNode get birthFocusNode => (super.noSuchMethod(
        Invocation.getter(#birthFocusNode),
        returnValue: _FakeFocusNode_3(
          this,
          Invocation.getter(#birthFocusNode),
        ),
      ) as _i4.FocusNode);
  @override
  set birthFocusNode(_i4.FocusNode? _birthFocusNode) => super.noSuchMethod(
        Invocation.setter(
          #birthFocusNode,
          _birthFocusNode,
        ),
        returnValueForMissingStub: null,
      );
  @override
  String get fullNameError => (super.noSuchMethod(
        Invocation.getter(#fullNameError),
        returnValue: '',
      ) as String);
  @override
  set fullNameError(String? _fullNameError) => super.noSuchMethod(
        Invocation.setter(
          #fullNameError,
          _fullNameError,
        ),
        returnValueForMissingStub: null,
      );
  @override
  String get idError => (super.noSuchMethod(
        Invocation.getter(#idError),
        returnValue: '',
      ) as String);
  @override
  set idError(String? _idError) => super.noSuchMethod(
        Invocation.setter(
          #idError,
          _idError,
        ),
        returnValueForMissingStub: null,
      );
  @override
  String get phoneError => (super.noSuchMethod(
        Invocation.getter(#phoneError),
        returnValue: '',
      ) as String);
  @override
  set phoneError(String? _phoneError) => super.noSuchMethod(
        Invocation.setter(
          #phoneError,
          _phoneError,
        ),
        returnValueForMissingStub: null,
      );
  @override
  String get mailError => (super.noSuchMethod(
        Invocation.getter(#mailError),
        returnValue: '',
      ) as String);
  @override
  set mailError(String? _mailError) => super.noSuchMethod(
        Invocation.setter(
          #mailError,
          _mailError,
        ),
        returnValueForMissingStub: null,
      );
  @override
  String get birthDateError => (super.noSuchMethod(
        Invocation.getter(#birthDateError),
        returnValue: '',
      ) as String);
  @override
  set birthDateError(String? _birthDateError) => super.noSuchMethod(
        Invocation.setter(
          #birthDateError,
          _birthDateError,
        ),
        returnValueForMissingStub: null,
      );
  @override
  bool get isSaveBottomSheet => (super.noSuchMethod(
        Invocation.getter(#isSaveBottomSheet),
        returnValue: false,
      ) as bool);
  @override
  set isSaveBottomSheet(bool? _isSaveBottomSheet) => super.noSuchMethod(
        Invocation.setter(
          #isSaveBottomSheet,
          _isSaveBottomSheet,
        ),
        returnValueForMissingStub: null,
      );
  @override
  bool get isReadOnly => (super.noSuchMethod(
        Invocation.getter(#isReadOnly),
        returnValue: false,
      ) as bool);
  @override
  set isReadOnly(bool? _isReadOnly) => super.noSuchMethod(
        Invocation.setter(
          #isReadOnly,
          _isReadOnly,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set profileModel(_i99.ProfileModel? _profileModel) => super.noSuchMethod(
        Invocation.setter(
          #profileModel,
          _profileModel,
        ),
        returnValueForMissingStub: null,
      );
  @override
  bool get enableLoginButton => (super.noSuchMethod(
        Invocation.getter(#enableLoginButton),
        returnValue: false,
      ) as bool);
  @override
  _i35.ProfileState get state => (super.noSuchMethod(
        Invocation.getter(#state),
        returnValue: _FakeProfileState_38(
          this,
          Invocation.getter(#state),
        ),
      ) as _i35.ProfileState);
  @override
  _i60.Stream<_i35.ProfileState> get stream => (super.noSuchMethod(
        Invocation.getter(#stream),
        returnValue: _i60.Stream<_i35.ProfileState>.empty(),
      ) as _i60.Stream<_i35.ProfileState>);
  @override
  bool get isClosed => (super.noSuchMethod(
        Invocation.getter(#isClosed),
        returnValue: false,
      ) as bool);
  @override
  void emitStateToUpdateTextFields() => super.noSuchMethod(
        Invocation.method(
          #emitStateToUpdateTextFields,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  bool enableButton(_i4.GlobalKey<_i4.FormState>? profileValidationFormKey) =>
      (super.noSuchMethod(
        Invocation.method(
          #enableButton,
          [profileValidationFormKey],
        ),
        returnValue: false,
      ) as bool);
  @override
  void updateState() => super.noSuchMethod(
        Invocation.method(
          #updateState,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void updateIdNumber() => super.noSuchMethod(
        Invocation.method(
          #updateIdNumber,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void updateEmail() => super.noSuchMethod(
        Invocation.method(
          #updateEmail,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void updatePhone() => super.noSuchMethod(
        Invocation.method(
          #updatePhone,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void resetFormState() => super.noSuchMethod(
        Invocation.method(
          #resetFormState,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void reset() => super.noSuchMethod(
        Invocation.method(
          #reset,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void resetErrors() => super.noSuchMethod(
        Invocation.method(
          #resetErrors,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void goToSaveMode() => super.noSuchMethod(
        Invocation.method(
          #goToSaveMode,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void updateBirthDataState() => super.noSuchMethod(
        Invocation.method(
          #updateBirthDataState,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void cancel() => super.noSuchMethod(
        Invocation.method(
          #cancel,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void goToEditMode() => super.noSuchMethod(
        Invocation.method(
          #goToEditMode,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void setCurrentIsReadOnlyState() => super.noSuchMethod(
        Invocation.method(
          #setCurrentIsReadOnlyState,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i60.Future<void> init() => (super.noSuchMethod(
        Invocation.method(
          #init,
          [],
        ),
        returnValue: _i60.Future<void>.value(),
        returnValueForMissingStub: _i60.Future<void>.value(),
      ) as _i60.Future<void>);
  @override
  _i60.Future<void> saveChanges() => (super.noSuchMethod(
        Invocation.method(
          #saveChanges,
          [],
        ),
        returnValue: _i60.Future<void>.value(),
        returnValueForMissingStub: _i60.Future<void>.value(),
      ) as _i60.Future<void>);
  @override
  _i60.Future<void> updateProfile() => (super.noSuchMethod(
        Invocation.method(
          #updateProfile,
          [],
        ),
        returnValue: _i60.Future<void>.value(),
        returnValueForMissingStub: _i60.Future<void>.value(),
      ) as _i60.Future<void>);
  @override
  _i60.Future<void> executeSomeMethods() => (super.noSuchMethod(
        Invocation.method(
          #executeSomeMethods,
          [],
        ),
        returnValue: _i60.Future<void>.value(),
        returnValueForMissingStub: _i60.Future<void>.value(),
      ) as _i60.Future<void>);
  @override
  _i60.Future<void> showProfile({
    bool? wantShowToast = true,
    String? toastMessage,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #showProfile,
          [],
          {
            #wantShowToast: wantShowToast,
            #toastMessage: toastMessage,
          },
        ),
        returnValue: _i60.Future<void>.value(),
        returnValueForMissingStub: _i60.Future<void>.value(),
      ) as _i60.Future<void>);
  @override
  _i60.Future<String> onChangeImage() => (super.noSuchMethod(
        Invocation.method(
          #onChangeImage,
          [],
        ),
        returnValue: _i60.Future<String>.value(''),
      ) as _i60.Future<String>);
  @override
  void resetCubitState() => super.noSuchMethod(
        Invocation.method(
          #resetCubitState,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void emit(_i35.ProfileState? state) => super.noSuchMethod(
        Invocation.method(
          #emit,
          [state],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void onChange(_i61.Change<_i35.ProfileState>? change) => super.noSuchMethod(
        Invocation.method(
          #onChange,
          [change],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void addError(
    Object? error, [
    StackTrace? stackTrace,
  ]) =>
      super.noSuchMethod(
        Invocation.method(
          #addError,
          [
            error,
            stackTrace,
          ],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void onError(
    Object? error,
    StackTrace? stackTrace,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #onError,
          [
            error,
            stackTrace,
          ],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i60.Future<void> close() => (super.noSuchMethod(
        Invocation.method(
          #close,
          [],
        ),
        returnValue: _i60.Future<void>.value(),
        returnValueForMissingStub: _i60.Future<void>.value(),
      ) as _i60.Future<void>);
}

/// A class which mocks [ReferralCubit].
///
/// See the documentation for Mockito's code generation for more information.
class MockReferralCubit extends _i1.Mock implements _i37.ReferralCubit {
  MockReferralCubit() {
    _i1.throwOnMissingStub(this);
  }

  @override
  double get sunOfEarned => (super.noSuchMethod(
        Invocation.getter(#sunOfEarned),
        returnValue: 0.0,
      ) as double);
  @override
  set sunOfEarned(double? _sunOfEarned) => super.noSuchMethod(
        Invocation.setter(
          #sunOfEarned,
          _sunOfEarned,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i36.RemoteReferralApiRepo get referralApiRepo => (super.noSuchMethod(
        Invocation.getter(#referralApiRepo),
        returnValue: _FakeRemoteReferralApiRepo_39(
          this,
          Invocation.getter(#referralApiRepo),
        ),
      ) as _i36.RemoteReferralApiRepo);
  @override
  set referralApiRepo(_i36.RemoteReferralApiRepo? _referralApiRepo) =>
      super.noSuchMethod(
        Invocation.setter(
          #referralApiRepo,
          _referralApiRepo,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set referral(_i100.ReferralModel? _referral) => super.noSuchMethod(
        Invocation.setter(
          #referral,
          _referral,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i4.TextEditingController get textEditingController => (super.noSuchMethod(
        Invocation.getter(#textEditingController),
        returnValue: _FakeTextEditingController_2(
          this,
          Invocation.getter(#textEditingController),
        ),
      ) as _i4.TextEditingController);
  @override
  List<Map<String, dynamic>> get contacts => (super.noSuchMethod(
        Invocation.getter(#contacts),
        returnValue: <Map<String, dynamic>>[],
      ) as List<Map<String, dynamic>>);
  @override
  set contacts(List<Map<String, dynamic>>? _contacts) => super.noSuchMethod(
        Invocation.setter(
          #contacts,
          _contacts,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i37.ReferralState get state => (super.noSuchMethod(
        Invocation.getter(#state),
        returnValue: _FakeReferralState_40(
          this,
          Invocation.getter(#state),
        ),
      ) as _i37.ReferralState);
  @override
  _i60.Stream<_i37.ReferralState> get stream => (super.noSuchMethod(
        Invocation.getter(#stream),
        returnValue: _i60.Stream<_i37.ReferralState>.empty(),
      ) as _i60.Stream<_i37.ReferralState>);
  @override
  bool get isClosed => (super.noSuchMethod(
        Invocation.getter(#isClosed),
        returnValue: false,
      ) as bool);
  @override
  void inti() => super.noSuchMethod(
        Invocation.method(
          #inti,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i60.Future<void> getReferralData() => (super.noSuchMethod(
        Invocation.method(
          #getReferralData,
          [],
        ),
        returnValue: _i60.Future<void>.value(),
        returnValueForMissingStub: _i60.Future<void>.value(),
      ) as _i60.Future<void>);
  @override
  _i60.Future<void> copy() => (super.noSuchMethod(
        Invocation.method(
          #copy,
          [],
        ),
        returnValue: _i60.Future<void>.value(),
        returnValueForMissingStub: _i60.Future<void>.value(),
      ) as _i60.Future<void>);
  @override
  _i60.Future<void> paste() => (super.noSuchMethod(
        Invocation.method(
          #paste,
          [],
        ),
        returnValue: _i60.Future<void>.value(),
        returnValueForMissingStub: _i60.Future<void>.value(),
      ) as _i60.Future<void>);
  @override
  _i60.Future<void> launchCurrentUrl(String? url) => (super.noSuchMethod(
        Invocation.method(
          #launchCurrentUrl,
          [url],
        ),
        returnValue: _i60.Future<void>.value(),
        returnValueForMissingStub: _i60.Future<void>.value(),
      ) as _i60.Future<void>);
  @override
  void emit(_i37.ReferralState? state) => super.noSuchMethod(
        Invocation.method(
          #emit,
          [state],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void onChange(_i61.Change<_i37.ReferralState>? change) => super.noSuchMethod(
        Invocation.method(
          #onChange,
          [change],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void addError(
    Object? error, [
    StackTrace? stackTrace,
  ]) =>
      super.noSuchMethod(
        Invocation.method(
          #addError,
          [
            error,
            stackTrace,
          ],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void onError(
    Object? error,
    StackTrace? stackTrace,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #onError,
          [
            error,
            stackTrace,
          ],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i60.Future<void> close() => (super.noSuchMethod(
        Invocation.method(
          #close,
          [],
        ),
        returnValue: _i60.Future<void>.value(),
        returnValueForMissingStub: _i60.Future<void>.value(),
      ) as _i60.Future<void>);
}

/// A class which mocks [CelebrityCubit].
///
/// See the documentation for Mockito's code generation for more information.
class MockCelebrityCubit extends _i1.Mock implements _i101.CelebrityCubit {
  MockCelebrityCubit() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i102.CelebrityGender get genderFilter => (super.noSuchMethod(
        Invocation.getter(#genderFilter),
        returnValue: _i102.CelebrityGender.allCelebrity,
      ) as _i102.CelebrityGender);
  @override
  set genderFilter(_i102.CelebrityGender? _genderFilter) => super.noSuchMethod(
        Invocation.setter(
          #genderFilter,
          _genderFilter,
        ),
        returnValueForMissingStub: null,
      );
  @override
  List<_i103.Story> get videoShopList => (super.noSuchMethod(
        Invocation.getter(#videoShopList),
        returnValue: <_i103.Story>[],
      ) as List<_i103.Story>);
  @override
  set videoShopList(List<_i103.Story>? _videoShopList) => super.noSuchMethod(
        Invocation.setter(
          #videoShopList,
          _videoShopList,
        ),
        returnValueForMissingStub: null,
      );
  @override
  String get query => (super.noSuchMethod(
        Invocation.getter(#query),
        returnValue: '',
      ) as String);
  @override
  set query(String? _query) => super.noSuchMethod(
        Invocation.setter(
          #query,
          _query,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set player(_i104.AudioPlayer? _player) => super.noSuchMethod(
        Invocation.setter(
          #player,
          _player,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i38.VideoPlayerController get controller => (super.noSuchMethod(
        Invocation.getter(#controller),
        returnValue: _FakeVideoPlayerController_41(
          this,
          Invocation.getter(#controller),
        ),
      ) as _i38.VideoPlayerController);
  @override
  set controller(_i38.VideoPlayerController? _controller) => super.noSuchMethod(
        Invocation.setter(
          #controller,
          _controller,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set products(List<_i105.ProductModel>? _products) => super.noSuchMethod(
        Invocation.setter(
          #products,
          _products,
        ),
        returnValueForMissingStub: null,
      );
  @override
  List<_i54.Banners> get banners => (super.noSuchMethod(
        Invocation.getter(#banners),
        returnValue: <_i54.Banners>[],
      ) as List<_i54.Banners>);
  @override
  set banners(List<_i54.Banners>? _banners) => super.noSuchMethod(
        Invocation.setter(
          #banners,
          _banners,
        ),
        returnValueForMissingStub: null,
      );
  @override
  List<_i106.Celebrity> get celebrityList => (super.noSuchMethod(
        Invocation.getter(#celebrityList),
        returnValue: <_i106.Celebrity>[],
      ) as List<_i106.Celebrity>);
  @override
  _i39.CelebrityState get state => (super.noSuchMethod(
        Invocation.getter(#state),
        returnValue: _FakeCelebrityState_42(
          this,
          Invocation.getter(#state),
        ),
      ) as _i39.CelebrityState);
  @override
  _i60.Stream<_i39.CelebrityState> get stream => (super.noSuchMethod(
        Invocation.getter(#stream),
        returnValue: _i60.Stream<_i39.CelebrityState>.empty(),
      ) as _i60.Stream<_i39.CelebrityState>);
  @override
  bool get isClosed => (super.noSuchMethod(
        Invocation.getter(#isClosed),
        returnValue: false,
      ) as bool);
  @override
  void resetSearchBar() => super.noSuchMethod(
        Invocation.method(
          #resetSearchBar,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i60.Future<void> getCelebrityProducts({required String? celebrityUuid}) =>
      (super.noSuchMethod(
        Invocation.method(
          #getCelebrityProducts,
          [],
          {#celebrityUuid: celebrityUuid},
        ),
        returnValue: _i60.Future<void>.value(),
        returnValueForMissingStub: _i60.Future<void>.value(),
      ) as _i60.Future<void>);
  @override
  void changeGender(_i102.CelebrityGender? gender) => super.noSuchMethod(
        Invocation.method(
          #changeGender,
          [gender],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i60.Future<void> getAllCelebrities() => (super.noSuchMethod(
        Invocation.method(
          #getAllCelebrities,
          [],
        ),
        returnValue: _i60.Future<void>.value(),
        returnValueForMissingStub: _i60.Future<void>.value(),
      ) as _i60.Future<void>);
  @override
  _i60.Future<void> getVideos() => (super.noSuchMethod(
        Invocation.method(
          #getVideos,
          [],
        ),
        returnValue: _i60.Future<void>.value(),
        returnValueForMissingStub: _i60.Future<void>.value(),
      ) as _i60.Future<void>);
  @override
  void search(String? query) => super.noSuchMethod(
        Invocation.method(
          #search,
          [query],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i60.Future<void> initSound(String? path) => (super.noSuchMethod(
        Invocation.method(
          #initSound,
          [path],
        ),
        returnValue: _i60.Future<void>.value(),
        returnValueForMissingStub: _i60.Future<void>.value(),
      ) as _i60.Future<void>);
  @override
  _i60.Future<void> closePlayer() => (super.noSuchMethod(
        Invocation.method(
          #closePlayer,
          [],
        ),
        returnValue: _i60.Future<void>.value(),
        returnValueForMissingStub: _i60.Future<void>.value(),
      ) as _i60.Future<void>);
  @override
  _i60.Future<void> initVideo(
    String? path, {
    bool? start = true,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #initVideo,
          [path],
          {#start: start},
        ),
        returnValue: _i60.Future<void>.value(),
        returnValueForMissingStub: _i60.Future<void>.value(),
      ) as _i60.Future<void>);
  @override
  _i60.Future<void> closeVideoPlayer() => (super.noSuchMethod(
        Invocation.method(
          #closeVideoPlayer,
          [],
        ),
        returnValue: _i60.Future<void>.value(),
        returnValueForMissingStub: _i60.Future<void>.value(),
      ) as _i60.Future<void>);
  @override
  void closeControllers() => super.noSuchMethod(
        Invocation.method(
          #closeControllers,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i60.Future<void> pause() => (super.noSuchMethod(
        Invocation.method(
          #pause,
          [],
        ),
        returnValue: _i60.Future<void>.value(),
        returnValueForMissingStub: _i60.Future<void>.value(),
      ) as _i60.Future<void>);
  @override
  _i60.Future<_i98.File?> createThumbnail(String? path) => (super.noSuchMethod(
        Invocation.method(
          #createThumbnail,
          [path],
        ),
        returnValue: _i60.Future<_i98.File?>.value(),
      ) as _i60.Future<_i98.File?>);
  @override
  void emit(_i39.CelebrityState? state) => super.noSuchMethod(
        Invocation.method(
          #emit,
          [state],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void onChange(_i61.Change<_i39.CelebrityState>? change) => super.noSuchMethod(
        Invocation.method(
          #onChange,
          [change],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void addError(
    Object? error, [
    StackTrace? stackTrace,
  ]) =>
      super.noSuchMethod(
        Invocation.method(
          #addError,
          [
            error,
            stackTrace,
          ],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void onError(
    Object? error,
    StackTrace? stackTrace,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #onError,
          [
            error,
            stackTrace,
          ],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i60.Future<void> close() => (super.noSuchMethod(
        Invocation.method(
          #close,
          [],
        ),
        returnValue: _i60.Future<void>.value(),
        returnValueForMissingStub: _i60.Future<void>.value(),
      ) as _i60.Future<void>);
}

/// A class which mocks [SupportCubit].
///
/// See the documentation for Mockito's code generation for more information.
class MockSupportCubit extends _i1.Mock implements _i40.SupportCubit {
  MockSupportCubit() {
    _i1.throwOnMissingStub(this);
  }

  @override
  set supportRepository(_i107.SupportRepository? _supportRepository) =>
      super.noSuchMethod(
        Invocation.setter(
          #supportRepository,
          _supportRepository,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i4.TextEditingController get supportController => (super.noSuchMethod(
        Invocation.getter(#supportController),
        returnValue: _FakeTextEditingController_2(
          this,
          Invocation.getter(#supportController),
        ),
      ) as _i4.TextEditingController);
  @override
  set supportController(_i4.TextEditingController? _supportController) =>
      super.noSuchMethod(
        Invocation.setter(
          #supportController,
          _supportController,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i4.TextEditingController get firstNameController => (super.noSuchMethod(
        Invocation.getter(#firstNameController),
        returnValue: _FakeTextEditingController_2(
          this,
          Invocation.getter(#firstNameController),
        ),
      ) as _i4.TextEditingController);
  @override
  set firstNameController(_i4.TextEditingController? _firstNameController) =>
      super.noSuchMethod(
        Invocation.setter(
          #firstNameController,
          _firstNameController,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i4.TextEditingController get emailController => (super.noSuchMethod(
        Invocation.getter(#emailController),
        returnValue: _FakeTextEditingController_2(
          this,
          Invocation.getter(#emailController),
        ),
      ) as _i4.TextEditingController);
  @override
  set emailController(_i4.TextEditingController? _emailController) =>
      super.noSuchMethod(
        Invocation.setter(
          #emailController,
          _emailController,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set errorMessage(String? _errorMessage) => super.noSuchMethod(
        Invocation.setter(
          #errorMessage,
          _errorMessage,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i4.FocusNode get firstNameFocus => (super.noSuchMethod(
        Invocation.getter(#firstNameFocus),
        returnValue: _FakeFocusNode_3(
          this,
          Invocation.getter(#firstNameFocus),
        ),
      ) as _i4.FocusNode);
  @override
  set firstNameFocus(_i4.FocusNode? _firstNameFocus) => super.noSuchMethod(
        Invocation.setter(
          #firstNameFocus,
          _firstNameFocus,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i4.FocusNode get supportNameFocus => (super.noSuchMethod(
        Invocation.getter(#supportNameFocus),
        returnValue: _FakeFocusNode_3(
          this,
          Invocation.getter(#supportNameFocus),
        ),
      ) as _i4.FocusNode);
  @override
  set supportNameFocus(_i4.FocusNode? _supportNameFocus) => super.noSuchMethod(
        Invocation.setter(
          #supportNameFocus,
          _supportNameFocus,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i4.FocusNode get emailFocus => (super.noSuchMethod(
        Invocation.getter(#emailFocus),
        returnValue: _FakeFocusNode_3(
          this,
          Invocation.getter(#emailFocus),
        ),
      ) as _i4.FocusNode);
  @override
  set emailFocus(_i4.FocusNode? _emailFocus) => super.noSuchMethod(
        Invocation.setter(
          #emailFocus,
          _emailFocus,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i4.GlobalKey<_i4.FormState> get supportValidationFormKey =>
      (super.noSuchMethod(
        Invocation.getter(#supportValidationFormKey),
        returnValue: _FakeGlobalKey_4<_i4.FormState>(
          this,
          Invocation.getter(#supportValidationFormKey),
        ),
      ) as _i4.GlobalKey<_i4.FormState>);
  @override
  set supportValidationFormKey(
          _i4.GlobalKey<_i4.FormState>? _supportValidationFormKey) =>
      super.noSuchMethod(
        Invocation.setter(
          #supportValidationFormKey,
          _supportValidationFormKey,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i40.SupportState get state => (super.noSuchMethod(
        Invocation.getter(#state),
        returnValue: _FakeSupportState_43(
          this,
          Invocation.getter(#state),
        ),
      ) as _i40.SupportState);
  @override
  _i60.Stream<_i40.SupportState> get stream => (super.noSuchMethod(
        Invocation.getter(#stream),
        returnValue: _i60.Stream<_i40.SupportState>.empty(),
      ) as _i60.Stream<_i40.SupportState>);
  @override
  bool get isClosed => (super.noSuchMethod(
        Invocation.getter(#isClosed),
        returnValue: false,
      ) as bool);
  @override
  void updateState() => super.noSuchMethod(
        Invocation.method(
          #updateState,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void setCurrentFormKey(_i4.GlobalKey<_i4.FormState>? value) =>
      super.noSuchMethod(
        Invocation.method(
          #setCurrentFormKey,
          [value],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void reset() => super.noSuchMethod(
        Invocation.method(
          #reset,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i60.Future<void> sendIssue() => (super.noSuchMethod(
        Invocation.method(
          #sendIssue,
          [],
        ),
        returnValue: _i60.Future<void>.value(),
        returnValueForMissingStub: _i60.Future<void>.value(),
      ) as _i60.Future<void>);
  @override
  void resetSupportState() => super.noSuchMethod(
        Invocation.method(
          #resetSupportState,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  bool supportDataEnabledButton() => (super.noSuchMethod(
        Invocation.method(
          #supportDataEnabledButton,
          [],
        ),
        returnValue: false,
      ) as bool);
  @override
  void emit(_i40.SupportState? state) => super.noSuchMethod(
        Invocation.method(
          #emit,
          [state],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void onChange(_i61.Change<_i40.SupportState>? change) => super.noSuchMethod(
        Invocation.method(
          #onChange,
          [change],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void addError(
    Object? error, [
    StackTrace? stackTrace,
  ]) =>
      super.noSuchMethod(
        Invocation.method(
          #addError,
          [
            error,
            stackTrace,
          ],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void onError(
    Object? error,
    StackTrace? stackTrace,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #onError,
          [
            error,
            stackTrace,
          ],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i60.Future<void> close() => (super.noSuchMethod(
        Invocation.method(
          #close,
          [],
        ),
        returnValue: _i60.Future<void>.value(),
        returnValueForMissingStub: _i60.Future<void>.value(),
      ) as _i60.Future<void>);
}

/// A class which mocks [SavingCubit].
///
/// See the documentation for Mockito's code generation for more information.
class MockSavingCubit extends _i1.Mock implements _i42.SavingCubit {
  MockSavingCubit() {
    _i1.throwOnMissingStub(this);
  }

  @override
  double get totalMoney => (super.noSuchMethod(
        Invocation.getter(#totalMoney),
        returnValue: 0.0,
      ) as double);
  @override
  set totalMoney(double? _totalMoney) => super.noSuchMethod(
        Invocation.setter(
          #totalMoney,
          _totalMoney,
        ),
        returnValueForMissingStub: null,
      );
  @override
  bool get activationWalletSwitcher => (super.noSuchMethod(
        Invocation.getter(#activationWalletSwitcher),
        returnValue: false,
      ) as bool);
  @override
  set activationWalletSwitcher(bool? _activationWalletSwitcher) =>
      super.noSuchMethod(
        Invocation.setter(
          #activationWalletSwitcher,
          _activationWalletSwitcher,
        ),
        returnValueForMissingStub: null,
      );
  @override
  List<_i108.RoleModel> get roles => (super.noSuchMethod(
        Invocation.getter(#roles),
        returnValue: <_i108.RoleModel>[],
      ) as List<_i108.RoleModel>);
  @override
  set roles(List<_i108.RoleModel>? _roles) => super.noSuchMethod(
        Invocation.setter(
          #roles,
          _roles,
        ),
        returnValueForMissingStub: null,
      );
  @override
  List<_i109.TransactionSavingModel> get savingTransactionModels =>
      (super.noSuchMethod(
        Invocation.getter(#savingTransactionModels),
        returnValue: <_i109.TransactionSavingModel>[],
      ) as List<_i109.TransactionSavingModel>);
  @override
  set savingTransactionModels(
          List<_i109.TransactionSavingModel>? _savingTransactionModels) =>
      super.noSuchMethod(
        Invocation.setter(
          #savingTransactionModels,
          _savingTransactionModels,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i4.TextEditingController get addMoneyController => (super.noSuchMethod(
        Invocation.getter(#addMoneyController),
        returnValue: _FakeTextEditingController_2(
          this,
          Invocation.getter(#addMoneyController),
        ),
      ) as _i4.TextEditingController);
  @override
  _i4.TextEditingController get withdrawController => (super.noSuchMethod(
        Invocation.getter(#withdrawController),
        returnValue: _FakeTextEditingController_2(
          this,
          Invocation.getter(#withdrawController),
        ),
      ) as _i4.TextEditingController);
  @override
  _i4.TextEditingController get fromInvestingController => (super.noSuchMethod(
        Invocation.getter(#fromInvestingController),
        returnValue: _FakeTextEditingController_2(
          this,
          Invocation.getter(#fromInvestingController),
        ),
      ) as _i4.TextEditingController);
  @override
  _i4.TextEditingController get toInvestingController => (super.noSuchMethod(
        Invocation.getter(#toInvestingController),
        returnValue: _FakeTextEditingController_2(
          this,
          Invocation.getter(#toInvestingController),
        ),
      ) as _i4.TextEditingController);
  @override
  _i4.TextEditingController get saveInvestingController => (super.noSuchMethod(
        Invocation.getter(#saveInvestingController),
        returnValue: _FakeTextEditingController_2(
          this,
          Invocation.getter(#saveInvestingController),
        ),
      ) as _i4.TextEditingController);
  @override
  _i4.TextEditingController get amountController => (super.noSuchMethod(
        Invocation.getter(#amountController),
        returnValue: _FakeTextEditingController_2(
          this,
          Invocation.getter(#amountController),
        ),
      ) as _i4.TextEditingController);
  @override
  _i4.TextEditingController get fromController => (super.noSuchMethod(
        Invocation.getter(#fromController),
        returnValue: _FakeTextEditingController_2(
          this,
          Invocation.getter(#fromController),
        ),
      ) as _i4.TextEditingController);
  @override
  _i4.TextEditingController get toController => (super.noSuchMethod(
        Invocation.getter(#toController),
        returnValue: _FakeTextEditingController_2(
          this,
          Invocation.getter(#toController),
        ),
      ) as _i4.TextEditingController);
  @override
  _i4.TextEditingController get saveController => (super.noSuchMethod(
        Invocation.getter(#saveController),
        returnValue: _FakeTextEditingController_2(
          this,
          Invocation.getter(#saveController),
        ),
      ) as _i4.TextEditingController);
  @override
  _i4.GlobalKey<_i4.FormState> get formKey => (super.noSuchMethod(
        Invocation.getter(#formKey),
        returnValue: _FakeGlobalKey_4<_i4.FormState>(
          this,
          Invocation.getter(#formKey),
        ),
      ) as _i4.GlobalKey<_i4.FormState>);
  @override
  _i4.FocusNode get toFocusNode => (super.noSuchMethod(
        Invocation.getter(#toFocusNode),
        returnValue: _FakeFocusNode_3(
          this,
          Invocation.getter(#toFocusNode),
        ),
      ) as _i4.FocusNode);
  @override
  _i4.FocusNode get fromFocusNode => (super.noSuchMethod(
        Invocation.getter(#fromFocusNode),
        returnValue: _FakeFocusNode_3(
          this,
          Invocation.getter(#fromFocusNode),
        ),
      ) as _i4.FocusNode);
  @override
  _i4.FocusNode get saveFocusNode => (super.noSuchMethod(
        Invocation.getter(#saveFocusNode),
        returnValue: _FakeFocusNode_3(
          this,
          Invocation.getter(#saveFocusNode),
        ),
      ) as _i4.FocusNode);
  @override
  _i41.SavingModel get savingModel => (super.noSuchMethod(
        Invocation.getter(#savingModel),
        returnValue: _FakeSavingModel_44(
          this,
          Invocation.getter(#savingModel),
        ),
      ) as _i41.SavingModel);
  @override
  int get recentActivityInBeginningLength => (super.noSuchMethod(
        Invocation.getter(#recentActivityInBeginningLength),
        returnValue: 0,
      ) as int);
  @override
  _i42.SavingState get state => (super.noSuchMethod(
        Invocation.getter(#state),
        returnValue: _FakeSavingState_45(
          this,
          Invocation.getter(#state),
        ),
      ) as _i42.SavingState);
  @override
  _i60.Stream<_i42.SavingState> get stream => (super.noSuchMethod(
        Invocation.getter(#stream),
        returnValue: _i60.Stream<_i42.SavingState>.empty(),
      ) as _i60.Stream<_i42.SavingState>);
  @override
  bool get isClosed => (super.noSuchMethod(
        Invocation.getter(#isClosed),
        returnValue: false,
      ) as bool);
  @override
  _i60.Future<void> init() => (super.noSuchMethod(
        Invocation.method(
          #init,
          [],
        ),
        returnValue: _i60.Future<void>.value(),
        returnValueForMissingStub: _i60.Future<void>.value(),
      ) as _i60.Future<void>);
  @override
  bool enableButtonSheetButton(String? title) => (super.noSuchMethod(
        Invocation.method(
          #enableButtonSheetButton,
          [title],
        ),
        returnValue: false,
      ) as bool);
  @override
  void emitState() => super.noSuchMethod(
        Invocation.method(
          #emitState,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i60.Future<void> submitBottomSheet(
    String? title,
    int? roleIndex,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #submitBottomSheet,
          [
            title,
            roleIndex,
          ],
        ),
        returnValue: _i60.Future<void>.value(),
        returnValueForMissingStub: _i60.Future<void>.value(),
      ) as _i60.Future<void>);
  @override
  bool isGreen(int? index) => (super.noSuchMethod(
        Invocation.method(
          #isGreen,
          [index],
        ),
        returnValue: false,
      ) as bool);
  @override
  String transactionAmountText(int? index) => (super.noSuchMethod(
        Invocation.method(
          #transactionAmountText,
          [index],
        ),
        returnValue: '',
      ) as String);
  @override
  void reloadPage() => super.noSuchMethod(
        Invocation.method(
          #reloadPage,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void fillTextFieldWhileUpdateRole({
    required int? to,
    required int? from,
    required int? save,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #fillTextFieldWhileUpdateRole,
          [],
          {
            #to: to,
            #from: from,
            #save: save,
          },
        ),
        returnValueForMissingStub: null,
      );
  @override
  void clearRolesControllers() => super.noSuchMethod(
        Invocation.method(
          #clearRolesControllers,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void clearAmountController() => super.noSuchMethod(
        Invocation.method(
          #clearAmountController,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i60.Future<String> onChangeSwitcherValue({required bool? newValue}) =>
      (super.noSuchMethod(
        Invocation.method(
          #onChangeSwitcherValue,
          [],
          {#newValue: newValue},
        ),
        returnValue: _i60.Future<String>.value(''),
      ) as _i60.Future<String>);
  @override
  _i60.Future<String> deleteRole({required int? index}) => (super.noSuchMethod(
        Invocation.method(
          #deleteRole,
          [],
          {#index: index},
        ),
        returnValue: _i60.Future<String>.value(''),
      ) as _i60.Future<String>);
  @override
  _i60.Future<String> toggleRole({
    required int? index,
    required _i90.VoidCallback? onSuccess,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #toggleRole,
          [],
          {
            #index: index,
            #onSuccess: onSuccess,
          },
        ),
        returnValue: _i60.Future<String>.value(''),
      ) as _i60.Future<String>);
  @override
  _i60.Future<String> addRole({required _i90.VoidCallback? onBack}) =>
      (super.noSuchMethod(
        Invocation.method(
          #addRole,
          [],
          {#onBack: onBack},
        ),
        returnValue: _i60.Future<String>.value(''),
      ) as _i60.Future<String>);
  @override
  _i60.Future<String> updateRole({
    required int? index,
    required _i90.VoidCallback? onBack,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateRole,
          [],
          {
            #index: index,
            #onBack: onBack,
          },
        ),
        returnValue: _i60.Future<String>.value(''),
      ) as _i60.Future<String>);
  @override
  _i60.Future<String> addMoney({required _i90.VoidCallback? onBack}) =>
      (super.noSuchMethod(
        Invocation.method(
          #addMoney,
          [],
          {#onBack: onBack},
        ),
        returnValue: _i60.Future<String>.value(''),
      ) as _i60.Future<String>);
  @override
  _i60.Future<String> withdraw({required _i90.VoidCallback? onBack}) =>
      (super.noSuchMethod(
        Invocation.method(
          #withdraw,
          [],
          {#onBack: onBack},
        ),
        returnValue: _i60.Future<String>.value(''),
      ) as _i60.Future<String>);
  @override
  void emit(_i42.SavingState? state) => super.noSuchMethod(
        Invocation.method(
          #emit,
          [state],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void onChange(_i61.Change<_i42.SavingState>? change) => super.noSuchMethod(
        Invocation.method(
          #onChange,
          [change],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void addError(
    Object? error, [
    StackTrace? stackTrace,
  ]) =>
      super.noSuchMethod(
        Invocation.method(
          #addError,
          [
            error,
            stackTrace,
          ],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void onError(
    Object? error,
    StackTrace? stackTrace,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #onError,
          [
            error,
            stackTrace,
          ],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i60.Future<void> close() => (super.noSuchMethod(
        Invocation.method(
          #close,
          [],
        ),
        returnValue: _i60.Future<void>.value(),
        returnValueForMissingStub: _i60.Future<void>.value(),
      ) as _i60.Future<void>);
}

/// A class which mocks [WithdrawCubit].
///
/// See the documentation for Mockito's code generation for more information.
class MockWithdrawCubit extends _i1.Mock implements _i43.WithdrawCubit {
  MockWithdrawCubit() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.TextEditingController get amountController => (super.noSuchMethod(
        Invocation.getter(#amountController),
        returnValue: _FakeTextEditingController_2(
          this,
          Invocation.getter(#amountController),
        ),
      ) as _i4.TextEditingController);
  @override
  set amountController(_i4.TextEditingController? _amountController) =>
      super.noSuchMethod(
        Invocation.setter(
          #amountController,
          _amountController,
        ),
        returnValueForMissingStub: null,
      );
  @override
  List<_i110.BankAccounts> get bankAccounts => (super.noSuchMethod(
        Invocation.getter(#bankAccounts),
        returnValue: <_i110.BankAccounts>[],
      ) as List<_i110.BankAccounts>);
  @override
  set bankAccounts(List<_i110.BankAccounts>? _bankAccounts) =>
      super.noSuchMethod(
        Invocation.setter(
          #bankAccounts,
          _bankAccounts,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set selectedBankAccount(_i110.BankAccounts? _selectedBankAccount) =>
      super.noSuchMethod(
        Invocation.setter(
          #selectedBankAccount,
          _selectedBankAccount,
        ),
        returnValueForMissingStub: null,
      );
  @override
  bool get enableButton => (super.noSuchMethod(
        Invocation.getter(#enableButton),
        returnValue: false,
      ) as bool);
  @override
  _i43.WithdrawState get state => (super.noSuchMethod(
        Invocation.getter(#state),
        returnValue: _FakeWithdrawState_46(
          this,
          Invocation.getter(#state),
        ),
      ) as _i43.WithdrawState);
  @override
  _i60.Stream<_i43.WithdrawState> get stream => (super.noSuchMethod(
        Invocation.getter(#stream),
        returnValue: _i60.Stream<_i43.WithdrawState>.empty(),
      ) as _i60.Stream<_i43.WithdrawState>);
  @override
  bool get isClosed => (super.noSuchMethod(
        Invocation.getter(#isClosed),
        returnValue: false,
      ) as bool);
  @override
  _i60.Future<void> onInit() => (super.noSuchMethod(
        Invocation.method(
          #onInit,
          [],
        ),
        returnValue: _i60.Future<void>.value(),
        returnValueForMissingStub: _i60.Future<void>.value(),
      ) as _i60.Future<void>);
  @override
  _i60.Future<void> getBankAccounts({bool? forceLoad = false}) =>
      (super.noSuchMethod(
        Invocation.method(
          #getBankAccounts,
          [],
          {#forceLoad: forceLoad},
        ),
        returnValue: _i60.Future<void>.value(),
        returnValueForMissingStub: _i60.Future<void>.value(),
      ) as _i60.Future<void>);
  @override
  void onChangeBank(_i110.BankAccounts? value) => super.noSuchMethod(
        Invocation.method(
          #onChangeBank,
          [value],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void onClearData() => super.noSuchMethod(
        Invocation.method(
          #onClearData,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i60.Future<_i64.ReceiptModel?> withDraw() => (super.noSuchMethod(
        Invocation.method(
          #withDraw,
          [],
        ),
        returnValue: _i60.Future<_i64.ReceiptModel?>.value(),
      ) as _i60.Future<_i64.ReceiptModel?>);
  @override
  _i60.Future<void> close() => (super.noSuchMethod(
        Invocation.method(
          #close,
          [],
        ),
        returnValue: _i60.Future<void>.value(),
        returnValueForMissingStub: _i60.Future<void>.value(),
      ) as _i60.Future<void>);
  @override
  void emit(_i43.WithdrawState? state) => super.noSuchMethod(
        Invocation.method(
          #emit,
          [state],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void onChange(_i61.Change<_i43.WithdrawState>? change) => super.noSuchMethod(
        Invocation.method(
          #onChange,
          [change],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void addError(
    Object? error, [
    StackTrace? stackTrace,
  ]) =>
      super.noSuchMethod(
        Invocation.method(
          #addError,
          [
            error,
            stackTrace,
          ],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void onError(
    Object? error,
    StackTrace? stackTrace,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #onError,
          [
            error,
            stackTrace,
          ],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [OrdersCubit].
///
/// See the documentation for Mockito's code generation for more information.
class MockOrdersCubit extends _i1.Mock implements _i46.OrdersCubit {
  MockOrdersCubit() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.TextEditingController get searchBarController => (super.noSuchMethod(
        Invocation.getter(#searchBarController),
        returnValue: _FakeTextEditingController_2(
          this,
          Invocation.getter(#searchBarController),
        ),
      ) as _i4.TextEditingController);
  @override
  set searchBarController(_i4.TextEditingController? _searchBarController) =>
      super.noSuchMethod(
        Invocation.setter(
          #searchBarController,
          _searchBarController,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i44.OrderListModel get model => (super.noSuchMethod(
        Invocation.getter(#model),
        returnValue: _FakeOrderListModel_47(
          this,
          Invocation.getter(#model),
        ),
      ) as _i44.OrderListModel);
  @override
  set model(_i44.OrderListModel? _model) => super.noSuchMethod(
        Invocation.setter(
          #model,
          _model,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i45.OrderModel get order => (super.noSuchMethod(
        Invocation.getter(#order),
        returnValue: _FakeOrderModel_48(
          this,
          Invocation.getter(#order),
        ),
      ) as _i45.OrderModel);
  @override
  set order(_i45.OrderModel? _order) => super.noSuchMethod(
        Invocation.setter(
          #order,
          _order,
        ),
        returnValueForMissingStub: null,
      );
  @override
  List<String> get complainFiles => (super.noSuchMethod(
        Invocation.getter(#complainFiles),
        returnValue: <String>[],
      ) as List<String>);
  @override
  set complainFiles(List<String>? _complainFiles) => super.noSuchMethod(
        Invocation.setter(
          #complainFiles,
          _complainFiles,
        ),
        returnValueForMissingStub: null,
      );
  @override
  String get cancelReason => (super.noSuchMethod(
        Invocation.getter(#cancelReason),
        returnValue: '',
      ) as String);
  @override
  set cancelReason(String? _cancelReason) => super.noSuchMethod(
        Invocation.setter(
          #cancelReason,
          _cancelReason,
        ),
        returnValueForMissingStub: null,
      );
  @override
  String get complainReason => (super.noSuchMethod(
        Invocation.getter(#complainReason),
        returnValue: '',
      ) as String);
  @override
  set complainReason(String? _complainReason) => super.noSuchMethod(
        Invocation.setter(
          #complainReason,
          _complainReason,
        ),
        returnValueForMissingStub: null,
      );
  @override
  String get complainReasonType => (super.noSuchMethod(
        Invocation.getter(#complainReasonType),
        returnValue: '',
      ) as String);
  @override
  set complainReasonType(String? _complainReasonType) => super.noSuchMethod(
        Invocation.setter(
          #complainReasonType,
          _complainReasonType,
        ),
        returnValueForMissingStub: null,
      );
  @override
  bool get showOrdersFilters => (super.noSuchMethod(
        Invocation.getter(#showOrdersFilters),
        returnValue: false,
      ) as bool);
  @override
  set showOrdersFilters(bool? _showOrdersFilters) => super.noSuchMethod(
        Invocation.setter(
          #showOrdersFilters,
          _showOrdersFilters,
        ),
        returnValueForMissingStub: null,
      );
  @override
  String get query => (super.noSuchMethod(
        Invocation.getter(#query),
        returnValue: '',
      ) as String);
  @override
  set query(String? _query) => super.noSuchMethod(
        Invocation.setter(
          #query,
          _query,
        ),
        returnValueForMissingStub: null,
      );
  @override
  bool get isOrderProcessing => (super.noSuchMethod(
        Invocation.getter(#isOrderProcessing),
        returnValue: false,
      ) as bool);
  @override
  bool get orderCompleted => (super.noSuchMethod(
        Invocation.getter(#orderCompleted),
        returnValue: false,
      ) as bool);
  @override
  bool get orderShipped => (super.noSuchMethod(
        Invocation.getter(#orderShipped),
        returnValue: false,
      ) as bool);
  @override
  set filterStatus(String? status) => super.noSuchMethod(
        Invocation.setter(
          #filterStatus,
          status,
        ),
        returnValueForMissingStub: null,
      );
  @override
  List<_i45.OrderModel> get orders => (super.noSuchMethod(
        Invocation.getter(#orders),
        returnValue: <_i45.OrderModel>[],
      ) as List<_i45.OrderModel>);
  @override
  _i46.OrdersState get state => (super.noSuchMethod(
        Invocation.getter(#state),
        returnValue: _FakeOrdersState_49(
          this,
          Invocation.getter(#state),
        ),
      ) as _i46.OrdersState);
  @override
  _i60.Stream<_i46.OrdersState> get stream => (super.noSuchMethod(
        Invocation.getter(#stream),
        returnValue: _i60.Stream<_i46.OrdersState>.empty(),
      ) as _i60.Stream<_i46.OrdersState>);
  @override
  bool get isClosed => (super.noSuchMethod(
        Invocation.getter(#isClosed),
        returnValue: false,
      ) as bool);
  @override
  void resetSearchBar() => super.noSuchMethod(
        Invocation.method(
          #resetSearchBar,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i60.Future<void> getOrders() => (super.noSuchMethod(
        Invocation.method(
          #getOrders,
          [],
        ),
        returnValue: _i60.Future<void>.value(),
        returnValueForMissingStub: _i60.Future<void>.value(),
      ) as _i60.Future<void>);
  @override
  _i60.Future<void> track(_i45.OrderModel? order) => (super.noSuchMethod(
        Invocation.method(
          #track,
          [order],
        ),
        returnValue: _i60.Future<void>.value(),
        returnValueForMissingStub: _i60.Future<void>.value(),
      ) as _i60.Future<void>);
  @override
  _i60.Future<_i111.CartModel?> buyAgain(String? uuid) => (super.noSuchMethod(
        Invocation.method(
          #buyAgain,
          [uuid],
        ),
        returnValue: _i60.Future<_i111.CartModel?>.value(),
      ) as _i60.Future<_i111.CartModel?>);
  @override
  _i60.Future<void> cancelOrder() => (super.noSuchMethod(
        Invocation.method(
          #cancelOrder,
          [],
        ),
        returnValue: _i60.Future<void>.value(),
        returnValueForMissingStub: _i60.Future<void>.value(),
      ) as _i60.Future<void>);
  @override
  _i60.Future<void> complain() => (super.noSuchMethod(
        Invocation.method(
          #complain,
          [],
        ),
        returnValue: _i60.Future<void>.value(),
        returnValueForMissingStub: _i60.Future<void>.value(),
      ) as _i60.Future<void>);
  @override
  _i60.Future<void> addImage(int? index) => (super.noSuchMethod(
        Invocation.method(
          #addImage,
          [index],
        ),
        returnValue: _i60.Future<void>.value(),
        returnValueForMissingStub: _i60.Future<void>.value(),
      ) as _i60.Future<void>);
  @override
  void removeImages(int? index) => super.noSuchMethod(
        Invocation.method(
          #removeImages,
          [index],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void search(String? query) => super.noSuchMethod(
        Invocation.method(
          #search,
          [query],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void onCancelReasonChanged(String? value) => super.noSuchMethod(
        Invocation.method(
          #onCancelReasonChanged,
          [value],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void emit(_i46.OrdersState? state) => super.noSuchMethod(
        Invocation.method(
          #emit,
          [state],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void onChange(_i61.Change<_i46.OrdersState>? change) => super.noSuchMethod(
        Invocation.method(
          #onChange,
          [change],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void addError(
    Object? error, [
    StackTrace? stackTrace,
  ]) =>
      super.noSuchMethod(
        Invocation.method(
          #addError,
          [
            error,
            stackTrace,
          ],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void onError(
    Object? error,
    StackTrace? stackTrace,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #onError,
          [
            error,
            stackTrace,
          ],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i60.Future<void> close() => (super.noSuchMethod(
        Invocation.method(
          #close,
          [],
        ),
        returnValue: _i60.Future<void>.value(),
        returnValueForMissingStub: _i60.Future<void>.value(),
      ) as _i60.Future<void>);
}

/// A class which mocks [CustomerLoyaltyCubit].
///
/// See the documentation for Mockito's code generation for more information.
class MockCustomerLoyaltyCubit extends _i1.Mock
    implements _i47.CustomerLoyaltyCubit {
  MockCustomerLoyaltyCubit() {
    _i1.throwOnMissingStub(this);
  }

  @override
  set loyaltyModel(_i112.CustomerLoyaltyListModel? _loyaltyModel) =>
      super.noSuchMethod(
        Invocation.setter(
          #loyaltyModel,
          _loyaltyModel,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set selectedCustomerLoyalty(
          _i113.CustomerLoyaltyModel? _selectedCustomerLoyalty) =>
      super.noSuchMethod(
        Invocation.setter(
          #selectedCustomerLoyalty,
          _selectedCustomerLoyalty,
        ),
        returnValueForMissingStub: null,
      );
  @override
  List<_i113.CustomerLoyaltyModel> get customerList => (super.noSuchMethod(
        Invocation.getter(#customerList),
        returnValue: <_i113.CustomerLoyaltyModel>[],
      ) as List<_i113.CustomerLoyaltyModel>);
  @override
  bool get canRefresh => (super.noSuchMethod(
        Invocation.getter(#canRefresh),
        returnValue: false,
      ) as bool);
  @override
  set canRefresh(bool? _canRefresh) => super.noSuchMethod(
        Invocation.setter(
          #canRefresh,
          _canRefresh,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i47.CustomerLoyaltyState get state => (super.noSuchMethod(
        Invocation.getter(#state),
        returnValue: _FakeCustomerLoyaltyState_50(
          this,
          Invocation.getter(#state),
        ),
      ) as _i47.CustomerLoyaltyState);
  @override
  _i60.Stream<_i47.CustomerLoyaltyState> get stream => (super.noSuchMethod(
        Invocation.getter(#stream),
        returnValue: _i60.Stream<_i47.CustomerLoyaltyState>.empty(),
      ) as _i60.Stream<_i47.CustomerLoyaltyState>);
  @override
  bool get isClosed => (super.noSuchMethod(
        Invocation.getter(#isClosed),
        returnValue: false,
      ) as bool);
  @override
  _i60.Future<void> onInit() => (super.noSuchMethod(
        Invocation.method(
          #onInit,
          [],
        ),
        returnValue: _i60.Future<void>.value(),
        returnValueForMissingStub: _i60.Future<void>.value(),
      ) as _i60.Future<void>);
  @override
  _i60.Future<void> show(_i113.CustomerLoyaltyModel? shop) =>
      (super.noSuchMethod(
        Invocation.method(
          #show,
          [shop],
        ),
        returnValue: _i60.Future<void>.value(),
        returnValueForMissingStub: _i60.Future<void>.value(),
      ) as _i60.Future<void>);
  @override
  _i60.Future<String> redeem() => (super.noSuchMethod(
        Invocation.method(
          #redeem,
          [],
        ),
        returnValue: _i60.Future<String>.value(''),
      ) as _i60.Future<String>);
  @override
  void oChangRate(int? newRate) => super.noSuchMethod(
        Invocation.method(
          #oChangRate,
          [newRate],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i60.Future<void> onRefresh() => (super.noSuchMethod(
        Invocation.method(
          #onRefresh,
          [],
        ),
        returnValue: _i60.Future<void>.value(),
        returnValueForMissingStub: _i60.Future<void>.value(),
      ) as _i60.Future<void>);
  @override
  void emit(_i47.CustomerLoyaltyState? state) => super.noSuchMethod(
        Invocation.method(
          #emit,
          [state],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void onChange(_i61.Change<_i47.CustomerLoyaltyState>? change) =>
      super.noSuchMethod(
        Invocation.method(
          #onChange,
          [change],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void addError(
    Object? error, [
    StackTrace? stackTrace,
  ]) =>
      super.noSuchMethod(
        Invocation.method(
          #addError,
          [
            error,
            stackTrace,
          ],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void onError(
    Object? error,
    StackTrace? stackTrace,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #onError,
          [
            error,
            stackTrace,
          ],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i60.Future<void> close() => (super.noSuchMethod(
        Invocation.method(
          #close,
          [],
        ),
        returnValue: _i60.Future<void>.value(),
        returnValueForMissingStub: _i60.Future<void>.value(),
      ) as _i60.Future<void>);
}

/// A class which mocks [ECommerceCubit].
///
/// See the documentation for Mockito's code generation for more information.
class MockECommerceCubit extends _i1.Mock implements _i49.ECommerceCubit {
  MockECommerceCubit() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i48.FilterItem get currentFilterItem => (super.noSuchMethod(
        Invocation.getter(#currentFilterItem),
        returnValue: _FakeFilterItem_51(
          this,
          Invocation.getter(#currentFilterItem),
        ),
      ) as _i48.FilterItem);
  @override
  set currentFilterItem(_i48.FilterItem? _currentFilterItem) =>
      super.noSuchMethod(
        Invocation.setter(
          #currentFilterItem,
          _currentFilterItem,
        ),
        returnValueForMissingStub: null,
      );
  @override
  List<_i48.FilterItem> get celebrityFilters => (super.noSuchMethod(
        Invocation.getter(#celebrityFilters),
        returnValue: <_i48.FilterItem>[],
      ) as List<_i48.FilterItem>);
  @override
  set celebrityFilters(List<_i48.FilterItem>? _celebrityFilters) =>
      super.noSuchMethod(
        Invocation.setter(
          #celebrityFilters,
          _celebrityFilters,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i49.ECommerceState get state => (super.noSuchMethod(
        Invocation.getter(#state),
        returnValue: _FakeECommerceState_52(
          this,
          Invocation.getter(#state),
        ),
      ) as _i49.ECommerceState);
  @override
  _i60.Stream<_i49.ECommerceState> get stream => (super.noSuchMethod(
        Invocation.getter(#stream),
        returnValue: _i60.Stream<_i49.ECommerceState>.empty(),
      ) as _i60.Stream<_i49.ECommerceState>);
  @override
  bool get isClosed => (super.noSuchMethod(
        Invocation.getter(#isClosed),
        returnValue: false,
      ) as bool);
  @override
  void setCurrentValueToFilterOption(
    _i48.FilterItem? filterItem, {
    String? currentValue,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #setCurrentValueToFilterOption,
          [filterItem],
          {#currentValue: currentValue},
        ),
        returnValueForMissingStub: null,
      );
  @override
  void resetFilterValues() => super.noSuchMethod(
        Invocation.method(
          #resetFilterValues,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void emit(_i49.ECommerceState? state) => super.noSuchMethod(
        Invocation.method(
          #emit,
          [state],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void onChange(_i61.Change<_i49.ECommerceState>? change) => super.noSuchMethod(
        Invocation.method(
          #onChange,
          [change],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void addError(
    Object? error, [
    StackTrace? stackTrace,
  ]) =>
      super.noSuchMethod(
        Invocation.method(
          #addError,
          [
            error,
            stackTrace,
          ],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void onError(
    Object? error,
    StackTrace? stackTrace,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #onError,
          [
            error,
            stackTrace,
          ],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i60.Future<void> close() => (super.noSuchMethod(
        Invocation.method(
          #close,
          [],
        ),
        returnValue: _i60.Future<void>.value(),
        returnValueForMissingStub: _i60.Future<void>.value(),
      ) as _i60.Future<void>);
}

/// A class which mocks [StoreDetailCubit].
///
/// See the documentation for Mockito's code generation for more information.
class MockStoreDetailCubit extends _i1.Mock implements _i50.StoreDetailCubit {
  MockStoreDetailCubit() {
    _i1.throwOnMissingStub(this);
  }

  @override
  set remoteEcommerceRepo(_i114.RemoteStoreDetailRepo? _remoteEcommerceRepo) =>
      super.noSuchMethod(
        Invocation.setter(
          #remoteEcommerceRepo,
          _remoteEcommerceRepo,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set hotDeals(List<_i105.ProductModel>? _hotDeals) => super.noSuchMethod(
        Invocation.setter(
          #hotDeals,
          _hotDeals,
        ),
        returnValueForMissingStub: null,
      );
  @override
  List<_i48.FilterItem> get storeDetailFilters => (super.noSuchMethod(
        Invocation.getter(#storeDetailFilters),
        returnValue: <_i48.FilterItem>[],
      ) as List<_i48.FilterItem>);
  @override
  set storeDetailFilters(List<_i48.FilterItem>? _storeDetailFilters) =>
      super.noSuchMethod(
        Invocation.setter(
          #storeDetailFilters,
          _storeDetailFilters,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set shop(_i54.Shops? _shop) => super.noSuchMethod(
        Invocation.setter(
          #shop,
          _shop,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i4.TextEditingController get searchBarController => (super.noSuchMethod(
        Invocation.getter(#searchBarController),
        returnValue: _FakeTextEditingController_2(
          this,
          Invocation.getter(#searchBarController),
        ),
      ) as _i4.TextEditingController);
  @override
  set searchBarController(_i4.TextEditingController? _searchBarController) =>
      super.noSuchMethod(
        Invocation.setter(
          #searchBarController,
          _searchBarController,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set currentShopUUID(String? _currentShopUUID) => super.noSuchMethod(
        Invocation.setter(
          #currentShopUUID,
          _currentShopUUID,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i50.StoreDetailState get state => (super.noSuchMethod(
        Invocation.getter(#state),
        returnValue: _FakeStoreDetailState_53(
          this,
          Invocation.getter(#state),
        ),
      ) as _i50.StoreDetailState);
  @override
  _i60.Stream<_i50.StoreDetailState> get stream => (super.noSuchMethod(
        Invocation.getter(#stream),
        returnValue: _i60.Stream<_i50.StoreDetailState>.empty(),
      ) as _i60.Stream<_i50.StoreDetailState>);
  @override
  bool get isClosed => (super.noSuchMethod(
        Invocation.getter(#isClosed),
        returnValue: false,
      ) as bool);
  @override
  _i60.Future<void> getHotDeals() => (super.noSuchMethod(
        Invocation.method(
          #getHotDeals,
          [],
        ),
        returnValue: _i60.Future<void>.value(),
        returnValueForMissingStub: _i60.Future<void>.value(),
      ) as _i60.Future<void>);
  @override
  void filterByName(String? name) => super.noSuchMethod(
        Invocation.method(
          #filterByName,
          [name],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void convertListToFilterItem(
          List<_i115.ShopProductCategoryModel>? categories) =>
      super.noSuchMethod(
        Invocation.method(
          #convertListToFilterItem,
          [categories],
        ),
        returnValueForMissingStub: null,
      );
  @override
  bool isNameContainsSearchBarText(_i105.ProductModel? productModel) =>
      (super.noSuchMethod(
        Invocation.method(
          #isNameContainsSearchBarText,
          [productModel],
        ),
        returnValue: false,
      ) as bool);
  @override
  List<_i105.ProductModel> getCorrectList(_i48.FilterItem? currentFilter) =>
      (super.noSuchMethod(
        Invocation.method(
          #getCorrectList,
          [currentFilter],
        ),
        returnValue: <_i105.ProductModel>[],
      ) as List<_i105.ProductModel>);
  @override
  void resetSearchBar() => super.noSuchMethod(
        Invocation.method(
          #resetSearchBar,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i60.Future<String?> getSingleShop({required String? slug}) =>
      (super.noSuchMethod(
        Invocation.method(
          #getSingleShop,
          [],
          {#slug: slug},
        ),
        returnValue: _i60.Future<String?>.value(),
      ) as _i60.Future<String?>);
  @override
  void emit(_i50.StoreDetailState? state) => super.noSuchMethod(
        Invocation.method(
          #emit,
          [state],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void onChange(_i61.Change<_i50.StoreDetailState>? change) =>
      super.noSuchMethod(
        Invocation.method(
          #onChange,
          [change],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void addError(
    Object? error, [
    StackTrace? stackTrace,
  ]) =>
      super.noSuchMethod(
        Invocation.method(
          #addError,
          [
            error,
            stackTrace,
          ],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void onError(
    Object? error,
    StackTrace? stackTrace,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #onError,
          [
            error,
            stackTrace,
          ],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i60.Future<void> close() => (super.noSuchMethod(
        Invocation.method(
          #close,
          [],
        ),
        returnValue: _i60.Future<void>.value(),
        returnValueForMissingStub: _i60.Future<void>.value(),
      ) as _i60.Future<void>);
}

/// A class which mocks [ShippingLocationCubit].
///
/// See the documentation for Mockito's code generation for more information.
class MockShippingLocationCubit extends _i1.Mock
    implements _i51.ShippingLocationCubit {
  MockShippingLocationCubit() {
    _i1.throwOnMissingStub(this);
  }

  @override
  List<_i116.CityModel> get cities => (super.noSuchMethod(
        Invocation.getter(#cities),
        returnValue: <_i116.CityModel>[],
      ) as List<_i116.CityModel>);
  @override
  set cities(List<_i116.CityModel>? _cities) => super.noSuchMethod(
        Invocation.setter(
          #cities,
          _cities,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set currentCity(_i116.CityModel? _currentCity) => super.noSuchMethod(
        Invocation.setter(
          #currentCity,
          _currentCity,
        ),
        returnValueForMissingStub: null,
      );
  @override
  int get selectedAddressIndex => (super.noSuchMethod(
        Invocation.getter(#selectedAddressIndex),
        returnValue: 0,
      ) as int);
  @override
  set selectedAddressIndex(int? _selectedAddressIndex) => super.noSuchMethod(
        Invocation.setter(
          #selectedAddressIndex,
          _selectedAddressIndex,
        ),
        returnValueForMissingStub: null,
      );
  @override
  bool get isDefaultAddressCheckBoxValue => (super.noSuchMethod(
        Invocation.getter(#isDefaultAddressCheckBoxValue),
        returnValue: false,
      ) as bool);
  @override
  set isDefaultAddressCheckBoxValue(bool? _isDefaultAddressCheckBoxValue) =>
      super.noSuchMethod(
        Invocation.setter(
          #isDefaultAddressCheckBoxValue,
          _isDefaultAddressCheckBoxValue,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i4.GlobalKey<_i4.FormState> get globalKey => (super.noSuchMethod(
        Invocation.getter(#globalKey),
        returnValue: _FakeGlobalKey_4<_i4.FormState>(
          this,
          Invocation.getter(#globalKey),
        ),
      ) as _i4.GlobalKey<_i4.FormState>);
  @override
  _i4.TextEditingController get streetNameController => (super.noSuchMethod(
        Invocation.getter(#streetNameController),
        returnValue: _FakeTextEditingController_2(
          this,
          Invocation.getter(#streetNameController),
        ),
      ) as _i4.TextEditingController);
  @override
  _i4.TextEditingController get houseNumberController => (super.noSuchMethod(
        Invocation.getter(#houseNumberController),
        returnValue: _FakeTextEditingController_2(
          this,
          Invocation.getter(#houseNumberController),
        ),
      ) as _i4.TextEditingController);
  @override
  _i4.TextEditingController get cityController => (super.noSuchMethod(
        Invocation.getter(#cityController),
        returnValue: _FakeTextEditingController_2(
          this,
          Invocation.getter(#cityController),
        ),
      ) as _i4.TextEditingController);
  @override
  _i4.TextEditingController get stateController => (super.noSuchMethod(
        Invocation.getter(#stateController),
        returnValue: _FakeTextEditingController_2(
          this,
          Invocation.getter(#stateController),
        ),
      ) as _i4.TextEditingController);
  @override
  _i4.TextEditingController get postalCodeController => (super.noSuchMethod(
        Invocation.getter(#postalCodeController),
        returnValue: _FakeTextEditingController_2(
          this,
          Invocation.getter(#postalCodeController),
        ),
      ) as _i4.TextEditingController);
  @override
  _i4.TextEditingController get countryController => (super.noSuchMethod(
        Invocation.getter(#countryController),
        returnValue: _FakeTextEditingController_2(
          this,
          Invocation.getter(#countryController),
        ),
      ) as _i4.TextEditingController);
  @override
  _i4.TextEditingController get phoneNumberController => (super.noSuchMethod(
        Invocation.getter(#phoneNumberController),
        returnValue: _FakeTextEditingController_2(
          this,
          Invocation.getter(#phoneNumberController),
        ),
      ) as _i4.TextEditingController);
  @override
  _i4.FocusNode get phoneNumberFocusNode => (super.noSuchMethod(
        Invocation.getter(#phoneNumberFocusNode),
        returnValue: _FakeFocusNode_3(
          this,
          Invocation.getter(#phoneNumberFocusNode),
        ),
      ) as _i4.FocusNode);
  @override
  _i4.FocusNode get streetFocusNode => (super.noSuchMethod(
        Invocation.getter(#streetFocusNode),
        returnValue: _FakeFocusNode_3(
          this,
          Invocation.getter(#streetFocusNode),
        ),
      ) as _i4.FocusNode);
  @override
  _i4.FocusNode get houseNumberFocusNode => (super.noSuchMethod(
        Invocation.getter(#houseNumberFocusNode),
        returnValue: _FakeFocusNode_3(
          this,
          Invocation.getter(#houseNumberFocusNode),
        ),
      ) as _i4.FocusNode);
  @override
  _i4.FocusNode get countryFocusNode => (super.noSuchMethod(
        Invocation.getter(#countryFocusNode),
        returnValue: _FakeFocusNode_3(
          this,
          Invocation.getter(#countryFocusNode),
        ),
      ) as _i4.FocusNode);
  @override
  _i4.FocusNode get cityFocusNode => (super.noSuchMethod(
        Invocation.getter(#cityFocusNode),
        returnValue: _FakeFocusNode_3(
          this,
          Invocation.getter(#cityFocusNode),
        ),
      ) as _i4.FocusNode);
  @override
  _i4.FocusNode get stateFocusNode => (super.noSuchMethod(
        Invocation.getter(#stateFocusNode),
        returnValue: _FakeFocusNode_3(
          this,
          Invocation.getter(#stateFocusNode),
        ),
      ) as _i4.FocusNode);
  @override
  _i4.FocusNode get zipCodeFocusNode => (super.noSuchMethod(
        Invocation.getter(#zipCodeFocusNode),
        returnValue: _FakeFocusNode_3(
          this,
          Invocation.getter(#zipCodeFocusNode),
        ),
      ) as _i4.FocusNode);
  @override
  List<_i117.AddressModel> get addresses => (super.noSuchMethod(
        Invocation.getter(#addresses),
        returnValue: <_i117.AddressModel>[],
      ) as List<_i117.AddressModel>);
  @override
  set addresses(List<_i117.AddressModel>? _addresses) => super.noSuchMethod(
        Invocation.setter(
          #addresses,
          _addresses,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i51.ShippingLocationState get state => (super.noSuchMethod(
        Invocation.getter(#state),
        returnValue: _FakeShippingLocationState_54(
          this,
          Invocation.getter(#state),
        ),
      ) as _i51.ShippingLocationState);
  @override
  _i60.Stream<_i51.ShippingLocationState> get stream => (super.noSuchMethod(
        Invocation.getter(#stream),
        returnValue: _i60.Stream<_i51.ShippingLocationState>.empty(),
      ) as _i60.Stream<_i51.ShippingLocationState>);
  @override
  bool get isClosed => (super.noSuchMethod(
        Invocation.getter(#isClosed),
        returnValue: false,
      ) as bool);
  @override
  _i60.Future<void> init() => (super.noSuchMethod(
        Invocation.method(
          #init,
          [],
        ),
        returnValue: _i60.Future<void>.value(),
        returnValueForMissingStub: _i60.Future<void>.value(),
      ) as _i60.Future<void>);
  @override
  void updateScreen() => super.noSuchMethod(
        Invocation.method(
          #updateScreen,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void changeDefaultAddress({required bool? value}) => super.noSuchMethod(
        Invocation.method(
          #changeDefaultAddress,
          [],
          {#value: value},
        ),
        returnValueForMissingStub: null,
      );
  @override
  void changeCity({required _i116.CityModel? cityModel}) => super.noSuchMethod(
        Invocation.method(
          #changeCity,
          [],
          {#cityModel: cityModel},
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i60.Future<void> determineAddressDetails() => (super.noSuchMethod(
        Invocation.method(
          #determineAddressDetails,
          [],
        ),
        returnValue: _i60.Future<void>.value(),
        returnValueForMissingStub: _i60.Future<void>.value(),
      ) as _i60.Future<void>);
  @override
  _i60.Future<void> changeSelectedAddress(int? index) => (super.noSuchMethod(
        Invocation.method(
          #changeSelectedAddress,
          [index],
        ),
        returnValue: _i60.Future<void>.value(),
        returnValueForMissingStub: _i60.Future<void>.value(),
      ) as _i60.Future<void>);
  @override
  _i60.Future<void> deleteAddress(int? index) => (super.noSuchMethod(
        Invocation.method(
          #deleteAddress,
          [index],
        ),
        returnValue: _i60.Future<void>.value(),
        returnValueForMissingStub: _i60.Future<void>.value(),
      ) as _i60.Future<void>);
  @override
  _i60.Future<void> updateAddress() => (super.noSuchMethod(
        Invocation.method(
          #updateAddress,
          [],
        ),
        returnValue: _i60.Future<void>.value(),
        returnValueForMissingStub: _i60.Future<void>.value(),
      ) as _i60.Future<void>);
  @override
  _i60.Future<bool> addAddress({
    required String? countryUUID,
    required String? cityUUID,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #addAddress,
          [],
          {
            #countryUUID: countryUUID,
            #cityUUID: cityUUID,
          },
        ),
        returnValue: _i60.Future<bool>.value(false),
      ) as _i60.Future<bool>);
  @override
  _i60.Future<void> getCities(String? countryUUID) => (super.noSuchMethod(
        Invocation.method(
          #getCities,
          [countryUUID],
        ),
        returnValue: _i60.Future<void>.value(),
        returnValueForMissingStub: _i60.Future<void>.value(),
      ) as _i60.Future<void>);
  @override
  void emit(_i51.ShippingLocationState? state) => super.noSuchMethod(
        Invocation.method(
          #emit,
          [state],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void onChange(_i61.Change<_i51.ShippingLocationState>? change) =>
      super.noSuchMethod(
        Invocation.method(
          #onChange,
          [change],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void addError(
    Object? error, [
    StackTrace? stackTrace,
  ]) =>
      super.noSuchMethod(
        Invocation.method(
          #addError,
          [
            error,
            stackTrace,
          ],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void onError(
    Object? error,
    StackTrace? stackTrace,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #onError,
          [
            error,
            stackTrace,
          ],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i60.Future<void> close() => (super.noSuchMethod(
        Invocation.method(
          #close,
          [],
        ),
        returnValue: _i60.Future<void>.value(),
        returnValueForMissingStub: _i60.Future<void>.value(),
      ) as _i60.Future<void>);
}

/// A class which mocks [CartCubit].
///
/// See the documentation for Mockito's code generation for more information.
class MockCartCubit extends _i1.Mock implements _i52.CartCubit {
  MockCartCubit() {
    _i1.throwOnMissingStub(this);
  }

  @override
  set remoteCartRepo(_i118.RemoteCartRepo? _remoteCartRepo) =>
      super.noSuchMethod(
        Invocation.setter(
          #remoteCartRepo,
          _remoteCartRepo,
        ),
        returnValueForMissingStub: null,
      );
  @override
  String get promoCodeMessage => (super.noSuchMethod(
        Invocation.getter(#promoCodeMessage),
        returnValue: '',
      ) as String);
  @override
  set promoCodeMessage(String? _promoCodeMessage) => super.noSuchMethod(
        Invocation.setter(
          #promoCodeMessage,
          _promoCodeMessage,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set currentProduct(String? _currentProduct) => super.noSuchMethod(
        Invocation.setter(
          #currentProduct,
          _currentProduct,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i4.FocusNode get promoCodeFocusNode => (super.noSuchMethod(
        Invocation.getter(#promoCodeFocusNode),
        returnValue: _FakeFocusNode_3(
          this,
          Invocation.getter(#promoCodeFocusNode),
        ),
      ) as _i4.FocusNode);
  @override
  set promoCodeFocusNode(_i4.FocusNode? _promoCodeFocusNode) =>
      super.noSuchMethod(
        Invocation.setter(
          #promoCodeFocusNode,
          _promoCodeFocusNode,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i4.TextEditingController get promotionTextFieldController =>
      (super.noSuchMethod(
        Invocation.getter(#promotionTextFieldController),
        returnValue: _FakeTextEditingController_2(
          this,
          Invocation.getter(#promotionTextFieldController),
        ),
      ) as _i4.TextEditingController);
  @override
  set promotionTextFieldController(
          _i4.TextEditingController? _promotionTextFieldController) =>
      super.noSuchMethod(
        Invocation.setter(
          #promotionTextFieldController,
          _promotionTextFieldController,
        ),
        returnValueForMissingStub: null,
      );
  @override
  bool get isPromotionAlreadyExist => (super.noSuchMethod(
        Invocation.getter(#isPromotionAlreadyExist),
        returnValue: false,
      ) as bool);
  @override
  set isPromotionAlreadyExist(bool? _isPromotionAlreadyExist) =>
      super.noSuchMethod(
        Invocation.setter(
          #isPromotionAlreadyExist,
          _isPromotionAlreadyExist,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i4.GlobalKey<_i4.FormState> get promoCodeFormKey => (super.noSuchMethod(
        Invocation.getter(#promoCodeFormKey),
        returnValue: _FakeGlobalKey_4<_i4.FormState>(
          this,
          Invocation.getter(#promoCodeFormKey),
        ),
      ) as _i4.GlobalKey<_i4.FormState>);
  @override
  set promoCodeFormKey(_i4.GlobalKey<_i4.FormState>? _promoCodeFormKey) =>
      super.noSuchMethod(
        Invocation.setter(
          #promoCodeFormKey,
          _promoCodeFormKey,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set cartModel(_i111.CartModel? _cartModel) => super.noSuchMethod(
        Invocation.setter(
          #cartModel,
          _cartModel,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set promotionsModel(_i78.PromotionsModel? _promotionsModel) =>
      super.noSuchMethod(
        Invocation.setter(
          #promotionsModel,
          _promotionsModel,
        ),
        returnValueForMissingStub: null,
      );
  @override
  bool get showSummary => (super.noSuchMethod(
        Invocation.getter(#showSummary),
        returnValue: false,
      ) as bool);
  @override
  set showSummary(bool? _showSummary) => super.noSuchMethod(
        Invocation.setter(
          #showSummary,
          _showSummary,
        ),
        returnValueForMissingStub: null,
      );
  @override
  bool get isPromoCodeApplied => (super.noSuchMethod(
        Invocation.getter(#isPromoCodeApplied),
        returnValue: false,
      ) as bool);
  @override
  _i52.CartState get state => (super.noSuchMethod(
        Invocation.getter(#state),
        returnValue: _FakeCartState_55(
          this,
          Invocation.getter(#state),
        ),
      ) as _i52.CartState);
  @override
  _i60.Stream<_i52.CartState> get stream => (super.noSuchMethod(
        Invocation.getter(#stream),
        returnValue: _i60.Stream<_i52.CartState>.empty(),
      ) as _i60.Stream<_i52.CartState>);
  @override
  bool get isClosed => (super.noSuchMethod(
        Invocation.getter(#isClosed),
        returnValue: false,
      ) as bool);
  @override
  void resetCartAndPromoCode() => super.noSuchMethod(
        Invocation.method(
          #resetCartAndPromoCode,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void resetPromoCode() => super.noSuchMethod(
        Invocation.method(
          #resetPromoCode,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i60.Future<bool> setIsPromotion(String? shopUUID) => (super.noSuchMethod(
        Invocation.method(
          #setIsPromotion,
          [shopUUID],
        ),
        returnValue: _i60.Future<bool>.value(false),
      ) as _i60.Future<bool>);
  @override
  void setCurrentProduct(String? newValue) => super.noSuchMethod(
        Invocation.method(
          #setCurrentProduct,
          [newValue],
        ),
        returnValueForMissingStub: null,
      );
  @override
  bool conditionToRebuild(String? productModel) => (super.noSuchMethod(
        Invocation.method(
          #conditionToRebuild,
          [productModel],
        ),
        returnValue: false,
      ) as bool);
  @override
  _i60.Future<void> addToCart(String? productUUID) => (super.noSuchMethod(
        Invocation.method(
          #addToCart,
          [productUUID],
        ),
        returnValue: _i60.Future<void>.value(),
        returnValueForMissingStub: _i60.Future<void>.value(),
      ) as _i60.Future<void>);
  @override
  _i60.Future<void> getCartProducts(String? shopUUID) => (super.noSuchMethod(
        Invocation.method(
          #getCartProducts,
          [shopUUID],
        ),
        returnValue: _i60.Future<void>.value(),
        returnValueForMissingStub: _i60.Future<void>.value(),
      ) as _i60.Future<void>);
  @override
  _i60.Future<void> removePromotion({
    bool? forTest = false,
    required String? shopUUID,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #removePromotion,
          [],
          {
            #forTest: forTest,
            #shopUUID: shopUUID,
          },
        ),
        returnValue: _i60.Future<void>.value(),
        returnValueForMissingStub: _i60.Future<void>.value(),
      ) as _i60.Future<void>);
  @override
  _i60.Future<void> addPromotion({
    bool? forTest = false,
    required String? shopUUID,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #addPromotion,
          [],
          {
            #forTest: forTest,
            #shopUUID: shopUUID,
          },
        ),
        returnValue: _i60.Future<void>.value(),
        returnValueForMissingStub: _i60.Future<void>.value(),
      ) as _i60.Future<void>);
  @override
  _i60.Future<void> removeFromCart(String? itemKey) => (super.noSuchMethod(
        Invocation.method(
          #removeFromCart,
          [itemKey],
        ),
        returnValue: _i60.Future<void>.value(),
        returnValueForMissingStub: _i60.Future<void>.value(),
      ) as _i60.Future<void>);
  @override
  _i60.Future<void> increaseItemCount({
    required String? itemUUID,
    required int? quantity,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #increaseItemCount,
          [],
          {
            #itemUUID: itemUUID,
            #quantity: quantity,
          },
        ),
        returnValue: _i60.Future<void>.value(),
        returnValueForMissingStub: _i60.Future<void>.value(),
      ) as _i60.Future<void>);
  @override
  _i60.Future<void> decreaseItemCount({
    required String? itemUUID,
    required int? quantity,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #decreaseItemCount,
          [],
          {
            #itemUUID: itemUUID,
            #quantity: quantity,
          },
        ),
        returnValue: _i60.Future<void>.value(),
        returnValueForMissingStub: _i60.Future<void>.value(),
      ) as _i60.Future<void>);
  @override
  void setShowSummaryValue() => super.noSuchMethod(
        Invocation.method(
          #setShowSummaryValue,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  bool isInCart(String? productUuid) => (super.noSuchMethod(
        Invocation.method(
          #isInCart,
          [productUuid],
        ),
        returnValue: false,
      ) as bool);
  @override
  void emit(_i52.CartState? state) => super.noSuchMethod(
        Invocation.method(
          #emit,
          [state],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void onChange(_i61.Change<_i52.CartState>? change) => super.noSuchMethod(
        Invocation.method(
          #onChange,
          [change],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void addError(
    Object? error, [
    StackTrace? stackTrace,
  ]) =>
      super.noSuchMethod(
        Invocation.method(
          #addError,
          [
            error,
            stackTrace,
          ],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void onError(
    Object? error,
    StackTrace? stackTrace,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #onError,
          [
            error,
            stackTrace,
          ],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i60.Future<void> close() => (super.noSuchMethod(
        Invocation.method(
          #close,
          [],
        ),
        returnValue: _i60.Future<void>.value(),
        returnValueForMissingStub: _i60.Future<void>.value(),
      ) as _i60.Future<void>);
}

/// A class which mocks [FavoriteCubit].
///
/// See the documentation for Mockito's code generation for more information.
class MockFavoriteCubit extends _i1.Mock implements _i53.FavoriteCubit {
  MockFavoriteCubit() {
    _i1.throwOnMissingStub(this);
  }

  @override
  set currentProduct(String? _currentProduct) => super.noSuchMethod(
        Invocation.setter(
          #currentProduct,
          _currentProduct,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set remoteFavoriteRepo(_i119.RemoteFavoriteRepo? _remoteFavoriteRepo) =>
      super.noSuchMethod(
        Invocation.setter(
          #remoteFavoriteRepo,
          _remoteFavoriteRepo,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set favoritesModel(_i120.FavoritesModel? _favoritesModel) =>
      super.noSuchMethod(
        Invocation.setter(
          #favoritesModel,
          _favoritesModel,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i53.FavoriteState get state => (super.noSuchMethod(
        Invocation.getter(#state),
        returnValue: _FakeFavoriteState_56(
          this,
          Invocation.getter(#state),
        ),
      ) as _i53.FavoriteState);
  @override
  _i60.Stream<_i53.FavoriteState> get stream => (super.noSuchMethod(
        Invocation.getter(#stream),
        returnValue: _i60.Stream<_i53.FavoriteState>.empty(),
      ) as _i60.Stream<_i53.FavoriteState>);
  @override
  bool get isClosed => (super.noSuchMethod(
        Invocation.getter(#isClosed),
        returnValue: false,
      ) as bool);
  @override
  bool buildWhenCondition(dynamic productModel) => (super.noSuchMethod(
        Invocation.method(
          #buildWhenCondition,
          [productModel],
        ),
        returnValue: false,
      ) as bool);
  @override
  void resetFavorite() => super.noSuchMethod(
        Invocation.method(
          #resetFavorite,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void setCurrentProduct(String? newValue) => super.noSuchMethod(
        Invocation.method(
          #setCurrentProduct,
          [newValue],
        ),
        returnValueForMissingStub: null,
      );
  @override
  bool isInFav(_i105.ProductModel? productModel) => (super.noSuchMethod(
        Invocation.method(
          #isInFav,
          [productModel],
        ),
        returnValue: false,
      ) as bool);
  @override
  _i60.Future<void> addToFavorite(_i105.ProductModel? productModel) =>
      (super.noSuchMethod(
        Invocation.method(
          #addToFavorite,
          [productModel],
        ),
        returnValue: _i60.Future<void>.value(),
        returnValueForMissingStub: _i60.Future<void>.value(),
      ) as _i60.Future<void>);
  @override
  _i60.Future<void> removeFromFavorite(String? productId) =>
      (super.noSuchMethod(
        Invocation.method(
          #removeFromFavorite,
          [productId],
        ),
        returnValue: _i60.Future<void>.value(),
        returnValueForMissingStub: _i60.Future<void>.value(),
      ) as _i60.Future<void>);
  @override
  _i60.Future<void> getFavorites({bool? showLoading = true}) =>
      (super.noSuchMethod(
        Invocation.method(
          #getFavorites,
          [],
          {#showLoading: showLoading},
        ),
        returnValue: _i60.Future<void>.value(),
        returnValueForMissingStub: _i60.Future<void>.value(),
      ) as _i60.Future<void>);
  @override
  void emit(_i53.FavoriteState? state) => super.noSuchMethod(
        Invocation.method(
          #emit,
          [state],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void onChange(_i61.Change<_i53.FavoriteState>? change) => super.noSuchMethod(
        Invocation.method(
          #onChange,
          [change],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void addError(
    Object? error, [
    StackTrace? stackTrace,
  ]) =>
      super.noSuchMethod(
        Invocation.method(
          #addError,
          [
            error,
            stackTrace,
          ],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void onError(
    Object? error,
    StackTrace? stackTrace,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #onError,
          [
            error,
            stackTrace,
          ],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i60.Future<void> close() => (super.noSuchMethod(
        Invocation.method(
          #close,
          [],
        ),
        returnValue: _i60.Future<void>.value(),
        returnValueForMissingStub: _i60.Future<void>.value(),
      ) as _i60.Future<void>);
}

/// A class which mocks [ShopCubit].
///
/// See the documentation for Mockito's code generation for more information.
class MockShopCubit extends _i1.Mock implements _i55.ShopCubit {
  MockShopCubit() {
    _i1.throwOnMissingStub(this);
  }

  @override
  set pageValue(int? _pageValue) => super.noSuchMethod(
        Invocation.setter(
          #pageValue,
          _pageValue,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i54.ShopModel get shops => (super.noSuchMethod(
        Invocation.getter(#shops),
        returnValue: _FakeShopModel_57(
          this,
          Invocation.getter(#shops),
        ),
      ) as _i54.ShopModel);
  @override
  set shops(_i54.ShopModel? _shops) => super.noSuchMethod(
        Invocation.setter(
          #shops,
          _shops,
        ),
        returnValueForMissingStub: null,
      );
  @override
  String get query => (super.noSuchMethod(
        Invocation.getter(#query),
        returnValue: '',
      ) as String);
  @override
  set query(String? _query) => super.noSuchMethod(
        Invocation.setter(
          #query,
          _query,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i4.TextEditingController get searchBarController => (super.noSuchMethod(
        Invocation.getter(#searchBarController),
        returnValue: _FakeTextEditingController_2(
          this,
          Invocation.getter(#searchBarController),
        ),
      ) as _i4.TextEditingController);
  @override
  set searchBarController(_i4.TextEditingController? _searchBarController) =>
      super.noSuchMethod(
        Invocation.setter(
          #searchBarController,
          _searchBarController,
        ),
        returnValueForMissingStub: null,
      );
  @override
  List<_i54.Shops> get categoryFilteredList => (super.noSuchMethod(
        Invocation.getter(#categoryFilteredList),
        returnValue: <_i54.Shops>[],
      ) as List<_i54.Shops>);
  @override
  bool get canRefresh => (super.noSuchMethod(
        Invocation.getter(#canRefresh),
        returnValue: false,
      ) as bool);
  @override
  set canRefresh(bool? _canRefresh) => super.noSuchMethod(
        Invocation.setter(
          #canRefresh,
          _canRefresh,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i55.ShopState get state => (super.noSuchMethod(
        Invocation.getter(#state),
        returnValue: _FakeShopState_58(
          this,
          Invocation.getter(#state),
        ),
      ) as _i55.ShopState);
  @override
  _i60.Stream<_i55.ShopState> get stream => (super.noSuchMethod(
        Invocation.getter(#stream),
        returnValue: _i60.Stream<_i55.ShopState>.empty(),
      ) as _i60.Stream<_i55.ShopState>);
  @override
  bool get isClosed => (super.noSuchMethod(
        Invocation.getter(#isClosed),
        returnValue: false,
      ) as bool);
  @override
  void resetSearchBar() => super.noSuchMethod(
        Invocation.method(
          #resetSearchBar,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i60.Future<void> onInit() => (super.noSuchMethod(
        Invocation.method(
          #onInit,
          [],
        ),
        returnValue: _i60.Future<void>.value(),
        returnValueForMissingStub: _i60.Future<void>.value(),
      ) as _i60.Future<void>);
  @override
  void onChangeImage(int? value) => super.noSuchMethod(
        Invocation.method(
          #onChangeImage,
          [value],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void changeCategory(int? index) => super.noSuchMethod(
        Invocation.method(
          #changeCategory,
          [index],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void onChangeSearch(String? value) => super.noSuchMethod(
        Invocation.method(
          #onChangeSearch,
          [value],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i60.Future<void> onRefresh() => (super.noSuchMethod(
        Invocation.method(
          #onRefresh,
          [],
        ),
        returnValue: _i60.Future<void>.value(),
        returnValueForMissingStub: _i60.Future<void>.value(),
      ) as _i60.Future<void>);
  @override
  void emit(_i55.ShopState? state) => super.noSuchMethod(
        Invocation.method(
          #emit,
          [state],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void onChange(_i61.Change<_i55.ShopState>? change) => super.noSuchMethod(
        Invocation.method(
          #onChange,
          [change],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void addError(
    Object? error, [
    StackTrace? stackTrace,
  ]) =>
      super.noSuchMethod(
        Invocation.method(
          #addError,
          [
            error,
            stackTrace,
          ],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void onError(
    Object? error,
    StackTrace? stackTrace,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #onError,
          [
            error,
            stackTrace,
          ],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i60.Future<void> close() => (super.noSuchMethod(
        Invocation.method(
          #close,
          [],
        ),
        returnValue: _i60.Future<void>.value(),
        returnValueForMissingStub: _i60.Future<void>.value(),
      ) as _i60.Future<void>);
}

/// A class which mocks [HomCubit].
///
/// See the documentation for Mockito's code generation for more information.
class MockHomCubit extends _i1.Mock implements _i56.HomCubit {
  MockHomCubit() {
    _i1.throwOnMissingStub(this);
  }

  @override
  set homeCards(List<_i72.CreditCardModel>? _homeCards) => super.noSuchMethod(
        Invocation.setter(
          #homeCards,
          _homeCards,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set userName(String? _userName) => super.noSuchMethod(
        Invocation.setter(
          #userName,
          _userName,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set imageUrl(String? _imageUrl) => super.noSuchMethod(
        Invocation.setter(
          #imageUrl,
          _imageUrl,
        ),
        returnValueForMissingStub: null,
      );
  @override
  bool get canRefresh => (super.noSuchMethod(
        Invocation.getter(#canRefresh),
        returnValue: false,
      ) as bool);
  @override
  set canRefresh(bool? _canRefresh) => super.noSuchMethod(
        Invocation.setter(
          #canRefresh,
          _canRefresh,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i56.HomeState get state => (super.noSuchMethod(
        Invocation.getter(#state),
        returnValue: _FakeHomeState_59(
          this,
          Invocation.getter(#state),
        ),
      ) as _i56.HomeState);
  @override
  _i60.Stream<_i56.HomeState> get stream => (super.noSuchMethod(
        Invocation.getter(#stream),
        returnValue: _i60.Stream<_i56.HomeState>.empty(),
      ) as _i60.Stream<_i56.HomeState>);
  @override
  bool get isClosed => (super.noSuchMethod(
        Invocation.getter(#isClosed),
        returnValue: false,
      ) as bool);
  @override
  _i60.Future<void> refreshHomeScreenData() => (super.noSuchMethod(
        Invocation.method(
          #refreshHomeScreenData,
          [],
        ),
        returnValue: _i60.Future<void>.value(),
        returnValueForMissingStub: _i60.Future<void>.value(),
      ) as _i60.Future<void>);
  @override
  void putNewDate() => super.noSuchMethod(
        Invocation.method(
          #putNewDate,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i60.Future<void> onInit() => (super.noSuchMethod(
        Invocation.method(
          #onInit,
          [],
        ),
        returnValue: _i60.Future<void>.value(),
        returnValueForMissingStub: _i60.Future<void>.value(),
      ) as _i60.Future<void>);
  @override
  _i60.Future<void> onRefresh() => (super.noSuchMethod(
        Invocation.method(
          #onRefresh,
          [],
        ),
        returnValue: _i60.Future<void>.value(),
        returnValueForMissingStub: _i60.Future<void>.value(),
      ) as _i60.Future<void>);
  @override
  void emit(_i56.HomeState? state) => super.noSuchMethod(
        Invocation.method(
          #emit,
          [state],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void onChange(_i61.Change<_i56.HomeState>? change) => super.noSuchMethod(
        Invocation.method(
          #onChange,
          [change],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void addError(
    Object? error, [
    StackTrace? stackTrace,
  ]) =>
      super.noSuchMethod(
        Invocation.method(
          #addError,
          [
            error,
            stackTrace,
          ],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void onError(
    Object? error,
    StackTrace? stackTrace,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #onError,
          [
            error,
            stackTrace,
          ],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i60.Future<void> close() => (super.noSuchMethod(
        Invocation.method(
          #close,
          [],
        ),
        returnValue: _i60.Future<void>.value(),
        returnValueForMissingStub: _i60.Future<void>.value(),
      ) as _i60.Future<void>);
}

/// A class which mocks [CheckoutCubit].
///
/// See the documentation for Mockito's code generation for more information.
class MockCheckoutCubit extends _i1.Mock implements _i57.CheckoutCubit {
  MockCheckoutCubit() {
    _i1.throwOnMissingStub(this);
  }

  @override
  int get selectedCardCheckout => (super.noSuchMethod(
        Invocation.getter(#selectedCardCheckout),
        returnValue: 0,
      ) as int);
  @override
  set selectedCardCheckout(int? _selectedCardCheckout) => super.noSuchMethod(
        Invocation.setter(
          #selectedCardCheckout,
          _selectedCardCheckout,
        ),
        returnValueForMissingStub: null,
      );
  @override
  int get selectedBankAccountCheckout => (super.noSuchMethod(
        Invocation.getter(#selectedBankAccountCheckout),
        returnValue: 0,
      ) as int);
  @override
  set selectedBankAccountCheckout(int? _selectedBankAccountCheckout) =>
      super.noSuchMethod(
        Invocation.setter(
          #selectedBankAccountCheckout,
          _selectedBankAccountCheckout,
        ),
        returnValueForMissingStub: null,
      );
  @override
  bool get enableSummaryButton => (super.noSuchMethod(
        Invocation.getter(#enableSummaryButton),
        returnValue: false,
      ) as bool);
  @override
  _i57.CheckoutState get state => (super.noSuchMethod(
        Invocation.getter(#state),
        returnValue: _FakeCheckoutState_60(
          this,
          Invocation.getter(#state),
        ),
      ) as _i57.CheckoutState);
  @override
  _i60.Stream<_i57.CheckoutState> get stream => (super.noSuchMethod(
        Invocation.getter(#stream),
        returnValue: _i60.Stream<_i57.CheckoutState>.empty(),
      ) as _i60.Stream<_i57.CheckoutState>);
  @override
  bool get isClosed => (super.noSuchMethod(
        Invocation.getter(#isClosed),
        returnValue: false,
      ) as bool);
  @override
  void toggleCard(int? cardValue) => super.noSuchMethod(
        Invocation.method(
          #toggleCard,
          [cardValue],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void toggleBankAccount(int? bankAccount) => super.noSuchMethod(
        Invocation.method(
          #toggleBankAccount,
          [bankAccount],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i60.Future<Map<String, dynamic>> placeOrder({
    required String? addressUUID,
    required String? cartUUID,
    String? paymentMethod = r'wallet',
    String? walletUUID,
    String? creditCardUUID,
    String? bankAccountUUID,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #placeOrder,
          [],
          {
            #addressUUID: addressUUID,
            #cartUUID: cartUUID,
            #paymentMethod: paymentMethod,
            #walletUUID: walletUUID,
            #creditCardUUID: creditCardUUID,
            #bankAccountUUID: bankAccountUUID,
          },
        ),
        returnValue:
            _i60.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i60.Future<Map<String, dynamic>>);
  @override
  void emit(_i57.CheckoutState? state) => super.noSuchMethod(
        Invocation.method(
          #emit,
          [state],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void onChange(_i61.Change<_i57.CheckoutState>? change) => super.noSuchMethod(
        Invocation.method(
          #onChange,
          [change],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void addError(
    Object? error, [
    StackTrace? stackTrace,
  ]) =>
      super.noSuchMethod(
        Invocation.method(
          #addError,
          [
            error,
            stackTrace,
          ],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void onError(
    Object? error,
    StackTrace? stackTrace,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #onError,
          [
            error,
            stackTrace,
          ],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i60.Future<void> close() => (super.noSuchMethod(
        Invocation.method(
          #close,
          [],
        ),
        returnValue: _i60.Future<void>.value(),
        returnValueForMissingStub: _i60.Future<void>.value(),
      ) as _i60.Future<void>);
}

/// A class which mocks [FlutterSecureStorage].
///
/// See the documentation for Mockito's code generation for more information.
class MockFlutterSecureStorage extends _i1.Mock
    implements _i58.FlutterSecureStorage {
  MockFlutterSecureStorage() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i58.IOSOptions get iOptions => (super.noSuchMethod(
        Invocation.getter(#iOptions),
        returnValue: _FakeIOSOptions_61(
          this,
          Invocation.getter(#iOptions),
        ),
      ) as _i58.IOSOptions);
  @override
  _i58.AndroidOptions get aOptions => (super.noSuchMethod(
        Invocation.getter(#aOptions),
        returnValue: _FakeAndroidOptions_62(
          this,
          Invocation.getter(#aOptions),
        ),
      ) as _i58.AndroidOptions);
  @override
  _i58.LinuxOptions get lOptions => (super.noSuchMethod(
        Invocation.getter(#lOptions),
        returnValue: _FakeLinuxOptions_63(
          this,
          Invocation.getter(#lOptions),
        ),
      ) as _i58.LinuxOptions);
  @override
  _i58.WindowsOptions get wOptions => (super.noSuchMethod(
        Invocation.getter(#wOptions),
        returnValue: _FakeWindowsOptions_64(
          this,
          Invocation.getter(#wOptions),
        ),
      ) as _i58.WindowsOptions);
  @override
  _i58.WebOptions get webOptions => (super.noSuchMethod(
        Invocation.getter(#webOptions),
        returnValue: _FakeWebOptions_65(
          this,
          Invocation.getter(#webOptions),
        ),
      ) as _i58.WebOptions);
  @override
  _i58.MacOsOptions get mOptions => (super.noSuchMethod(
        Invocation.getter(#mOptions),
        returnValue: _FakeMacOsOptions_66(
          this,
          Invocation.getter(#mOptions),
        ),
      ) as _i58.MacOsOptions);
  @override
  _i60.Future<void> write({
    required String? key,
    required String? value,
    _i58.IOSOptions? iOptions,
    _i58.AndroidOptions? aOptions,
    _i58.LinuxOptions? lOptions,
    _i58.WebOptions? webOptions,
    _i58.MacOsOptions? mOptions,
    _i58.WindowsOptions? wOptions,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #write,
          [],
          {
            #key: key,
            #value: value,
            #iOptions: iOptions,
            #aOptions: aOptions,
            #lOptions: lOptions,
            #webOptions: webOptions,
            #mOptions: mOptions,
            #wOptions: wOptions,
          },
        ),
        returnValue: _i60.Future<void>.value(),
        returnValueForMissingStub: _i60.Future<void>.value(),
      ) as _i60.Future<void>);
  @override
  _i60.Future<String?> read({
    required String? key,
    _i58.IOSOptions? iOptions,
    _i58.AndroidOptions? aOptions,
    _i58.LinuxOptions? lOptions,
    _i58.WebOptions? webOptions,
    _i58.MacOsOptions? mOptions,
    _i58.WindowsOptions? wOptions,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #read,
          [],
          {
            #key: key,
            #iOptions: iOptions,
            #aOptions: aOptions,
            #lOptions: lOptions,
            #webOptions: webOptions,
            #mOptions: mOptions,
            #wOptions: wOptions,
          },
        ),
        returnValue: _i60.Future<String?>.value(),
      ) as _i60.Future<String?>);
  @override
  _i60.Future<bool> containsKey({
    required String? key,
    _i58.IOSOptions? iOptions,
    _i58.AndroidOptions? aOptions,
    _i58.LinuxOptions? lOptions,
    _i58.WebOptions? webOptions,
    _i58.MacOsOptions? mOptions,
    _i58.WindowsOptions? wOptions,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #containsKey,
          [],
          {
            #key: key,
            #iOptions: iOptions,
            #aOptions: aOptions,
            #lOptions: lOptions,
            #webOptions: webOptions,
            #mOptions: mOptions,
            #wOptions: wOptions,
          },
        ),
        returnValue: _i60.Future<bool>.value(false),
      ) as _i60.Future<bool>);
  @override
  _i60.Future<void> delete({
    required String? key,
    _i58.IOSOptions? iOptions,
    _i58.AndroidOptions? aOptions,
    _i58.LinuxOptions? lOptions,
    _i58.WebOptions? webOptions,
    _i58.MacOsOptions? mOptions,
    _i58.WindowsOptions? wOptions,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #delete,
          [],
          {
            #key: key,
            #iOptions: iOptions,
            #aOptions: aOptions,
            #lOptions: lOptions,
            #webOptions: webOptions,
            #mOptions: mOptions,
            #wOptions: wOptions,
          },
        ),
        returnValue: _i60.Future<void>.value(),
        returnValueForMissingStub: _i60.Future<void>.value(),
      ) as _i60.Future<void>);
  @override
  _i60.Future<Map<String, String>> readAll({
    _i58.IOSOptions? iOptions,
    _i58.AndroidOptions? aOptions,
    _i58.LinuxOptions? lOptions,
    _i58.WebOptions? webOptions,
    _i58.MacOsOptions? mOptions,
    _i58.WindowsOptions? wOptions,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #readAll,
          [],
          {
            #iOptions: iOptions,
            #aOptions: aOptions,
            #lOptions: lOptions,
            #webOptions: webOptions,
            #mOptions: mOptions,
            #wOptions: wOptions,
          },
        ),
        returnValue: _i60.Future<Map<String, String>>.value(<String, String>{}),
      ) as _i60.Future<Map<String, String>>);
  @override
  _i60.Future<void> deleteAll({
    _i58.IOSOptions? iOptions,
    _i58.AndroidOptions? aOptions,
    _i58.LinuxOptions? lOptions,
    _i58.WebOptions? webOptions,
    _i58.MacOsOptions? mOptions,
    _i58.WindowsOptions? wOptions,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteAll,
          [],
          {
            #iOptions: iOptions,
            #aOptions: aOptions,
            #lOptions: lOptions,
            #webOptions: webOptions,
            #mOptions: mOptions,
            #wOptions: wOptions,
          },
        ),
        returnValue: _i60.Future<void>.value(),
        returnValueForMissingStub: _i60.Future<void>.value(),
      ) as _i60.Future<void>);
}

/// A class which mocks [LocalStorageService].
///
/// See the documentation for Mockito's code generation for more information.
class MockLocalStorageService extends _i1.Mock
    implements _i59.LocalStorageService {
  MockLocalStorageService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i60.Future<String?> get getUserToken => (super.noSuchMethod(
        Invocation.getter(#getUserToken),
        returnValue: _i60.Future<String?>.value(),
      ) as _i60.Future<String?>);
  @override
  _i60.Future<String?> get getUserCountry => (super.noSuchMethod(
        Invocation.getter(#getUserCountry),
        returnValue: _i60.Future<String?>.value(),
      ) as _i60.Future<String?>);
  @override
  _i60.Future<String?> get getUserCurrency => (super.noSuchMethod(
        Invocation.getter(#getUserCurrency),
        returnValue: _i60.Future<String?>.value(),
      ) as _i60.Future<String?>);
  @override
  _i60.Future<String?> get getUserUUID => (super.noSuchMethod(
        Invocation.getter(#getUserUUID),
        returnValue: _i60.Future<String?>.value(),
      ) as _i60.Future<String?>);
  @override
  _i60.Future<String?> get getUserPhone => (super.noSuchMethod(
        Invocation.getter(#getUserPhone),
        returnValue: _i60.Future<String?>.value(),
      ) as _i60.Future<String?>);
  @override
  _i60.Future<String?> get getUserPinCode => (super.noSuchMethod(
        Invocation.getter(#getUserPinCode),
        returnValue: _i60.Future<String?>.value(),
      ) as _i60.Future<String?>);
  @override
  _i60.Future<String?> get getUserId => (super.noSuchMethod(
        Invocation.getter(#getUserId),
        returnValue: _i60.Future<String?>.value(),
      ) as _i60.Future<String?>);
  @override
  bool get getUserTouchId => (super.noSuchMethod(
        Invocation.getter(#getUserTouchId),
        returnValue: false,
      ) as bool);
  @override
  bool get getUserFaceId => (super.noSuchMethod(
        Invocation.getter(#getUserFaceId),
        returnValue: false,
      ) as bool);
  @override
  _i60.Future<_i59.LocalStorageService> init() => (super.noSuchMethod(
        Invocation.method(
          #init,
          [],
        ),
        returnValue: _i60.Future<_i59.LocalStorageService>.value(
            _FakeLocalStorageService_67(
          this,
          Invocation.method(
            #init,
            [],
          ),
        )),
      ) as _i60.Future<_i59.LocalStorageService>);
  @override
  String readString(
    String? key, {
    String? defaultValue = r'',
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #readString,
          [key],
          {#defaultValue: defaultValue},
        ),
        returnValue: '',
      ) as String);
  @override
  bool readBool(
    String? key, {
    bool? defaultValue = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #readBool,
          [key],
          {#defaultValue: defaultValue},
        ),
        returnValue: false,
      ) as bool);
  @override
  _i60.Future<void> writeKey(
    String? key,
    dynamic value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #writeKey,
          [
            key,
            value,
          ],
        ),
        returnValue: _i60.Future<void>.value(),
        returnValueForMissingStub: _i60.Future<void>.value(),
      ) as _i60.Future<void>);
  @override
  _i60.Future<void> writeSecureKey(
    String? key,
    String? value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #writeSecureKey,
          [
            key,
            value,
          ],
        ),
        returnValue: _i60.Future<void>.value(),
        returnValueForMissingStub: _i60.Future<void>.value(),
      ) as _i60.Future<void>);
  @override
  _i60.Future<void> removeSession() => (super.noSuchMethod(
        Invocation.method(
          #removeSession,
          [],
        ),
        returnValue: _i60.Future<void>.value(),
        returnValueForMissingStub: _i60.Future<void>.value(),
      ) as _i60.Future<void>);
  @override
  _i60.Future<String?> readSecureKey(
    String? key, {
    String? defaultValue,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #readSecureKey,
          [key],
          {#defaultValue: defaultValue},
        ),
        returnValue: _i60.Future<String?>.value(),
      ) as _i60.Future<String?>);
  @override
  _i60.Future<void> removeKey(String? key) => (super.noSuchMethod(
        Invocation.method(
          #removeKey,
          [key],
        ),
        returnValue: _i60.Future<void>.value(),
        returnValueForMissingStub: _i60.Future<void>.value(),
      ) as _i60.Future<void>);
  @override
  _i60.Future<void> removeAllSecureKeys() => (super.noSuchMethod(
        Invocation.method(
          #removeAllSecureKeys,
          [],
        ),
        returnValue: _i60.Future<void>.value(),
        returnValueForMissingStub: _i60.Future<void>.value(),
      ) as _i60.Future<void>);
  @override
  _i60.Future<void> removeAllKeysInSharedPreferences() => (super.noSuchMethod(
        Invocation.method(
          #removeAllKeysInSharedPreferences,
          [],
        ),
        returnValue: _i60.Future<void>.value(),
        returnValueForMissingStub: _i60.Future<void>.value(),
      ) as _i60.Future<void>);
  @override
  _i60.Future<bool> containKey(String? key) => (super.noSuchMethod(
        Invocation.method(
          #containKey,
          [key],
        ),
        returnValue: _i60.Future<bool>.value(false),
      ) as _i60.Future<bool>);
  @override
  _i60.Future<bool> containSecureKey(String? key) => (super.noSuchMethod(
        Invocation.method(
          #containSecureKey,
          [key],
        ),
        returnValue: _i60.Future<bool>.value(false),
      ) as _i60.Future<bool>);
  @override
  _i60.Future<void> setUserToken(String? token) => (super.noSuchMethod(
        Invocation.method(
          #setUserToken,
          [token],
        ),
        returnValue: _i60.Future<void>.value(),
        returnValueForMissingStub: _i60.Future<void>.value(),
      ) as _i60.Future<void>);
  @override
  _i60.Future<void> setUserUUID(String? uuid) => (super.noSuchMethod(
        Invocation.method(
          #setUserUUID,
          [uuid],
        ),
        returnValue: _i60.Future<void>.value(),
        returnValueForMissingStub: _i60.Future<void>.value(),
      ) as _i60.Future<void>);
  @override
  _i60.Future<void> setUserPhone(String? phone) => (super.noSuchMethod(
        Invocation.method(
          #setUserPhone,
          [phone],
        ),
        returnValue: _i60.Future<void>.value(),
        returnValueForMissingStub: _i60.Future<void>.value(),
      ) as _i60.Future<void>);
  @override
  _i60.Future<void> setUserPinCode(String? pinCode) => (super.noSuchMethod(
        Invocation.method(
          #setUserPinCode,
          [pinCode],
        ),
        returnValue: _i60.Future<void>.value(),
        returnValueForMissingStub: _i60.Future<void>.value(),
      ) as _i60.Future<void>);
  @override
  _i60.Future<void> setTouchIdValue({required bool? touchId}) =>
      (super.noSuchMethod(
        Invocation.method(
          #setTouchIdValue,
          [],
          {#touchId: touchId},
        ),
        returnValue: _i60.Future<void>.value(),
        returnValueForMissingStub: _i60.Future<void>.value(),
      ) as _i60.Future<void>);
  @override
  _i60.Future<void> setUsername(String? name) => (super.noSuchMethod(
        Invocation.method(
          #setUsername,
          [name],
        ),
        returnValue: _i60.Future<void>.value(),
        returnValueForMissingStub: _i60.Future<void>.value(),
      ) as _i60.Future<void>);
  @override
  _i60.Future<void> setFaceIdValue({required bool? faceId}) =>
      (super.noSuchMethod(
        Invocation.method(
          #setFaceIdValue,
          [],
          {#faceId: faceId},
        ),
        returnValue: _i60.Future<void>.value(),
        returnValueForMissingStub: _i60.Future<void>.value(),
      ) as _i60.Future<void>);
  @override
  _i60.Future<void> setUserCountry({required String? country}) =>
      (super.noSuchMethod(
        Invocation.method(
          #setUserCountry,
          [],
          {#country: country},
        ),
        returnValue: _i60.Future<void>.value(),
        returnValueForMissingStub: _i60.Future<void>.value(),
      ) as _i60.Future<void>);
  @override
  _i60.Future<void> setUserCurrency({required String? currency}) =>
      (super.noSuchMethod(
        Invocation.method(
          #setUserCurrency,
          [],
          {#currency: currency},
        ),
        returnValue: _i60.Future<void>.value(),
        returnValueForMissingStub: _i60.Future<void>.value(),
      ) as _i60.Future<void>);
  @override
  _i60.Future<void> setUserId(String? id) => (super.noSuchMethod(
        Invocation.method(
          #setUserId,
          [id],
        ),
        returnValue: _i60.Future<void>.value(),
        returnValueForMissingStub: _i60.Future<void>.value(),
      ) as _i60.Future<void>);
  @override
  _i60.Future<void> cacheCurrentUser(_i121.LoggedInUser? user) =>
      (super.noSuchMethod(
        Invocation.method(
          #cacheCurrentUser,
          [user],
        ),
        returnValue: _i60.Future<void>.value(),
        returnValueForMissingStub: _i60.Future<void>.value(),
      ) as _i60.Future<void>);
}
