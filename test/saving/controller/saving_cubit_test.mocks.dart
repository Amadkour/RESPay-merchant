// Mocks generated by Mockito 5.3.2 from annotations
// in res_pay/test/saving/controller/saving_cubit_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:dartz/dartz.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:res_pay_merchant/core/errors/failures.dart' as _i6;
import 'package:res_pay_merchant/core/res/utils/parse_model/parent_model.dart' as _i9;
import 'package:res_pay_merchant/features/payment/modules/saving/provider/model/role_model.dart'
    as _i8;
import 'package:res_pay_merchant/features/payment/modules/saving/provider/model/saving_model.dart'
    as _i3;
import 'package:res_pay_merchant/features/payment/modules/saving/provider/respository/role_repository.dart'
    as _i4;
import 'package:res_pay_merchant/features/payment/modules/saving/provider/respository/saving_repository.dart'
    as _i7;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeEither_0<L, R> extends _i1.SmartFake implements _i2.Either<L, R> {
  _FakeEither_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSavingModel_1 extends _i1.SmartFake implements _i3.SavingModel {
  _FakeSavingModel_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [RoleRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockRoleRepository extends _i1.Mock implements _i4.RoleRepository {
  MockRoleRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get uuid => (super.noSuchMethod(
        Invocation.getter(#uuid),
        returnValue: '',
      ) as String);
  @override
  set uuid(String? _uuid) => super.noSuchMethod(
        Invocation.setter(
          #uuid,
          _uuid,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i5.Future<_i2.Either<_i6.Failure, Map<String, dynamic>>> addRoleRepository({
    required double? from,
    required double? to,
    required double? value,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #addRoleRepository,
          [],
          {
            #from: from,
            #to: to,
            #value: value,
          },
        ),
        returnValue:
            _i5.Future<_i2.Either<_i6.Failure, Map<String, dynamic>>>.value(
                _FakeEither_0<_i6.Failure, Map<String, dynamic>>(
          this,
          Invocation.method(
            #addRoleRepository,
            [],
            {
              #from: from,
              #to: to,
              #value: value,
            },
          ),
        )),
      ) as _i5.Future<_i2.Either<_i6.Failure, Map<String, dynamic>>>);
  @override
  _i5.Future<_i2.Either<_i6.Failure, Map<String, dynamic>>>
      deleteRoleRepository({required String? roleUUID}) => (super.noSuchMethod(
            Invocation.method(
              #deleteRoleRepository,
              [],
              {#roleUUID: roleUUID},
            ),
            returnValue:
                _i5.Future<_i2.Either<_i6.Failure, Map<String, dynamic>>>.value(
                    _FakeEither_0<_i6.Failure, Map<String, dynamic>>(
              this,
              Invocation.method(
                #deleteRoleRepository,
                [],
                {#roleUUID: roleUUID},
              ),
            )),
          ) as _i5.Future<_i2.Either<_i6.Failure, Map<String, dynamic>>>);
  @override
  _i5.Future<_i2.Either<_i6.Failure, Map<String, dynamic>>>
      toggleRoleRepository({required String? roleUUID}) => (super.noSuchMethod(
            Invocation.method(
              #toggleRoleRepository,
              [],
              {#roleUUID: roleUUID},
            ),
            returnValue:
                _i5.Future<_i2.Either<_i6.Failure, Map<String, dynamic>>>.value(
                    _FakeEither_0<_i6.Failure, Map<String, dynamic>>(
              this,
              Invocation.method(
                #toggleRoleRepository,
                [],
                {#roleUUID: roleUUID},
              ),
            )),
          ) as _i5.Future<_i2.Either<_i6.Failure, Map<String, dynamic>>>);
  @override
  _i5.Future<_i2.Either<_i6.Failure, Map<String, dynamic>>>
      updateRoleRepository({
    required String? roleUUID,
    required double? to,
    required double? value,
    required double? from,
    required int? isActive,
  }) =>
          (super.noSuchMethod(
            Invocation.method(
              #updateRoleRepository,
              [],
              {
                #roleUUID: roleUUID,
                #to: to,
                #value: value,
                #from: from,
                #isActive: isActive,
              },
            ),
            returnValue:
                _i5.Future<_i2.Either<_i6.Failure, Map<String, dynamic>>>.value(
                    _FakeEither_0<_i6.Failure, Map<String, dynamic>>(
              this,
              Invocation.method(
                #updateRoleRepository,
                [],
                {
                  #roleUUID: roleUUID,
                  #to: to,
                  #value: value,
                  #from: from,
                  #isActive: isActive,
                },
              ),
            )),
          ) as _i5.Future<_i2.Either<_i6.Failure, Map<String, dynamic>>>);
}

/// A class which mocks [SavingRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockSavingRepository extends _i1.Mock implements _i7.SavingRepository {
  MockSavingRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.SavingModel get data => (super.noSuchMethod(
        Invocation.getter(#data),
        returnValue: _FakeSavingModel_1(
          this,
          Invocation.getter(#data),
        ),
      ) as _i3.SavingModel);
  @override
  set data(_i3.SavingModel? _data) => super.noSuchMethod(
        Invocation.setter(
          #data,
          _data,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i5.Future<List<_i8.RoleModel>> getRoles() => (super.noSuchMethod(
        Invocation.method(
          #getRoles,
          [],
        ),
        returnValue: _i5.Future<List<_i8.RoleModel>>.value(<_i8.RoleModel>[]),
      ) as _i5.Future<List<_i8.RoleModel>>);
  @override
  _i5.Future<_i2.Either<_i6.Failure, _i9.ParentModel>>
      getSavingModelsRepository() => (super.noSuchMethod(
            Invocation.method(
              #getSavingModelsRepository,
              [],
            ),
            returnValue:
                _i5.Future<_i2.Either<_i6.Failure, _i9.ParentModel>>.value(
                    _FakeEither_0<_i6.Failure, _i9.ParentModel>(
              this,
              Invocation.method(
                #getSavingModelsRepository,
                [],
              ),
            )),
          ) as _i5.Future<_i2.Either<_i6.Failure, _i9.ParentModel>>);
  @override
  _i5.Future<_i2.Either<_i6.Failure, Map<String, dynamic>>> addMoneyRepository(
          double? amount) =>
      (super.noSuchMethod(
        Invocation.method(
          #addMoneyRepository,
          [amount],
        ),
        returnValue:
            _i5.Future<_i2.Either<_i6.Failure, Map<String, dynamic>>>.value(
                _FakeEither_0<_i6.Failure, Map<String, dynamic>>(
          this,
          Invocation.method(
            #addMoneyRepository,
            [amount],
          ),
        )),
      ) as _i5.Future<_i2.Either<_i6.Failure, Map<String, dynamic>>>);
  @override
  _i5.Future<_i2.Either<_i6.Failure, Map<String, dynamic>>> withdraw(
          double? amount) =>
      (super.noSuchMethod(
        Invocation.method(
          #withdraw,
          [amount],
        ),
        returnValue:
            _i5.Future<_i2.Either<_i6.Failure, Map<String, dynamic>>>.value(
                _FakeEither_0<_i6.Failure, Map<String, dynamic>>(
          this,
          Invocation.method(
            #withdraw,
            [amount],
          ),
        )),
      ) as _i5.Future<_i2.Either<_i6.Failure, Map<String, dynamic>>>);
  @override
  _i5.Future<_i2.Either<_i6.Failure, Map<String, dynamic>>>
      toggleSavingRepository() => (super.noSuchMethod(
            Invocation.method(
              #toggleSavingRepository,
              [],
            ),
            returnValue:
                _i5.Future<_i2.Either<_i6.Failure, Map<String, dynamic>>>.value(
                    _FakeEither_0<_i6.Failure, Map<String, dynamic>>(
              this,
              Invocation.method(
                #toggleSavingRepository,
                [],
              ),
            )),
          ) as _i5.Future<_i2.Either<_i6.Failure, Map<String, dynamic>>>);
}
