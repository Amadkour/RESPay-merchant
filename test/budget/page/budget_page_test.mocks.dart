// Mocks generated by Mockito 5.3.2 from annotations
// in res_pay/test/budget/page/budget_page_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i7;

import 'package:bloc/bloc.dart' as _i9;
import 'package:flutter/material.dart' as _i4;
import 'package:mockito/mockito.dart' as _i1;
import 'package:res_pay_merchant/features/payment/modules/budget/controller/budget_cubit.dart'
    as _i5;
import 'package:res_pay_merchant/features/payment/modules/budget/provider/model/budget_category_model.dart'
    as _i8;
import 'package:res_pay_merchant/features/payment/modules/budget/provider/model/budget_list_model.dart'
    as _i2;
import 'package:res_pay_merchant/features/payment/modules/budget/provider/model/category_type.dart'
    as _i6;
import 'package:res_pay_merchant/features/payment/modules/budget/provider/model/create_budget_category_input.dart'
    as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeBudgetListModel_0 extends _i1.SmartFake
    implements _i2.BudgetListModel {
  _FakeBudgetListModel_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeCreateBudgetCategoryInput_1 extends _i1.SmartFake
    implements _i3.CreateBudgetCategoryInput {
  _FakeCreateBudgetCategoryInput_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeTextEditingController_2 extends _i1.SmartFake
    implements _i4.TextEditingController {
  _FakeTextEditingController_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeBudgetState_3 extends _i1.SmartFake implements _i5.BudgetState {
  _FakeBudgetState_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [BudgetCubit].
///
/// See the documentation for Mockito's code generation for more information.
class MockBudgetCubit extends _i1.Mock implements _i5.BudgetCubit {
  MockBudgetCubit() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.BudgetListModel get model => (super.noSuchMethod(
        Invocation.getter(#model),
        returnValue: _FakeBudgetListModel_0(
          this,
          Invocation.getter(#model),
        ),
      ) as _i2.BudgetListModel);
  @override
  set model(_i2.BudgetListModel? _model) => super.noSuchMethod(
        Invocation.setter(
          #model,
          _model,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i3.CreateBudgetCategoryInput get input => (super.noSuchMethod(
        Invocation.getter(#input),
        returnValue: _FakeCreateBudgetCategoryInput_1(
          this,
          Invocation.getter(#input),
        ),
      ) as _i3.CreateBudgetCategoryInput);
  @override
  set input(_i3.CreateBudgetCategoryInput? _input) => super.noSuchMethod(
        Invocation.setter(
          #input,
          _input,
        ),
        returnValueForMissingStub: null,
      );
  @override
  String get duration => (super.noSuchMethod(
        Invocation.getter(#duration),
        returnValue: '',
      ) as String);
  @override
  set duration(String? _duration) => super.noSuchMethod(
        Invocation.setter(
          #duration,
          _duration,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set category(_i6.CategoryTypeModel? _category) => super.noSuchMethod(
        Invocation.setter(
          #category,
          _category,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i4.TextEditingController get amountController => (super.noSuchMethod(
        Invocation.getter(#amountController),
        returnValue: _FakeTextEditingController_2(
          this,
          Invocation.getter(#amountController),
        ),
      ) as _i4.TextEditingController);
  @override
  bool get enableButton => (super.noSuchMethod(
        Invocation.getter(#enableButton),
        returnValue: false,
      ) as bool);
  @override
  _i5.BudgetState get state => (super.noSuchMethod(
        Invocation.getter(#state),
        returnValue: _FakeBudgetState_3(
          this,
          Invocation.getter(#state),
        ),
      ) as _i5.BudgetState);
  @override
  _i7.Stream<_i5.BudgetState> get stream => (super.noSuchMethod(
        Invocation.getter(#stream),
        returnValue: _i7.Stream<_i5.BudgetState>.empty(),
      ) as _i7.Stream<_i5.BudgetState>);
  @override
  bool get isClosed => (super.noSuchMethod(
        Invocation.getter(#isClosed),
        returnValue: false,
      ) as bool);
  @override
  _i7.Future<bool> loadBudget() => (super.noSuchMethod(
        Invocation.method(
          #loadBudget,
          [],
        ),
        returnValue: _i7.Future<bool>.value(false),
      ) as _i7.Future<bool>);
  @override
  void changeDuration(String? duration) => super.noSuchMethod(
        Invocation.method(
          #changeDuration,
          [duration],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void changeCategory(_i6.CategoryTypeModel? category) => super.noSuchMethod(
        Invocation.method(
          #changeCategory,
          [category],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i7.Future<bool> addCategory() => (super.noSuchMethod(
        Invocation.method(
          #addCategory,
          [],
        ),
        returnValue: _i7.Future<bool>.value(false),
      ) as _i7.Future<bool>);
  @override
  void initCategoryForEdit(_i8.BudgetCategoryModel? category) =>
      super.noSuchMethod(
        Invocation.method(
          #initCategoryForEdit,
          [category],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i7.Future<bool> updateCategory() => (super.noSuchMethod(
        Invocation.method(
          #updateCategory,
          [],
        ),
        returnValue: _i7.Future<bool>.value(false),
      ) as _i7.Future<bool>);
  @override
  _i7.Future<bool> delete(String? uuid) => (super.noSuchMethod(
        Invocation.method(
          #delete,
          [uuid],
        ),
        returnValue: _i7.Future<bool>.value(false),
      ) as _i7.Future<bool>);
  @override
  void removeCategory(int? index) => super.noSuchMethod(
        Invocation.method(
          #removeCategory,
          [index],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i7.Future<void> toggleCategory(String? uuid) => (super.noSuchMethod(
        Invocation.method(
          #toggleCategory,
          [uuid],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);
  @override
  void resetData() => super.noSuchMethod(
        Invocation.method(
          #resetData,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void emit(_i5.BudgetState? state) => super.noSuchMethod(
        Invocation.method(
          #emit,
          [state],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void onChange(_i9.Change<_i5.BudgetState>? change) => super.noSuchMethod(
        Invocation.method(
          #onChange,
          [change],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void addError(
    Object? error, [
    StackTrace? stackTrace,
  ]) =>
      super.noSuchMethod(
        Invocation.method(
          #addError,
          [
            error,
            stackTrace,
          ],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void onError(
    Object? error,
    StackTrace? stackTrace,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #onError,
          [
            error,
            stackTrace,
          ],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i7.Future<void> close() => (super.noSuchMethod(
        Invocation.method(
          #close,
          [],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);
}
