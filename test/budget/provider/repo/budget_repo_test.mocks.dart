// Mocks generated by Mockito 5.3.2 from annotations
// in res_pay/test/budget/provider/repo/budget_repo_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:dartz/dartz.dart' as _i2;
import 'package:dio/dio.dart' as _i6;
import 'package:mockito/mockito.dart' as _i1;
import 'package:res_pay_merchant/core/errors/failures.dart' as _i5;
import 'package:res_pay_merchant/features/payment/modules/budget/provider/api/remote_budget_api.dart'
    as _i3;
import 'package:res_pay_merchant/features/payment/modules/budget/provider/model/create_budget_category_input.dart'
    as _i7;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeEither_0<L, R> extends _i1.SmartFake implements _i2.Either<L, R> {
  _FakeEither_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeOption_1<A> extends _i1.SmartFake implements _i2.Option<A> {
  _FakeOption_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [RemoteBudgetApi].
///
/// See the documentation for Mockito's code generation for more information.
class MockRemoteBudgetApi extends _i1.Mock implements _i3.RemoteBudgetApi {
  MockRemoteBudgetApi() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Either<_i5.Failure, _i6.Response<Map<String, dynamic>>>>
      getCategories({String? period}) => (super.noSuchMethod(
            Invocation.method(
              #getCategories,
              [],
              {#period: period},
            ),
            returnValue: _i4.Future<
                    _i2.Either<_i5.Failure,
                        _i6.Response<Map<String, dynamic>>>>.value(
                _FakeEither_0<_i5.Failure, _i6.Response<Map<String, dynamic>>>(
              this,
              Invocation.method(
                #getCategories,
                [],
                {#period: period},
              ),
            )),
          ) as _i4.Future<
              _i2.Either<_i5.Failure, _i6.Response<Map<String, dynamic>>>>);
  @override
  _i4.Future<_i2.Either<_i5.Failure, _i6.Response<Map<String, dynamic>>>>
      create(_i7.CreateBudgetCategoryInput? input) => (super.noSuchMethod(
            Invocation.method(
              #create,
              [input],
            ),
            returnValue: _i4.Future<
                    _i2.Either<_i5.Failure,
                        _i6.Response<Map<String, dynamic>>>>.value(
                _FakeEither_0<_i5.Failure, _i6.Response<Map<String, dynamic>>>(
              this,
              Invocation.method(
                #create,
                [input],
              ),
            )),
          ) as _i4.Future<
              _i2.Either<_i5.Failure, _i6.Response<Map<String, dynamic>>>>);
  @override
  _i4.Future<_i2.Option<_i5.Failure>> delete(String? uuid) =>
      (super.noSuchMethod(
        Invocation.method(
          #delete,
          [uuid],
        ),
        returnValue: _i4.Future<_i2.Option<_i5.Failure>>.value(
            _FakeOption_1<_i5.Failure>(
          this,
          Invocation.method(
            #delete,
            [uuid],
          ),
        )),
      ) as _i4.Future<_i2.Option<_i5.Failure>>);
  @override
  _i4.Future<_i2.Either<_i5.Failure, _i6.Response<Map<String, dynamic>>>>
      update(_i7.CreateBudgetCategoryInput? input) => (super.noSuchMethod(
            Invocation.method(
              #update,
              [input],
            ),
            returnValue: _i4.Future<
                    _i2.Either<_i5.Failure,
                        _i6.Response<Map<String, dynamic>>>>.value(
                _FakeEither_0<_i5.Failure, _i6.Response<Map<String, dynamic>>>(
              this,
              Invocation.method(
                #update,
                [input],
              ),
            )),
          ) as _i4.Future<
              _i2.Either<_i5.Failure, _i6.Response<Map<String, dynamic>>>>);
  @override
  _i4.Future<_i2.Option<_i5.Failure>> changeStatus(String? uuid) =>
      (super.noSuchMethod(
        Invocation.method(
          #changeStatus,
          [uuid],
        ),
        returnValue: _i4.Future<_i2.Option<_i5.Failure>>.value(
            _FakeOption_1<_i5.Failure>(
          this,
          Invocation.method(
            #changeStatus,
            [uuid],
          ),
        )),
      ) as _i4.Future<_i2.Option<_i5.Failure>>);
}
