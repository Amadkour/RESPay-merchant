// Mocks generated by Mockito 5.3.2 from annotations
// in res_pay/test/referrals/view/referrals_ui_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i6;

import 'package:bloc/bloc.dart' as _i7;
import 'package:flutter/material.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;
import 'package:res_pay_merchant/features/dashboard/modules/more/modules/referral/controller/referral_cubit.dart'
    as _i4;
import 'package:res_pay_merchant/features/dashboard/modules/more/modules/referral/provider/model/referrals.dart'
    as _i5;
import 'package:res_pay_merchant/features/dashboard/modules/more/modules/referral/provider/repo/remote_api_repo.dart'
    as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeRemoteReferralApiRepo_0 extends _i1.SmartFake
    implements _i2.RemoteReferralApiRepo {
  _FakeRemoteReferralApiRepo_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeTextEditingController_1 extends _i1.SmartFake
    implements _i3.TextEditingController {
  _FakeTextEditingController_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeReferralState_2 extends _i1.SmartFake implements _i4.ReferralState {
  _FakeReferralState_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [ReferralCubit].
///
/// See the documentation for Mockito's code generation for more information.
class MockReferralCubit extends _i1.Mock implements _i4.ReferralCubit {
  MockReferralCubit() {
    _i1.throwOnMissingStub(this);
  }

  @override
  double get sunOfEarned => (super.noSuchMethod(
        Invocation.getter(#sunOfEarned),
        returnValue: 0.0,
      ) as double);
  @override
  set sunOfEarned(double? _sunOfEarned) => super.noSuchMethod(
        Invocation.setter(
          #sunOfEarned,
          _sunOfEarned,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i2.RemoteReferralApiRepo get referralApiRepo => (super.noSuchMethod(
        Invocation.getter(#referralApiRepo),
        returnValue: _FakeRemoteReferralApiRepo_0(
          this,
          Invocation.getter(#referralApiRepo),
        ),
      ) as _i2.RemoteReferralApiRepo);
  @override
  set referralApiRepo(_i2.RemoteReferralApiRepo? _referralApiRepo) =>
      super.noSuchMethod(
        Invocation.setter(
          #referralApiRepo,
          _referralApiRepo,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set referral(_i5.ReferralModel? _referral) => super.noSuchMethod(
        Invocation.setter(
          #referral,
          _referral,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i3.TextEditingController get textEditingController => (super.noSuchMethod(
        Invocation.getter(#textEditingController),
        returnValue: _FakeTextEditingController_1(
          this,
          Invocation.getter(#textEditingController),
        ),
      ) as _i3.TextEditingController);
  @override
  List<Map<String, dynamic>> get contacts => (super.noSuchMethod(
        Invocation.getter(#contacts),
        returnValue: <Map<String, dynamic>>[],
      ) as List<Map<String, dynamic>>);
  @override
  set contacts(List<Map<String, dynamic>>? _contacts) => super.noSuchMethod(
        Invocation.setter(
          #contacts,
          _contacts,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i4.ReferralState get state => (super.noSuchMethod(
        Invocation.getter(#state),
        returnValue: _FakeReferralState_2(
          this,
          Invocation.getter(#state),
        ),
      ) as _i4.ReferralState);
  @override
  _i6.Stream<_i4.ReferralState> get stream => (super.noSuchMethod(
        Invocation.getter(#stream),
        returnValue: _i6.Stream<_i4.ReferralState>.empty(),
      ) as _i6.Stream<_i4.ReferralState>);
  @override
  bool get isClosed => (super.noSuchMethod(
        Invocation.getter(#isClosed),
        returnValue: false,
      ) as bool);
  @override
  void inti() => super.noSuchMethod(
        Invocation.method(
          #inti,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i6.Future<void> getReferralData() => (super.noSuchMethod(
        Invocation.method(
          #getReferralData,
          [],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);
  @override
  _i6.Future<void> copy() => (super.noSuchMethod(
        Invocation.method(
          #copy,
          [],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);
  @override
  _i6.Future<void> paste() => (super.noSuchMethod(
        Invocation.method(
          #paste,
          [],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);
  @override
  _i6.Future<void> launchCurrentUrl(String? url) => (super.noSuchMethod(
        Invocation.method(
          #launchCurrentUrl,
          [url],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);
  @override
  void emit(_i4.ReferralState? state) => super.noSuchMethod(
        Invocation.method(
          #emit,
          [state],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void onChange(_i7.Change<_i4.ReferralState>? change) => super.noSuchMethod(
        Invocation.method(
          #onChange,
          [change],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void addError(
    Object? error, [
    StackTrace? stackTrace,
  ]) =>
      super.noSuchMethod(
        Invocation.method(
          #addError,
          [
            error,
            stackTrace,
          ],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void onError(
    Object? error,
    StackTrace? stackTrace,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #onError,
          [
            error,
            stackTrace,
          ],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i6.Future<void> close() => (super.noSuchMethod(
        Invocation.method(
          #close,
          [],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);
}
