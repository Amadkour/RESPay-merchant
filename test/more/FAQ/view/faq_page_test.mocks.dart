// Mocks generated by Mockito 5.3.2 from annotations
// in res_pay/test/more/FAQ/view/faq_page_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:bloc/bloc.dart' as _i6;
import 'package:flutter/material.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:res_pay_merchant/features/dashboard/modules/more/modules/FAQs/controllers/faq_cubit.dart'
    as _i4;
import 'package:res_pay_merchant/features/dashboard/modules/more/modules/FAQs/provider/model/faq_model.dart'
    as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeTextEditingController_0 extends _i1.SmartFake
    implements _i2.TextEditingController {
  _FakeTextEditingController_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeFaqModel_1 extends _i1.SmartFake implements _i3.FaqModel {
  _FakeFaqModel_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeFaqState_2 extends _i1.SmartFake implements _i4.FaqState {
  _FakeFaqState_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [FaqCubit].
///
/// See the documentation for Mockito's code generation for more information.
class MockFaqCubit extends _i1.Mock implements _i4.FaqCubit {
  MockFaqCubit() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.TextEditingController get searchBarController => (super.noSuchMethod(
        Invocation.getter(#searchBarController),
        returnValue: _FakeTextEditingController_0(
          this,
          Invocation.getter(#searchBarController),
        ),
      ) as _i2.TextEditingController);
  @override
  set searchBarController(_i2.TextEditingController? _searchBarController) =>
      super.noSuchMethod(
        Invocation.setter(
          #searchBarController,
          _searchBarController,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set searchText(String? _searchText) => super.noSuchMethod(
        Invocation.setter(
          #searchText,
          _searchText,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set pageTitle(String? _pageTitle) => super.noSuchMethod(
        Invocation.setter(
          #pageTitle,
          _pageTitle,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i3.FaqModel get faqData => (super.noSuchMethod(
        Invocation.getter(#faqData),
        returnValue: _FakeFaqModel_1(
          this,
          Invocation.getter(#faqData),
        ),
      ) as _i3.FaqModel);
  @override
  set faqData(_i3.FaqModel? _faqData) => super.noSuchMethod(
        Invocation.setter(
          #faqData,
          _faqData,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set userName(String? _userName) => super.noSuchMethod(
        Invocation.setter(
          #userName,
          _userName,
        ),
        returnValueForMissingStub: null,
      );
  @override
  String get query => (super.noSuchMethod(
        Invocation.getter(#query),
        returnValue: '',
      ) as String);
  @override
  set query(String? _query) => super.noSuchMethod(
        Invocation.setter(
          #query,
          _query,
        ),
        returnValueForMissingStub: null,
      );
  @override
  List<_i3.Faqs> get faqFilteredList => (super.noSuchMethod(
        Invocation.getter(#faqFilteredList),
        returnValue: <_i3.Faqs>[],
      ) as List<_i3.Faqs>);
  @override
  _i4.FaqState get state => (super.noSuchMethod(
        Invocation.getter(#state),
        returnValue: _FakeFaqState_2(
          this,
          Invocation.getter(#state),
        ),
      ) as _i4.FaqState);
  @override
  _i5.Stream<_i4.FaqState> get stream => (super.noSuchMethod(
        Invocation.getter(#stream),
        returnValue: _i5.Stream<_i4.FaqState>.empty(),
      ) as _i5.Stream<_i4.FaqState>);
  @override
  bool get isClosed => (super.noSuchMethod(
        Invocation.getter(#isClosed),
        returnValue: false,
      ) as bool);
  @override
  void resetSearchBar() => super.noSuchMethod(
        Invocation.method(
          #resetSearchBar,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i5.Future<void> onInit() => (super.noSuchMethod(
        Invocation.method(
          #onInit,
          [],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
  @override
  _i5.Future<void> onClick(int? index) => (super.noSuchMethod(
        Invocation.method(
          #onClick,
          [index],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
  @override
  void onChangeSearch(String? value) => super.noSuchMethod(
        Invocation.method(
          #onChangeSearch,
          [value],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void emit(_i4.FaqState? state) => super.noSuchMethod(
        Invocation.method(
          #emit,
          [state],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void onChange(_i6.Change<_i4.FaqState>? change) => super.noSuchMethod(
        Invocation.method(
          #onChange,
          [change],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void addError(
    Object? error, [
    StackTrace? stackTrace,
  ]) =>
      super.noSuchMethod(
        Invocation.method(
          #addError,
          [
            error,
            stackTrace,
          ],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void onError(
    Object? error,
    StackTrace? stackTrace,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #onError,
          [
            error,
            stackTrace,
          ],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i5.Future<void> close() => (super.noSuchMethod(
        Invocation.method(
          #close,
          [],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
}
