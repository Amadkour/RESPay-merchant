// Mocks generated by Mockito 5.3.2 from annotations
// in res_pay/test/more/profile/view/profile_ui_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i7;
import 'dart:io' as _i5;

import 'package:bloc/bloc.dart' as _i8;
import 'package:flutter/cupertino.dart' as _i1;
import 'package:mockito/mockito.dart' as _i2;
import 'package:res_pay_merchant/features/dashboard/modules/more/modules/profile/controller/profile_cubit.dart'
    as _i3;
import 'package:res_pay_merchant/features/dashboard/modules/more/modules/profile/provider/model/profile_model.dart'
    as _i6;
import 'package:res_pay_merchant/features/dashboard/modules/more/modules/profile/provider/repository/profile_repository.dart'
    as _i4;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeGlobalKey_0<T extends _i1.State<_i1.StatefulWidget>>
    extends _i2.SmartFake implements _i1.GlobalKey<T> {
  _FakeGlobalKey_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeTextEditingController_1 extends _i2.SmartFake
    implements _i1.TextEditingController {
  _FakeTextEditingController_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeFocusNode_2 extends _i2.SmartFake implements _i1.FocusNode {
  _FakeFocusNode_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );

  @override
  String toString({_i1.DiagnosticLevel? minLevel = _i1.DiagnosticLevel.info}) =>
      super.toString();
}

class _FakeProfileState_3 extends _i2.SmartFake implements _i3.ProfileState {
  _FakeProfileState_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [ProfileCubit].
///
/// See the documentation for Mockito's code generation for more information.
class MockProfileCubit extends _i2.Mock implements _i3.ProfileCubit {
  MockProfileCubit() {
    _i2.throwOnMissingStub(this);
  }

  @override
  set profileRepository(_i4.ProfileRepository? _profileRepository) =>
      super.noSuchMethod(
        Invocation.setter(
          #profileRepository,
          _profileRepository,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i1.GlobalKey<_i1.FormState> get profileValidationFormKey =>
      (super.noSuchMethod(
        Invocation.getter(#profileValidationFormKey),
        returnValue: _FakeGlobalKey_0<_i1.FormState>(
          this,
          Invocation.getter(#profileValidationFormKey),
        ),
      ) as _i1.GlobalKey<_i1.FormState>);
  @override
  set image(_i5.File? _image) => super.noSuchMethod(
        Invocation.setter(
          #image,
          _image,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i1.TextEditingController get fullNameController => (super.noSuchMethod(
        Invocation.getter(#fullNameController),
        returnValue: _FakeTextEditingController_1(
          this,
          Invocation.getter(#fullNameController),
        ),
      ) as _i1.TextEditingController);
  @override
  _i1.TextEditingController get idNumberController => (super.noSuchMethod(
        Invocation.getter(#idNumberController),
        returnValue: _FakeTextEditingController_1(
          this,
          Invocation.getter(#idNumberController),
        ),
      ) as _i1.TextEditingController);
  @override
  _i1.TextEditingController get birthDateController => (super.noSuchMethod(
        Invocation.getter(#birthDateController),
        returnValue: _FakeTextEditingController_1(
          this,
          Invocation.getter(#birthDateController),
        ),
      ) as _i1.TextEditingController);
  @override
  _i1.TextEditingController get phoneNumberController => (super.noSuchMethod(
        Invocation.getter(#phoneNumberController),
        returnValue: _FakeTextEditingController_1(
          this,
          Invocation.getter(#phoneNumberController),
        ),
      ) as _i1.TextEditingController);
  @override
  _i1.TextEditingController get emailController => (super.noSuchMethod(
        Invocation.getter(#emailController),
        returnValue: _FakeTextEditingController_1(
          this,
          Invocation.getter(#emailController),
        ),
      ) as _i1.TextEditingController);
  @override
  _i1.FocusNode get fullNameFocusNode => (super.noSuchMethod(
        Invocation.getter(#fullNameFocusNode),
        returnValue: _FakeFocusNode_2(
          this,
          Invocation.getter(#fullNameFocusNode),
        ),
      ) as _i1.FocusNode);
  @override
  set fullNameFocusNode(_i1.FocusNode? _fullNameFocusNode) =>
      super.noSuchMethod(
        Invocation.setter(
          #fullNameFocusNode,
          _fullNameFocusNode,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i1.FocusNode get idFocusNode => (super.noSuchMethod(
        Invocation.getter(#idFocusNode),
        returnValue: _FakeFocusNode_2(
          this,
          Invocation.getter(#idFocusNode),
        ),
      ) as _i1.FocusNode);
  @override
  set idFocusNode(_i1.FocusNode? _idFocusNode) => super.noSuchMethod(
        Invocation.setter(
          #idFocusNode,
          _idFocusNode,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i1.FocusNode get phoneFocusNode => (super.noSuchMethod(
        Invocation.getter(#phoneFocusNode),
        returnValue: _FakeFocusNode_2(
          this,
          Invocation.getter(#phoneFocusNode),
        ),
      ) as _i1.FocusNode);
  @override
  set phoneFocusNode(_i1.FocusNode? _phoneFocusNode) => super.noSuchMethod(
        Invocation.setter(
          #phoneFocusNode,
          _phoneFocusNode,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i1.FocusNode get mailFocusNode => (super.noSuchMethod(
        Invocation.getter(#mailFocusNode),
        returnValue: _FakeFocusNode_2(
          this,
          Invocation.getter(#mailFocusNode),
        ),
      ) as _i1.FocusNode);
  @override
  set mailFocusNode(_i1.FocusNode? _mailFocusNode) => super.noSuchMethod(
        Invocation.setter(
          #mailFocusNode,
          _mailFocusNode,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i1.FocusNode get birthFocusNode => (super.noSuchMethod(
        Invocation.getter(#birthFocusNode),
        returnValue: _FakeFocusNode_2(
          this,
          Invocation.getter(#birthFocusNode),
        ),
      ) as _i1.FocusNode);
  @override
  set birthFocusNode(_i1.FocusNode? _birthFocusNode) => super.noSuchMethod(
        Invocation.setter(
          #birthFocusNode,
          _birthFocusNode,
        ),
        returnValueForMissingStub: null,
      );
  @override
  String get fullNameError => (super.noSuchMethod(
        Invocation.getter(#fullNameError),
        returnValue: '',
      ) as String);
  @override
  set fullNameError(String? _fullNameError) => super.noSuchMethod(
        Invocation.setter(
          #fullNameError,
          _fullNameError,
        ),
        returnValueForMissingStub: null,
      );
  @override
  String get idError => (super.noSuchMethod(
        Invocation.getter(#idError),
        returnValue: '',
      ) as String);
  @override
  set idError(String? _idError) => super.noSuchMethod(
        Invocation.setter(
          #idError,
          _idError,
        ),
        returnValueForMissingStub: null,
      );
  @override
  String get phoneError => (super.noSuchMethod(
        Invocation.getter(#phoneError),
        returnValue: '',
      ) as String);
  @override
  set phoneError(String? _phoneError) => super.noSuchMethod(
        Invocation.setter(
          #phoneError,
          _phoneError,
        ),
        returnValueForMissingStub: null,
      );
  @override
  String get mailError => (super.noSuchMethod(
        Invocation.getter(#mailError),
        returnValue: '',
      ) as String);
  @override
  set mailError(String? _mailError) => super.noSuchMethod(
        Invocation.setter(
          #mailError,
          _mailError,
        ),
        returnValueForMissingStub: null,
      );
  @override
  String get birthDateError => (super.noSuchMethod(
        Invocation.getter(#birthDateError),
        returnValue: '',
      ) as String);
  @override
  set birthDateError(String? _birthDateError) => super.noSuchMethod(
        Invocation.setter(
          #birthDateError,
          _birthDateError,
        ),
        returnValueForMissingStub: null,
      );
  @override
  bool get isSaveBottomSheet => (super.noSuchMethod(
        Invocation.getter(#isSaveBottomSheet),
        returnValue: false,
      ) as bool);
  @override
  set isSaveBottomSheet(bool? _isSaveBottomSheet) => super.noSuchMethod(
        Invocation.setter(
          #isSaveBottomSheet,
          _isSaveBottomSheet,
        ),
        returnValueForMissingStub: null,
      );
  @override
  bool get isReadOnly => (super.noSuchMethod(
        Invocation.getter(#isReadOnly),
        returnValue: false,
      ) as bool);
  @override
  set isReadOnly(bool? _isReadOnly) => super.noSuchMethod(
        Invocation.setter(
          #isReadOnly,
          _isReadOnly,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set profileModel(_i6.ProfileModel? _profileModel) => super.noSuchMethod(
        Invocation.setter(
          #profileModel,
          _profileModel,
        ),
        returnValueForMissingStub: null,
      );
  @override
  bool get enableLoginButton => (super.noSuchMethod(
        Invocation.getter(#enableLoginButton),
        returnValue: false,
      ) as bool);
  @override
  _i3.ProfileState get state => (super.noSuchMethod(
        Invocation.getter(#state),
        returnValue: _FakeProfileState_3(
          this,
          Invocation.getter(#state),
        ),
      ) as _i3.ProfileState);
  @override
  _i7.Stream<_i3.ProfileState> get stream => (super.noSuchMethod(
        Invocation.getter(#stream),
        returnValue: _i7.Stream<_i3.ProfileState>.empty(),
      ) as _i7.Stream<_i3.ProfileState>);
  @override
  bool get isClosed => (super.noSuchMethod(
        Invocation.getter(#isClosed),
        returnValue: false,
      ) as bool);
  @override
  void emitStateToUpdateTextFields() => super.noSuchMethod(
        Invocation.method(
          #emitStateToUpdateTextFields,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  bool enableButton(_i1.GlobalKey<_i1.FormState>? profileValidationFormKey) =>
      (super.noSuchMethod(
        Invocation.method(
          #enableButton,
          [profileValidationFormKey],
        ),
        returnValue: false,
      ) as bool);
  @override
  void updateState() => super.noSuchMethod(
        Invocation.method(
          #updateState,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void updateIdNumber() => super.noSuchMethod(
        Invocation.method(
          #updateIdNumber,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void updateEmail() => super.noSuchMethod(
        Invocation.method(
          #updateEmail,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void updatePhone() => super.noSuchMethod(
        Invocation.method(
          #updatePhone,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void resetFormState() => super.noSuchMethod(
        Invocation.method(
          #resetFormState,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void reset() => super.noSuchMethod(
        Invocation.method(
          #reset,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void resetErrors() => super.noSuchMethod(
        Invocation.method(
          #resetErrors,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void goToSaveMode() => super.noSuchMethod(
        Invocation.method(
          #goToSaveMode,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void updateBirthDataState() => super.noSuchMethod(
        Invocation.method(
          #updateBirthDataState,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void cancel() => super.noSuchMethod(
        Invocation.method(
          #cancel,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void goToEditMode() => super.noSuchMethod(
        Invocation.method(
          #goToEditMode,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void setCurrentIsReadOnlyState() => super.noSuchMethod(
        Invocation.method(
          #setCurrentIsReadOnlyState,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i7.Future<void> init() => (super.noSuchMethod(
        Invocation.method(
          #init,
          [],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);
  @override
  _i7.Future<void> saveChanges() => (super.noSuchMethod(
        Invocation.method(
          #saveChanges,
          [],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);
  @override
  _i7.Future<void> updateProfile() => (super.noSuchMethod(
        Invocation.method(
          #updateProfile,
          [],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);
  @override
  _i7.Future<void> executeSomeMethods() => (super.noSuchMethod(
        Invocation.method(
          #executeSomeMethods,
          [],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);
  @override
  _i7.Future<void> showProfile({
    bool? wantShowToast = true,
    String? toastMessage,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #showProfile,
          [],
          {
            #wantShowToast: wantShowToast,
            #toastMessage: toastMessage,
          },
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);
  @override
  _i7.Future<String> onChangeImage() => (super.noSuchMethod(
        Invocation.method(
          #onChangeImage,
          [],
        ),
        returnValue: _i7.Future<String>.value(''),
      ) as _i7.Future<String>);
  @override
  void resetCubitState() => super.noSuchMethod(
        Invocation.method(
          #resetCubitState,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void emit(_i3.ProfileState? state) => super.noSuchMethod(
        Invocation.method(
          #emit,
          [state],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void onChange(_i8.Change<_i3.ProfileState>? change) => super.noSuchMethod(
        Invocation.method(
          #onChange,
          [change],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void addError(
    Object? error, [
    StackTrace? stackTrace,
  ]) =>
      super.noSuchMethod(
        Invocation.method(
          #addError,
          [
            error,
            stackTrace,
          ],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void onError(
    Object? error,
    StackTrace? stackTrace,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #onError,
          [
            error,
            stackTrace,
          ],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i7.Future<void> close() => (super.noSuchMethod(
        Invocation.method(
          #close,
          [],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);
}
