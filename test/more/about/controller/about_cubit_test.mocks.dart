// Mocks generated by Mockito 5.3.2 from annotations
// in res_pay/test/more/about/controller/about_cubit_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:dartz/dartz.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;
import 'package:res_pay_merchant/core/errors/failures.dart' as _i6;
import 'package:res_pay_merchant/core/res/utils/parse_model/parent_model.dart' as _i7;
import 'package:res_pay_merchant/features/authentication/provider/model/terms_privacy_about_model.dart'
    as _i2;
import 'package:res_pay_merchant/features/dashboard/modules/more/modules/terms_and_conditions/provider/repository/terms_privacy_about_repository.dart'
    as _i4;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeTermPrivacyAboutModel_0 extends _i1.SmartFake
    implements _i2.TermPrivacyAboutModel {
  _FakeTermPrivacyAboutModel_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeEither_1<L, R> extends _i1.SmartFake implements _i3.Either<L, R> {
  _FakeEither_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [TermPrivacyAboutRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockTermPrivacyAboutRepository extends _i1.Mock
    implements _i4.TermPrivacyAboutRepository {
  MockTermPrivacyAboutRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.TermPrivacyAboutModel get data => (super.noSuchMethod(
        Invocation.getter(#data),
        returnValue: _FakeTermPrivacyAboutModel_0(
          this,
          Invocation.getter(#data),
        ),
      ) as _i2.TermPrivacyAboutModel);
  @override
  set data(_i2.TermPrivacyAboutModel? _data) => super.noSuchMethod(
        Invocation.setter(
          #data,
          _data,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i5.Future<_i3.Either<_i6.Failure, _i7.ParentModel>>
      getTermsPrivacyAboutRepository({required String? endPoint}) =>
          (super.noSuchMethod(
            Invocation.method(
              #getTermsPrivacyAboutRepository,
              [],
              {#endPoint: endPoint},
            ),
            returnValue:
                _i5.Future<_i3.Either<_i6.Failure, _i7.ParentModel>>.value(
                    _FakeEither_1<_i6.Failure, _i7.ParentModel>(
              this,
              Invocation.method(
                #getTermsPrivacyAboutRepository,
                [],
                {#endPoint: endPoint},
              ),
            )),
          ) as _i5.Future<_i3.Either<_i6.Failure, _i7.ParentModel>>);
}
