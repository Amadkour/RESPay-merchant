// Mocks generated by Mockito 5.3.2 from annotations
// in res_pay/test/more/shipping_location/view/shipping_locations_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i7;

import 'package:bloc/bloc.dart' as _i8;
import 'package:flutter/cupertino.dart' as _i1;
import 'package:mockito/mockito.dart' as _i2;
import 'package:res_pay_merchant/core/errors/failures.dart' as _i14;
import 'package:res_pay_merchant/core/public_module/provider/model/country.dart' as _i9;
import 'package:res_pay_merchant/core/public_module/provider/model/currency.dart'
    as _i10;
import 'package:res_pay_merchant/features/dashboard/modules/more/modules/shipping_location/controller/shipping_location_cubit.dart'
    as _i3;
import 'package:res_pay_merchant/features/dashboard/modules/more/modules/shipping_location/provider/model/address_model.dart'
    as _i6;
import 'package:res_pay_merchant/features/dashboard/modules/more/modules/shipping_location/provider/model/city_model.dart'
    as _i5;
import 'package:res_pay_merchant/features/payment/modules/beneficiary/constants.dart'
    as _i12;
import 'package:res_pay_merchant/features/payment/modules/beneficiary/controller/beneficiary_cubit.dart'
    as _i4;
import 'package:res_pay_merchant/features/payment/modules/transfer/busienss/trasnfer_method_types.dart'
    as _i13;
import 'package:res_pay_merchant/features/payment/modules/transfer/provider/model/beneficary_model.dart'
    as _i11;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeGlobalKey_0<T extends _i1.State<_i1.StatefulWidget>>
    extends _i2.SmartFake implements _i1.GlobalKey<T> {
  _FakeGlobalKey_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeTextEditingController_1 extends _i2.SmartFake
    implements _i1.TextEditingController {
  _FakeTextEditingController_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeFocusNode_2 extends _i2.SmartFake implements _i1.FocusNode {
  _FakeFocusNode_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );

  @override
  String toString({_i1.DiagnosticLevel? minLevel = _i1.DiagnosticLevel.info}) =>
      super.toString();
}

class _FakeShippingLocationState_3 extends _i2.SmartFake
    implements _i3.ShippingLocationState {
  _FakeShippingLocationState_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeBeneficiaryState_4 extends _i2.SmartFake
    implements _i4.BeneficiaryState {
  _FakeBeneficiaryState_4(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [ShippingLocationCubit].
///
/// See the documentation for Mockito's code generation for more information.
class MockShippingLocationCubit extends _i2.Mock
    implements _i3.ShippingLocationCubit {
  MockShippingLocationCubit() {
    _i2.throwOnMissingStub(this);
  }

  @override
  List<_i5.CityModel> get cities => (super.noSuchMethod(
        Invocation.getter(#cities),
        returnValue: <_i5.CityModel>[],
      ) as List<_i5.CityModel>);
  @override
  set cities(List<_i5.CityModel>? _cities) => super.noSuchMethod(
        Invocation.setter(
          #cities,
          _cities,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set currentCity(_i5.CityModel? _currentCity) => super.noSuchMethod(
        Invocation.setter(
          #currentCity,
          _currentCity,
        ),
        returnValueForMissingStub: null,
      );
  @override
  int get selectedAddressIndex => (super.noSuchMethod(
        Invocation.getter(#selectedAddressIndex),
        returnValue: 0,
      ) as int);
  @override
  set selectedAddressIndex(int? _selectedAddressIndex) => super.noSuchMethod(
        Invocation.setter(
          #selectedAddressIndex,
          _selectedAddressIndex,
        ),
        returnValueForMissingStub: null,
      );
  @override
  bool get isDefaultAddressCheckBoxValue => (super.noSuchMethod(
        Invocation.getter(#isDefaultAddressCheckBoxValue),
        returnValue: false,
      ) as bool);
  @override
  set isDefaultAddressCheckBoxValue(bool? _isDefaultAddressCheckBoxValue) =>
      super.noSuchMethod(
        Invocation.setter(
          #isDefaultAddressCheckBoxValue,
          _isDefaultAddressCheckBoxValue,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i1.GlobalKey<_i1.FormState> get globalKey => (super.noSuchMethod(
        Invocation.getter(#globalKey),
        returnValue: _FakeGlobalKey_0<_i1.FormState>(
          this,
          Invocation.getter(#globalKey),
        ),
      ) as _i1.GlobalKey<_i1.FormState>);
  @override
  _i1.TextEditingController get streetNameController => (super.noSuchMethod(
        Invocation.getter(#streetNameController),
        returnValue: _FakeTextEditingController_1(
          this,
          Invocation.getter(#streetNameController),
        ),
      ) as _i1.TextEditingController);
  @override
  _i1.TextEditingController get houseNumberController => (super.noSuchMethod(
        Invocation.getter(#houseNumberController),
        returnValue: _FakeTextEditingController_1(
          this,
          Invocation.getter(#houseNumberController),
        ),
      ) as _i1.TextEditingController);
  @override
  _i1.TextEditingController get cityController => (super.noSuchMethod(
        Invocation.getter(#cityController),
        returnValue: _FakeTextEditingController_1(
          this,
          Invocation.getter(#cityController),
        ),
      ) as _i1.TextEditingController);
  @override
  _i1.TextEditingController get stateController => (super.noSuchMethod(
        Invocation.getter(#stateController),
        returnValue: _FakeTextEditingController_1(
          this,
          Invocation.getter(#stateController),
        ),
      ) as _i1.TextEditingController);
  @override
  _i1.TextEditingController get postalCodeController => (super.noSuchMethod(
        Invocation.getter(#postalCodeController),
        returnValue: _FakeTextEditingController_1(
          this,
          Invocation.getter(#postalCodeController),
        ),
      ) as _i1.TextEditingController);
  @override
  _i1.TextEditingController get countryController => (super.noSuchMethod(
        Invocation.getter(#countryController),
        returnValue: _FakeTextEditingController_1(
          this,
          Invocation.getter(#countryController),
        ),
      ) as _i1.TextEditingController);
  @override
  _i1.TextEditingController get phoneNumberController => (super.noSuchMethod(
        Invocation.getter(#phoneNumberController),
        returnValue: _FakeTextEditingController_1(
          this,
          Invocation.getter(#phoneNumberController),
        ),
      ) as _i1.TextEditingController);
  @override
  _i1.FocusNode get phoneNumberFocusNode => (super.noSuchMethod(
        Invocation.getter(#phoneNumberFocusNode),
        returnValue: _FakeFocusNode_2(
          this,
          Invocation.getter(#phoneNumberFocusNode),
        ),
      ) as _i1.FocusNode);
  @override
  _i1.FocusNode get streetFocusNode => (super.noSuchMethod(
        Invocation.getter(#streetFocusNode),
        returnValue: _FakeFocusNode_2(
          this,
          Invocation.getter(#streetFocusNode),
        ),
      ) as _i1.FocusNode);
  @override
  _i1.FocusNode get houseNumberFocusNode => (super.noSuchMethod(
        Invocation.getter(#houseNumberFocusNode),
        returnValue: _FakeFocusNode_2(
          this,
          Invocation.getter(#houseNumberFocusNode),
        ),
      ) as _i1.FocusNode);
  @override
  _i1.FocusNode get countryFocusNode => (super.noSuchMethod(
        Invocation.getter(#countryFocusNode),
        returnValue: _FakeFocusNode_2(
          this,
          Invocation.getter(#countryFocusNode),
        ),
      ) as _i1.FocusNode);
  @override
  _i1.FocusNode get cityFocusNode => (super.noSuchMethod(
        Invocation.getter(#cityFocusNode),
        returnValue: _FakeFocusNode_2(
          this,
          Invocation.getter(#cityFocusNode),
        ),
      ) as _i1.FocusNode);
  @override
  _i1.FocusNode get stateFocusNode => (super.noSuchMethod(
        Invocation.getter(#stateFocusNode),
        returnValue: _FakeFocusNode_2(
          this,
          Invocation.getter(#stateFocusNode),
        ),
      ) as _i1.FocusNode);
  @override
  _i1.FocusNode get zipCodeFocusNode => (super.noSuchMethod(
        Invocation.getter(#zipCodeFocusNode),
        returnValue: _FakeFocusNode_2(
          this,
          Invocation.getter(#zipCodeFocusNode),
        ),
      ) as _i1.FocusNode);
  @override
  List<_i6.AddressModel> get addresses => (super.noSuchMethod(
        Invocation.getter(#addresses),
        returnValue: <_i6.AddressModel>[],
      ) as List<_i6.AddressModel>);
  @override
  set addresses(List<_i6.AddressModel>? _addresses) => super.noSuchMethod(
        Invocation.setter(
          #addresses,
          _addresses,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i3.ShippingLocationState get state => (super.noSuchMethod(
        Invocation.getter(#state),
        returnValue: _FakeShippingLocationState_3(
          this,
          Invocation.getter(#state),
        ),
      ) as _i3.ShippingLocationState);
  @override
  _i7.Stream<_i3.ShippingLocationState> get stream => (super.noSuchMethod(
        Invocation.getter(#stream),
        returnValue: _i7.Stream<_i3.ShippingLocationState>.empty(),
      ) as _i7.Stream<_i3.ShippingLocationState>);
  @override
  bool get isClosed => (super.noSuchMethod(
        Invocation.getter(#isClosed),
        returnValue: false,
      ) as bool);
  @override
  _i7.Future<void> init() => (super.noSuchMethod(
        Invocation.method(
          #init,
          [],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);
  @override
  void updateScreen() => super.noSuchMethod(
        Invocation.method(
          #updateScreen,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void changeDefaultAddress({required bool? value}) => super.noSuchMethod(
        Invocation.method(
          #changeDefaultAddress,
          [],
          {#value: value},
        ),
        returnValueForMissingStub: null,
      );
  @override
  void changeCity({required _i5.CityModel? cityModel}) => super.noSuchMethod(
        Invocation.method(
          #changeCity,
          [],
          {#cityModel: cityModel},
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i7.Future<void> determineAddressDetails() => (super.noSuchMethod(
        Invocation.method(
          #determineAddressDetails,
          [],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);
  @override
  _i7.Future<void> changeSelectedAddress(int? index) => (super.noSuchMethod(
        Invocation.method(
          #changeSelectedAddress,
          [index],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);
  @override
  _i7.Future<void> deleteAddress(int? index) => (super.noSuchMethod(
        Invocation.method(
          #deleteAddress,
          [index],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);
  @override
  _i7.Future<void> updateAddress() => (super.noSuchMethod(
        Invocation.method(
          #updateAddress,
          [],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);
  @override
  _i7.Future<bool> addAddress({
    required String? countryUUID,
    required String? cityUUID,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #addAddress,
          [],
          {
            #countryUUID: countryUUID,
            #cityUUID: cityUUID,
          },
        ),
        returnValue: _i7.Future<bool>.value(false),
      ) as _i7.Future<bool>);
  @override
  _i7.Future<void> getCities(String? countryUUID) => (super.noSuchMethod(
        Invocation.method(
          #getCities,
          [countryUUID],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);
  @override
  void emit(_i3.ShippingLocationState? state) => super.noSuchMethod(
        Invocation.method(
          #emit,
          [state],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void onChange(_i8.Change<_i3.ShippingLocationState>? change) =>
      super.noSuchMethod(
        Invocation.method(
          #onChange,
          [change],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void addError(
    Object? error, [
    StackTrace? stackTrace,
  ]) =>
      super.noSuchMethod(
        Invocation.method(
          #addError,
          [
            error,
            stackTrace,
          ],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void onError(
    Object? error,
    StackTrace? stackTrace,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #onError,
          [
            error,
            stackTrace,
          ],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i7.Future<void> close() => (super.noSuchMethod(
        Invocation.method(
          #close,
          [],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);
}

/// A class which mocks [BeneficiaryCubit].
///
/// See the documentation for Mockito's code generation for more information.
class MockBeneficiaryCubit extends _i2.Mock implements _i4.BeneficiaryCubit {
  MockBeneficiaryCubit() {
    _i2.throwOnMissingStub(this);
  }

  @override
  _i1.GlobalKey<_i1.FormState> get currentFormKey => (super.noSuchMethod(
        Invocation.getter(#currentFormKey),
        returnValue: _FakeGlobalKey_0<_i1.FormState>(
          this,
          Invocation.getter(#currentFormKey),
        ),
      ) as _i1.GlobalKey<_i1.FormState>);
  @override
  set currentFormKey(_i1.GlobalKey<_i1.FormState>? _currentFormKey) =>
      super.noSuchMethod(
        Invocation.setter(
          #currentFormKey,
          _currentFormKey,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i1.FocusNode get firstNameFocusNode => (super.noSuchMethod(
        Invocation.getter(#firstNameFocusNode),
        returnValue: _FakeFocusNode_2(
          this,
          Invocation.getter(#firstNameFocusNode),
        ),
      ) as _i1.FocusNode);
  @override
  _i1.FocusNode get lastNameFocusNode => (super.noSuchMethod(
        Invocation.getter(#lastNameFocusNode),
        returnValue: _FakeFocusNode_2(
          this,
          Invocation.getter(#lastNameFocusNode),
        ),
      ) as _i1.FocusNode);
  @override
  _i1.FocusNode get phoneNumberFocusNode => (super.noSuchMethod(
        Invocation.getter(#phoneNumberFocusNode),
        returnValue: _FakeFocusNode_2(
          this,
          Invocation.getter(#phoneNumberFocusNode),
        ),
      ) as _i1.FocusNode);
  @override
  _i1.FocusNode get accountNumberFocusNode => (super.noSuchMethod(
        Invocation.getter(#accountNumberFocusNode),
        returnValue: _FakeFocusNode_2(
          this,
          Invocation.getter(#accountNumberFocusNode),
        ),
      ) as _i1.FocusNode);
  @override
  _i1.FocusNode get ibanNumberFocusNode => (super.noSuchMethod(
        Invocation.getter(#ibanNumberFocusNode),
        returnValue: _FakeFocusNode_2(
          this,
          Invocation.getter(#ibanNumberFocusNode),
        ),
      ) as _i1.FocusNode);
  @override
  _i1.FocusNode get swiftCodeFocusNode => (super.noSuchMethod(
        Invocation.getter(#swiftCodeFocusNode),
        returnValue: _FakeFocusNode_2(
          this,
          Invocation.getter(#swiftCodeFocusNode),
        ),
      ) as _i1.FocusNode);
  @override
  String get currentInFavourite => (super.noSuchMethod(
        Invocation.getter(#currentInFavourite),
        returnValue: '',
      ) as String);
  @override
  set currentInFavourite(String? _currentInFavourite) => super.noSuchMethod(
        Invocation.setter(
          #currentInFavourite,
          _currentInFavourite,
        ),
        returnValueForMissingStub: null,
      );
  @override
  int get currentTransferTypeTapIndex => (super.noSuchMethod(
        Invocation.getter(#currentTransferTypeTapIndex),
        returnValue: 0,
      ) as int);
  @override
  set currentTransferTypeTapIndex(int? _currentTransferTypeTapIndex) =>
      super.noSuchMethod(
        Invocation.setter(
          #currentTransferTypeTapIndex,
          _currentTransferTypeTapIndex,
        ),
        returnValueForMissingStub: null,
      );
  @override
  int get currentTransferCategoryTapIndex => (super.noSuchMethod(
        Invocation.getter(#currentTransferCategoryTapIndex),
        returnValue: 0,
      ) as int);
  @override
  set currentTransferCategoryTapIndex(int? _currentTransferCategoryTapIndex) =>
      super.noSuchMethod(
        Invocation.setter(
          #currentTransferCategoryTapIndex,
          _currentTransferCategoryTapIndex,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i1.TextEditingController get searchBarController => (super.noSuchMethod(
        Invocation.getter(#searchBarController),
        returnValue: _FakeTextEditingController_1(
          this,
          Invocation.getter(#searchBarController),
        ),
      ) as _i1.TextEditingController);
  @override
  set searchBarController(_i1.TextEditingController? _searchBarController) =>
      super.noSuchMethod(
        Invocation.setter(
          #searchBarController,
          _searchBarController,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set iban(String? _iban) => super.noSuchMethod(
        Invocation.setter(
          #iban,
          _iban,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set swiftCode(String? _swiftCode) => super.noSuchMethod(
        Invocation.setter(
          #swiftCode,
          _swiftCode,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set phoneNumber(String? _phoneNumber) => super.noSuchMethod(
        Invocation.setter(
          #phoneNumber,
          _phoneNumber,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set accountNumber(String? _accountNumber) => super.noSuchMethod(
        Invocation.setter(
          #accountNumber,
          _accountNumber,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set firstName(String? _firstName) => super.noSuchMethod(
        Invocation.setter(
          #firstName,
          _firstName,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set lastName(String? _lastName) => super.noSuchMethod(
        Invocation.setter(
          #lastName,
          _lastName,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set currentRelationShip(String? _currentRelationShip) => super.noSuchMethod(
        Invocation.setter(
          #currentRelationShip,
          _currentRelationShip,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set currentWalletName(String? _currentWalletName) => super.noSuchMethod(
        Invocation.setter(
          #currentWalletName,
          _currentWalletName,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set currentCountry(_i9.Country? _currentCountry) => super.noSuchMethod(
        Invocation.setter(
          #currentCountry,
          _currentCountry,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set currentCurrency(_i10.Currency? _currentCurrency) => super.noSuchMethod(
        Invocation.setter(
          #currentCurrency,
          _currentCurrency,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set currentNationality(_i9.Country? _currentNationality) =>
      super.noSuchMethod(
        Invocation.setter(
          #currentNationality,
          _currentNationality,
        ),
        returnValueForMissingStub: null,
      );
  @override
  bool get isApiErrors => (super.noSuchMethod(
        Invocation.getter(#isApiErrors),
        returnValue: false,
      ) as bool);
  @override
  set isApiErrors(bool? _isApiErrors) => super.noSuchMethod(
        Invocation.setter(
          #isApiErrors,
          _isApiErrors,
        ),
        returnValueForMissingStub: null,
      );
  @override
  String get phoneNumberError => (super.noSuchMethod(
        Invocation.getter(#phoneNumberError),
        returnValue: '',
      ) as String);
  @override
  set phoneNumberError(String? _phoneNumberError) => super.noSuchMethod(
        Invocation.setter(
          #phoneNumberError,
          _phoneNumberError,
        ),
        returnValueForMissingStub: null,
      );
  @override
  String get accountNumberError => (super.noSuchMethod(
        Invocation.getter(#accountNumberError),
        returnValue: '',
      ) as String);
  @override
  set accountNumberError(String? _accountNumberError) => super.noSuchMethod(
        Invocation.setter(
          #accountNumberError,
          _accountNumberError,
        ),
        returnValueForMissingStub: null,
      );
  @override
  String get ibanError => (super.noSuchMethod(
        Invocation.getter(#ibanError),
        returnValue: '',
      ) as String);
  @override
  set ibanError(String? _ibanError) => super.noSuchMethod(
        Invocation.setter(
          #ibanError,
          _ibanError,
        ),
        returnValueForMissingStub: null,
      );
  @override
  String get swiftCodeError => (super.noSuchMethod(
        Invocation.getter(#swiftCodeError),
        returnValue: '',
      ) as String);
  @override
  set swiftCodeError(String? _swiftCodeError) => super.noSuchMethod(
        Invocation.setter(
          #swiftCodeError,
          _swiftCodeError,
        ),
        returnValueForMissingStub: null,
      );
  @override
  List<_i11.Beneficiary> get beneficiaries => (super.noSuchMethod(
        Invocation.getter(#beneficiaries),
        returnValue: <_i11.Beneficiary>[],
      ) as List<_i11.Beneficiary>);
  @override
  set beneficiaries(List<_i11.Beneficiary>? _beneficiaries) =>
      super.noSuchMethod(
        Invocation.setter(
          #beneficiaries,
          _beneficiaries,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set countries(List<_i9.Country>? _countries) => super.noSuchMethod(
        Invocation.setter(
          #countries,
          _countries,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set currencies(List<_i10.Currency>? _currencies) => super.noSuchMethod(
        Invocation.setter(
          #currencies,
          _currencies,
        ),
        returnValueForMissingStub: null,
      );
  @override
  List<String> get relationships => (super.noSuchMethod(
        Invocation.getter(#relationships),
        returnValue: <String>[],
      ) as List<String>);
  @override
  set relationships(List<String>? _relationships) => super.noSuchMethod(
        Invocation.setter(
          #relationships,
          _relationships,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i4.BeneficiaryState get state => (super.noSuchMethod(
        Invocation.getter(#state),
        returnValue: _FakeBeneficiaryState_4(
          this,
          Invocation.getter(#state),
        ),
      ) as _i4.BeneficiaryState);
  @override
  _i7.Stream<_i4.BeneficiaryState> get stream => (super.noSuchMethod(
        Invocation.getter(#stream),
        returnValue: _i7.Stream<_i4.BeneficiaryState>.empty(),
      ) as _i7.Stream<_i4.BeneficiaryState>);
  @override
  bool get isClosed => (super.noSuchMethod(
        Invocation.getter(#isClosed),
        returnValue: false,
      ) as bool);
  @override
  void setCurrentFormKey(_i1.GlobalKey<_i1.FormState>? value) =>
      super.noSuchMethod(
        Invocation.method(
          #setCurrentFormKey,
          [value],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void setCurrentInFavourite(String? value) => super.noSuchMethod(
        Invocation.method(
          #setCurrentInFavourite,
          [value],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void setCurrentTransferTapIndex(int? value) => super.noSuchMethod(
        Invocation.method(
          #setCurrentTransferTapIndex,
          [value],
        ),
        returnValueForMissingStub: null,
      );
  @override
  bool isInFav(String? beneficiaryUUID) => (super.noSuchMethod(
        Invocation.method(
          #isInFav,
          [beneficiaryUUID],
        ),
        returnValue: false,
      ) as bool);
  @override
  void updateState() => super.noSuchMethod(
        Invocation.method(
          #updateState,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void phoneNumberState() => super.noSuchMethod(
        Invocation.method(
          #phoneNumberState,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void accountNumberState() => super.noSuchMethod(
        Invocation.method(
          #accountNumberState,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void ibanNumberState() => super.noSuchMethod(
        Invocation.method(
          #ibanNumberState,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i7.Future<void> init() => (super.noSuchMethod(
        Invocation.method(
          #init,
          [],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);
  @override
  void configurationWhenTransferMethodChanged(
    String? value,
    int? index,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #configurationWhenTransferMethodChanged,
          [
            value,
            index,
          ],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void setCurrentCurrency(_i10.Currency? currency) => super.noSuchMethod(
        Invocation.method(
          #setCurrentCurrency,
          [currency],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void setCurrentWalletName(String? value) => super.noSuchMethod(
        Invocation.method(
          #setCurrentWalletName,
          [value],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void setCurrentNationality(_i9.Country? nationality) => super.noSuchMethod(
        Invocation.method(
          #setCurrentNationality,
          [nationality],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void setCurrentCountry(_i9.Country? country) => super.noSuchMethod(
        Invocation.method(
          #setCurrentCountry,
          [country],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void setCurrentRelationShip(String? value) => super.noSuchMethod(
        Invocation.method(
          #setCurrentRelationShip,
          [value],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void reset() => super.noSuchMethod(
        Invocation.method(
          #reset,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void resetApiErrors() => super.noSuchMethod(
        Invocation.method(
          #resetApiErrors,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void resetApiErrorsValue() => super.noSuchMethod(
        Invocation.method(
          #resetApiErrorsValue,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void filterByNameUsingEnteredTextInSearchBar(
    String? name,
    _i12.ServiceType? serviceType,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #filterByNameUsingEnteredTextInSearchBar,
          [
            name,
            serviceType,
          ],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void setCurrentTransferToTapIndex(int? value) => super.noSuchMethod(
        Invocation.method(
          #setCurrentTransferToTapIndex,
          [value],
        ),
        returnValueForMissingStub: null,
      );
  @override
  bool isNameContainsSearchBarText(_i11.Beneficiary? beneficiary) =>
      (super.noSuchMethod(
        Invocation.method(
          #isNameContainsSearchBarText,
          [beneficiary],
        ),
        returnValue: false,
      ) as bool);
  @override
  List<_i11.Beneficiary> filterBeneficiaries(_i12.ServiceType? currentMethod) =>
      (super.noSuchMethod(
        Invocation.method(
          #filterBeneficiaries,
          [currentMethod],
        ),
        returnValue: <_i11.Beneficiary>[],
      ) as List<_i11.Beneficiary>);
  @override
  bool isButtonEnabled() => (super.noSuchMethod(
        Invocation.method(
          #isButtonEnabled,
          [],
        ),
        returnValue: false,
      ) as bool);
  @override
  bool isValidForm(_i1.GlobalKey<_i1.FormState>? currentFormKey) =>
      (super.noSuchMethod(
        Invocation.method(
          #isValidForm,
          [currentFormKey],
        ),
        returnValue: false,
      ) as bool);
  @override
  void resetToInitialState() => super.noSuchMethod(
        Invocation.method(
          #resetToInitialState,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i7.Future<_i11.Beneficiary?> addNewBeneficiary(
          _i13.TransferMethodType? transferMethodType) =>
      (super.noSuchMethod(
        Invocation.method(
          #addNewBeneficiary,
          [transferMethodType],
        ),
        returnValue: _i7.Future<_i11.Beneficiary?>.value(),
      ) as _i7.Future<_i11.Beneficiary?>);
  @override
  void handleAddingNewBeneficiaryFailed(_i14.Failure? apiFailure) =>
      super.noSuchMethod(
        Invocation.method(
          #handleAddingNewBeneficiaryFailed,
          [apiFailure],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void setErrorsWhenErrorsInOneKey(_i14.Failure? apiFailure) =>
      super.noSuchMethod(
        Invocation.method(
          #setErrorsWhenErrorsInOneKey,
          [apiFailure],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i7.Future<void> getCountries() => (super.noSuchMethod(
        Invocation.method(
          #getCountries,
          [],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);
  @override
  _i7.Future<void> getCurrencies() => (super.noSuchMethod(
        Invocation.method(
          #getCurrencies,
          [],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);
  @override
  _i7.Future<void> favouriteToggle({required String? beneficiaryUUID}) =>
      (super.noSuchMethod(
        Invocation.method(
          #favouriteToggle,
          [],
          {#beneficiaryUUID: beneficiaryUUID},
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);
  @override
  _i7.Future<void> getBeneficiary({required _i12.ServiceType? serviceType}) =>
      (super.noSuchMethod(
        Invocation.method(
          #getBeneficiary,
          [],
          {#serviceType: serviceType},
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);
  @override
  _i7.Future<void> deleteBeneficiary(int? index) => (super.noSuchMethod(
        Invocation.method(
          #deleteBeneficiary,
          [index],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);
  @override
  void resetSearchBar(_i12.ServiceType? serviceType) => super.noSuchMethod(
        Invocation.method(
          #resetSearchBar,
          [serviceType],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void emit(_i4.BeneficiaryState? state) => super.noSuchMethod(
        Invocation.method(
          #emit,
          [state],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void onChange(_i8.Change<_i4.BeneficiaryState>? change) => super.noSuchMethod(
        Invocation.method(
          #onChange,
          [change],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void addError(
    Object? error, [
    StackTrace? stackTrace,
  ]) =>
      super.noSuchMethod(
        Invocation.method(
          #addError,
          [
            error,
            stackTrace,
          ],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void onError(
    Object? error,
    StackTrace? stackTrace,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #onError,
          [
            error,
            stackTrace,
          ],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i7.Future<void> close() => (super.noSuchMethod(
        Invocation.method(
          #close,
          [],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);
}
