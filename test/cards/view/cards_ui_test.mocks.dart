// Mocks generated by Mockito 5.3.2 from annotations
// in res_pay/test/cards/view/cards_ui_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i8;

import 'package:bloc/bloc.dart' as _i9;
import 'package:flutter/material.dart' as _i1;
import 'package:mockito/mockito.dart' as _i2;
import 'package:res_pay_merchant/features/dashboard/modules/home/modules/cards/controller/cards_cubit.dart'
    as _i4;
import 'package:res_pay_merchant/features/dashboard/modules/home/modules/cards/provider/model/credit_card_model.dart'
    as _i7;
import 'package:res_pay_merchant/features/dashboard/modules/home/modules/cards/provider/model/transaction_global_model.dart'
    as _i5;
import 'package:res_pay_merchant/features/dashboard/modules/home/provider/model/limits_model.dart'
    as _i3;
import 'package:res_pay_merchant/features/payment/modules/add_card/api/model/payment_method.dart'
    as _i6;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeGlobalKey_0<T extends _i1.State<_i1.StatefulWidget>>
    extends _i2.SmartFake implements _i1.GlobalKey<T> {
  _FakeGlobalKey_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakePageController_1 extends _i2.SmartFake
    implements _i1.PageController {
  _FakePageController_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeFocusNode_2 extends _i2.SmartFake implements _i1.FocusNode {
  _FakeFocusNode_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );

  @override
  String toString({_i1.DiagnosticLevel? minLevel = _i1.DiagnosticLevel.info}) =>
      super.toString();
}

class _FakeLimitsModel_3 extends _i2.SmartFake implements _i3.LimitsModel {
  _FakeLimitsModel_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeCardsState_4 extends _i2.SmartFake implements _i4.CardsState {
  _FakeCardsState_4(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [CardsCubit].
///
/// See the documentation for Mockito's code generation for more information.
class MockCardsCubit extends _i2.Mock implements _i4.CardsCubit {
  MockCardsCubit() {
    _i2.throwOnMissingStub(this);
  }

  @override
  String get cvv => (super.noSuchMethod(
        Invocation.getter(#cvv),
        returnValue: '',
      ) as String);
  @override
  set cvv(String? _cvv) => super.noSuchMethod(
        Invocation.setter(
          #cvv,
          _cvv,
        ),
        returnValueForMissingStub: null,
      );
  @override
  String get holderName => (super.noSuchMethod(
        Invocation.getter(#holderName),
        returnValue: '',
      ) as String);
  @override
  set holderName(String? _holderName) => super.noSuchMethod(
        Invocation.setter(
          #holderName,
          _holderName,
        ),
        returnValueForMissingStub: null,
      );
  @override
  String get date => (super.noSuchMethod(
        Invocation.getter(#date),
        returnValue: '',
      ) as String);
  @override
  set date(String? _date) => super.noSuchMethod(
        Invocation.setter(
          #date,
          _date,
        ),
        returnValueForMissingStub: null,
      );
  @override
  String get number => (super.noSuchMethod(
        Invocation.getter(#number),
        returnValue: '',
      ) as String);
  @override
  set number(String? _number) => super.noSuchMethod(
        Invocation.setter(
          #number,
          _number,
        ),
        returnValueForMissingStub: null,
      );
  @override
  String get methodUuid => (super.noSuchMethod(
        Invocation.getter(#methodUuid),
        returnValue: '',
      ) as String);
  @override
  set methodUuid(String? _methodUuid) => super.noSuchMethod(
        Invocation.setter(
          #methodUuid,
          _methodUuid,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i1.GlobalKey<_i1.FormState> get cardKey => (super.noSuchMethod(
        Invocation.getter(#cardKey),
        returnValue: _FakeGlobalKey_0<_i1.FormState>(
          this,
          Invocation.getter(#cardKey),
        ),
      ) as _i1.GlobalKey<_i1.FormState>);
  @override
  int get index => (super.noSuchMethod(
        Invocation.getter(#index),
        returnValue: 0,
      ) as int);
  @override
  set index(int? _index) => super.noSuchMethod(
        Invocation.setter(
          #index,
          _index,
        ),
        returnValueForMissingStub: null,
      );
  @override
  int get tapBarIndex => (super.noSuchMethod(
        Invocation.getter(#tapBarIndex),
        returnValue: 0,
      ) as int);
  @override
  set tapBarIndex(int? _tapBarIndex) => super.noSuchMethod(
        Invocation.setter(
          #tapBarIndex,
          _tapBarIndex,
        ),
        returnValueForMissingStub: null,
      );
  @override
  bool get lockCard => (super.noSuchMethod(
        Invocation.getter(#lockCard),
        returnValue: false,
      ) as bool);
  @override
  set lockCard(bool? _lockCard) => super.noSuchMethod(
        Invocation.setter(
          #lockCard,
          _lockCard,
        ),
        returnValueForMissingStub: null,
      );
  @override
  bool get enableNFC => (super.noSuchMethod(
        Invocation.getter(#enableNFC),
        returnValue: false,
      ) as bool);
  @override
  set enableNFC(bool? _enableNFC) => super.noSuchMethod(
        Invocation.setter(
          #enableNFC,
          _enableNFC,
        ),
        returnValueForMissingStub: null,
      );
  @override
  bool get enableOnlinePayments => (super.noSuchMethod(
        Invocation.getter(#enableOnlinePayments),
        returnValue: false,
      ) as bool);
  @override
  set enableOnlinePayments(bool? _enableOnlinePayments) => super.noSuchMethod(
        Invocation.setter(
          #enableOnlinePayments,
          _enableOnlinePayments,
        ),
        returnValueForMissingStub: null,
      );
  @override
  bool get enableCardPin => (super.noSuchMethod(
        Invocation.getter(#enableCardPin),
        returnValue: false,
      ) as bool);
  @override
  set enableCardPin(bool? _enableCardPin) => super.noSuchMethod(
        Invocation.setter(
          #enableCardPin,
          _enableCardPin,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i1.PageController get pageViewController => (super.noSuchMethod(
        Invocation.getter(#pageViewController),
        returnValue: _FakePageController_1(
          this,
          Invocation.getter(#pageViewController),
        ),
      ) as _i1.PageController);
  @override
  set pageViewController(_i1.PageController? _pageViewController) =>
      super.noSuchMethod(
        Invocation.setter(
          #pageViewController,
          _pageViewController,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i1.FocusNode get cardNumberFocusNode => (super.noSuchMethod(
        Invocation.getter(#cardNumberFocusNode),
        returnValue: _FakeFocusNode_2(
          this,
          Invocation.getter(#cardNumberFocusNode),
        ),
      ) as _i1.FocusNode);
  @override
  _i1.FocusNode get cvvFocusNode => (super.noSuchMethod(
        Invocation.getter(#cvvFocusNode),
        returnValue: _FakeFocusNode_2(
          this,
          Invocation.getter(#cvvFocusNode),
        ),
      ) as _i1.FocusNode);
  @override
  _i1.FocusNode get validUntilFocusNode => (super.noSuchMethod(
        Invocation.getter(#validUntilFocusNode),
        returnValue: _FakeFocusNode_2(
          this,
          Invocation.getter(#validUntilFocusNode),
        ),
      ) as _i1.FocusNode);
  @override
  _i1.FocusNode get nameFocusNode => (super.noSuchMethod(
        Invocation.getter(#nameFocusNode),
        returnValue: _FakeFocusNode_2(
          this,
          Invocation.getter(#nameFocusNode),
        ),
      ) as _i1.FocusNode);
  @override
  _i3.LimitsModel get limitsModel => (super.noSuchMethod(
        Invocation.getter(#limitsModel),
        returnValue: _FakeLimitsModel_3(
          this,
          Invocation.getter(#limitsModel),
        ),
      ) as _i3.LimitsModel);
  @override
  set limitsModel(_i3.LimitsModel? _limitsModel) => super.noSuchMethod(
        Invocation.setter(
          #limitsModel,
          _limitsModel,
        ),
        returnValueForMissingStub: null,
      );
  @override
  List<_i5.TransactionGlobalModel> get transactionModels => (super.noSuchMethod(
        Invocation.getter(#transactionModels),
        returnValue: <_i5.TransactionGlobalModel>[],
      ) as List<_i5.TransactionGlobalModel>);
  @override
  set transactionModels(List<_i5.TransactionGlobalModel>? _transactionModels) =>
      super.noSuchMethod(
        Invocation.setter(
          #transactionModels,
          _transactionModels,
        ),
        returnValueForMissingStub: null,
      );
  @override
  List<_i6.PaymentMethod> get paymentMethods => (super.noSuchMethod(
        Invocation.getter(#paymentMethods),
        returnValue: <_i6.PaymentMethod>[],
      ) as List<_i6.PaymentMethod>);
  @override
  set paymentMethods(List<_i6.PaymentMethod>? _paymentMethods) =>
      super.noSuchMethod(
        Invocation.setter(
          #paymentMethods,
          _paymentMethods,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i1.GlobalKey<_i1.FormState> get createCardKey => (super.noSuchMethod(
        Invocation.getter(#createCardKey),
        returnValue: _FakeGlobalKey_0<_i1.FormState>(
          this,
          Invocation.getter(#createCardKey),
        ),
      ) as _i1.GlobalKey<_i1.FormState>);
  @override
  List<_i7.CreditCardModel> get creditCardModels => (super.noSuchMethod(
        Invocation.getter(#creditCardModels),
        returnValue: <_i7.CreditCardModel>[],
      ) as List<_i7.CreditCardModel>);
  @override
  set creditCardModels(List<_i7.CreditCardModel>? _creditCardModels) =>
      super.noSuchMethod(
        Invocation.setter(
          #creditCardModels,
          _creditCardModels,
        ),
        returnValueForMissingStub: null,
      );
  @override
  List<bool> get creditCardsVisible => (super.noSuchMethod(
        Invocation.getter(#creditCardsVisible),
        returnValue: <bool>[],
      ) as List<bool>);
  @override
  set creditCardsVisible(List<bool>? _creditCardsVisible) => super.noSuchMethod(
        Invocation.setter(
          #creditCardsVisible,
          _creditCardsVisible,
        ),
        returnValueForMissingStub: null,
      );
  @override
  bool get enableCreateCardButton => (super.noSuchMethod(
        Invocation.getter(#enableCreateCardButton),
        returnValue: false,
      ) as bool);
  @override
  List<bool> get cardsVisible => (super.noSuchMethod(
        Invocation.getter(#cardsVisible),
        returnValue: <bool>[],
      ) as List<bool>);
  @override
  _i4.CardsState get state => (super.noSuchMethod(
        Invocation.getter(#state),
        returnValue: _FakeCardsState_4(
          this,
          Invocation.getter(#state),
        ),
      ) as _i4.CardsState);
  @override
  _i8.Stream<_i4.CardsState> get stream => (super.noSuchMethod(
        Invocation.getter(#stream),
        returnValue: _i8.Stream<_i4.CardsState>.empty(),
      ) as _i8.Stream<_i4.CardsState>);
  @override
  bool get isClosed => (super.noSuchMethod(
        Invocation.getter(#isClosed),
        returnValue: false,
      ) as bool);
  @override
  void toggleLockCard() => super.noSuchMethod(
        Invocation.method(
          #toggleLockCard,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void toggleNFC() => super.noSuchMethod(
        Invocation.method(
          #toggleNFC,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void toggleOnlinePayments() => super.noSuchMethod(
        Invocation.method(
          #toggleOnlinePayments,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void toggleCardPin() => super.noSuchMethod(
        Invocation.method(
          #toggleCardPin,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void onChangeTabBarIndex() => super.noSuchMethod(
        Invocation.method(
          #onChangeTabBarIndex,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void onPageChanged(int? newIndex) => super.noSuchMethod(
        Invocation.method(
          #onPageChanged,
          [newIndex],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i8.Future<void> init({int? newIndex}) => (super.noSuchMethod(
        Invocation.method(
          #init,
          [],
          {#newIndex: newIndex},
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);
  @override
  void onChangeCardVisibility(int? newIndex) => super.noSuchMethod(
        Invocation.method(
          #onChangeCardVisibility,
          [newIndex],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void setCvv(String? cvv) => super.noSuchMethod(
        Invocation.method(
          #setCvv,
          [cvv],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void setCardNumber(String? number) => super.noSuchMethod(
        Invocation.method(
          #setCardNumber,
          [number],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void setHolderName(String? name) => super.noSuchMethod(
        Invocation.method(
          #setHolderName,
          [name],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void setExpireDate(String? expireDate) => super.noSuchMethod(
        Invocation.method(
          #setExpireDate,
          [expireDate],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i8.Future<void> getCards() => (super.noSuchMethod(
        Invocation.method(
          #getCards,
          [],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);
  @override
  _i8.Future<void> getPaymentMethods() => (super.noSuchMethod(
        Invocation.method(
          #getPaymentMethods,
          [],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);
  @override
  _i8.Future<void> createCard() => (super.noSuchMethod(
        Invocation.method(
          #createCard,
          [],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);
  @override
  _i8.Future<void> deleteCard(int? deletedIndex) => (super.noSuchMethod(
        Invocation.method(
          #deleteCard,
          [deletedIndex],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);
  @override
  void resetCardValues() => super.noSuchMethod(
        Invocation.method(
          #resetCardValues,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void emit(_i4.CardsState? state) => super.noSuchMethod(
        Invocation.method(
          #emit,
          [state],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void onChange(_i9.Change<_i4.CardsState>? change) => super.noSuchMethod(
        Invocation.method(
          #onChange,
          [change],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void addError(
    Object? error, [
    StackTrace? stackTrace,
  ]) =>
      super.noSuchMethod(
        Invocation.method(
          #addError,
          [
            error,
            stackTrace,
          ],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void onError(
    Object? error,
    StackTrace? stackTrace,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #onError,
          [
            error,
            stackTrace,
          ],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i8.Future<void> close() => (super.noSuchMethod(
        Invocation.method(
          #close,
          [],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);
}
